================================================================================
COMPREHENSIVE CONTEXT-FREE GRAMMAR DUMP
================================================================================
Generated from LLVM-IR analysis
Total Functions: 9
Timestamp: 2025-07-02 02:12:18.760558
================================================================================

SUMMARY STATISTICS
--------------------------------------------------
Total Production Rules: 4080
Total Non-terminals: 750
Total Terminals: 142
Average Rules per Function: 453.33

FUZZING READINESS OVERVIEW
--------------------------------------------------
Average Fuzzing Score: 6.73/10.0
Total Choice Points: 304
Total Loop Patterns: 225
Functions with High Fuzzing Score (>7.0): 5

================================================================================
FUNCTION 1: jsmn_parse
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_PARSE
Production Rules: 1569
Non-terminals: 290
Terminals: 21

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 76
Choice Points: 132
Loop Patterns: 69
Path Alternatives: 284
Branching Factor: 5.51
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_104, BLOCK_105, BLOCK_115, BLOCK_118, BLOCK_127, BLOCK_132, BLOCK_138
  BLOCK_139, BLOCK_148, BLOCK_149, BLOCK_152, BLOCK_155, BLOCK_156, BLOCK_157, BLOCK_160
  BLOCK_169, BLOCK_174, BLOCK_178, BLOCK_179, BLOCK_182, BLOCK_183, BLOCK_193, BLOCK_195
  BLOCK_202, BLOCK_205, BLOCK_215, BLOCK_216, BLOCK_217, BLOCK_22, BLOCK_224, BLOCK_227
  BLOCK_232, BLOCK_242, BLOCK_252, BLOCK_257, BLOCK_260, BLOCK_268, BLOCK_276, BLOCK_284
  BLOCK_29, BLOCK_292, BLOCK_296, BLOCK_297, BLOCK_298, BLOCK_301, BLOCK_302, BLOCK_303
  BLOCK_313, BLOCK_315, BLOCK_322, BLOCK_325, BLOCK_335, BLOCK_336, BLOCK_337, BLOCK_342
  BLOCK_345, BLOCK_350, BLOCK_353, BLOCK_361, BLOCK_369, BLOCK_370, BLOCK_371, BLOCK_374
  BLOCK_375, BLOCK_377, BLOCK_39, BLOCK_41, BLOCK_51, BLOCK_56, BLOCK_57, BLOCK_65
  BLOCK_66, BLOCK_71, BLOCK_82, BLOCK_ENTRY, CHOICE_POINT, CONTENT_101, CONTENT_104, CONTENT_105
  CONTENT_115, CONTENT_118, CONTENT_127, CONTENT_132, CONTENT_138, CONTENT_139, CONTENT_148, CONTENT_149
  CONTENT_152, CONTENT_155, CONTENT_156, CONTENT_157, CONTENT_160, CONTENT_169, CONTENT_174, CONTENT_178
  CONTENT_179, CONTENT_182, CONTENT_183, CONTENT_193, CONTENT_195, CONTENT_202, CONTENT_205, CONTENT_215
  CONTENT_216, CONTENT_217, CONTENT_22, CONTENT_224, CONTENT_227, CONTENT_232, CONTENT_242, CONTENT_252
  CONTENT_257, CONTENT_260, CONTENT_268, CONTENT_276, CONTENT_284, CONTENT_29, CONTENT_292, CONTENT_296
  CONTENT_297, CONTENT_298, CONTENT_301, CONTENT_302, CONTENT_303, CONTENT_313, CONTENT_315, CONTENT_322
  CONTENT_325, CONTENT_335, CONTENT_336, CONTENT_337, CONTENT_342, CONTENT_345, CONTENT_350, CONTENT_353
  CONTENT_361, CONTENT_369, CONTENT_370, CONTENT_371, CONTENT_374, CONTENT_375, CONTENT_377, CONTENT_39
  CONTENT_41, CONTENT_51, CONTENT_56, CONTENT_57, CONTENT_65, CONTENT_66, CONTENT_71, CONTENT_82
  CONTENT_ENTRY, FUNC_JSMN_PARSE, INSTRUCTION_SEQ, INTERLEAVE_101, INTERLEAVE_115, INTERLEAVE_118, INTERLEAVE_127, INTERLEAVE_132
  INTERLEAVE_152, INTERLEAVE_157, INTERLEAVE_160, INTERLEAVE_169, INTERLEAVE_183, INTERLEAVE_195, INTERLEAVE_202, INTERLEAVE_22
  INTERLEAVE_224, INTERLEAVE_227, INTERLEAVE_232, INTERLEAVE_242, INTERLEAVE_257, INTERLEAVE_260, INTERLEAVE_268, INTERLEAVE_276
  INTERLEAVE_284, INTERLEAVE_303, INTERLEAVE_315, INTERLEAVE_322, INTERLEAVE_342, INTERLEAVE_350, INTERLEAVE_353, INTERLEAVE_361
  INTERLEAVE_39, INTERLEAVE_51, INTERLEAVE_57, INTERLEAVE_66, LOOP_115, LOOP_118, LOOP_127, LOOP_148
  LOOP_149, LOOP_157, LOOP_160, LOOP_169, LOOP_178, LOOP_179, LOOP_257, LOOP_260
  LOOP_268, LOOP_276, LOOP_284, LOOP_296, LOOP_297, LOOP_298, LOOP_350, LOOP_353
  LOOP_361, LOOP_370, LOOP_371, OPT_101, OPT_104, OPT_105, OPT_115, OPT_118
  OPT_127, OPT_132, OPT_138, OPT_139, OPT_148, OPT_149, OPT_152, OPT_155
  OPT_156, OPT_157, OPT_160, OPT_169, OPT_174, OPT_178, OPT_179, OPT_182
  OPT_183, OPT_193, OPT_195, OPT_202, OPT_205, OPT_215, OPT_216, OPT_217
  OPT_22, OPT_224, OPT_227, OPT_232, OPT_242, OPT_252, OPT_257, OPT_260
  OPT_268, OPT_276, OPT_284, OPT_29, OPT_292, OPT_296, OPT_297, OPT_298
  OPT_301, OPT_302, OPT_303, OPT_313, OPT_315, OPT_322, OPT_325, OPT_335
  OPT_336, OPT_337, OPT_342, OPT_345, OPT_350, OPT_353, OPT_361, OPT_369
  OPT_370, OPT_371, OPT_374, OPT_375, OPT_377, OPT_39, OPT_41, OPT_51
  OPT_56, OPT_57, OPT_65, OPT_66, OPT_71, OPT_82, OPT_ENTRY, OP_I32
  OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SELECT, SEXT, SUB, SWITCH
  ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_PARSE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 CHOICE_POINT
BLOCK_104 -> BRANCH
      | CONTENT_104 BLOCK_336
BLOCK_105 -> INSTRUCTION_SEQ
      | CONTENT_105 BLOCK_115
BLOCK_115 -> INSTRUCTION_SEQ
      | CONTENT_115 CHOICE_POINT
 | LOOP_115
BLOCK_118 -> INSTRUCTION_SEQ
      | CONTENT_118 CHOICE_POINT
 | LOOP_118
BLOCK_127 -> INSTRUCTION_SEQ
      | CONTENT_127 CHOICE_POINT
 | LOOP_127
BLOCK_132 -> INSTRUCTION_SEQ
      | CONTENT_132 CHOICE_POINT
BLOCK_138 -> INSTRUCTION_SEQ
      | CONTENT_138 BLOCK_377
BLOCK_139 -> INSTRUCTION_SEQ
      | CONTENT_139 BLOCK_152
BLOCK_148 -> BRANCH
      | CONTENT_148 BLOCK_149
 | LOOP_148
BLOCK_149 -> INSTRUCTION_SEQ
      | CONTENT_149 BLOCK_115
 | LOOP_149
BLOCK_152 -> INSTRUCTION_SEQ
      | CONTENT_152 CHOICE_POINT
BLOCK_155 -> INSTRUCTION_SEQ
      | CONTENT_155 BLOCK_377
BLOCK_156 -> BRANCH
      | CONTENT_156 BLOCK_157
BLOCK_157 -> INSTRUCTION_SEQ
      | CONTENT_157 CHOICE_POINT
 | LOOP_157
... and 61 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_29
      | BLOCK_39
 | BLOCK_29 BLOCK_39
      | ... and 96 more alternatives

Loops Rules:
LOOP_115 -> BLOCK_115
      | BLOCK_115 LOOP_115
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_148 -> BLOCK_148
      | BLOCK_148 LOOP_148
LOOP_149 -> BLOCK_149
      | BLOCK_149 LOOP_149
LOOP_157 -> BLOCK_157
      | BLOCK_157 LOOP_157
LOOP_160 -> BLOCK_160
      | BLOCK_160 LOOP_160
LOOP_169 -> BLOCK_169
      | BLOCK_169 LOOP_169
LOOP_178 -> BLOCK_178
      | BLOCK_178 LOOP_178
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
LOOP_257 -> BLOCK_257
      | BLOCK_257 LOOP_257
LOOP_260 -> BLOCK_260
      | BLOCK_260 LOOP_260
LOOP_268 -> BLOCK_268
      | BLOCK_268 LOOP_268
LOOP_276 -> BLOCK_276
      | BLOCK_276 LOOP_276
LOOP_284 -> BLOCK_284
      | BLOCK_284 LOOP_284
... and 8 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 887 more alternatives
LOOP_115 -> BLOCK_115
      | BLOCK_115 LOOP_115
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_148 -> BLOCK_148
      | BLOCK_148 LOOP_148
LOOP_149 -> BLOCK_149
      | BLOCK_149 LOOP_149
LOOP_157 -> BLOCK_157
      | BLOCK_157 LOOP_157
LOOP_160 -> BLOCK_160
      | BLOCK_160 LOOP_160
LOOP_169 -> BLOCK_169
      | BLOCK_169 LOOP_169
LOOP_178 -> BLOCK_178
      | BLOCK_178 LOOP_178
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
LOOP_257 -> BLOCK_257
      | BLOCK_257 LOOP_257
LOOP_260 -> BLOCK_260
      | BLOCK_260 LOOP_260
LOOP_268 -> BLOCK_268
      | BLOCK_268 LOOP_268
LOOP_276 -> BLOCK_276
      | BLOCK_276 LOOP_276
... and 9 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_29
      | BLOCK_39
 | BLOCK_29 BLOCK_39
      | ... and 96 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_104 -> BLOCK_104
      | EPSILON
OPT_105 -> BLOCK_105
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_118 -> BLOCK_118
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_132 -> BLOCK_132
      | EPSILON
OPT_138 -> BLOCK_138
      | EPSILON
OPT_139 -> BLOCK_139
      | EPSILON
OPT_148 -> BLOCK_148
      | EPSILON
OPT_149 -> BLOCK_149
      | EPSILON
OPT_152 -> BLOCK_152
      | EPSILON
OPT_155 -> BLOCK_155
      | EPSILON
OPT_156 -> BLOCK_156
      | EPSILON
... and 62 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_104 -> INSTRUCTION_SEQ
     CONTENT_105 -> INSTRUCTION_SEQ
     CONTENT_115 -> INSTRUCTION_SEQ
     CONTENT_118 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_132 -> INSTRUCTION_SEQ
     CONTENT_138 -> INSTRUCTION_SEQ
     CONTENT_139 -> INSTRUCTION_SEQ
     CONTENT_148 -> INSTRUCTION_SEQ
     CONTENT_149 -> INSTRUCTION_SEQ
     CONTENT_152 -> INSTRUCTION_SEQ
     CONTENT_155 -> INSTRUCTION_SEQ
     CONTENT_156 -> INSTRUCTION_SEQ
     CONTENT_157 -> INSTRUCTION_SEQ
     ... and 92 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 2: jsmn_alloc_token
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_ALLOC_TOKEN
Production Rules: 115
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 7.67
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_15, BLOCK_16, BLOCK_31, BLOCK_ENTRY, CHOICE_POINT, CONTENT_15, CONTENT_16, CONTENT_31
  CONTENT_ENTRY, FUNC_JSMN_ALLOC_TOKEN, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_15, OPT_16, OPT_31, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_ALLOC_TOKEN -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_31
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_31
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_16
 | BLOCK_15 BLOCK_16

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 85 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_16
 | BLOCK_15 BLOCK_16
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_15
      | BLOCK_15 BLOCK_16
 | BLOCK_16
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 3: jsmn_parse_string
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_PARSE_STRING
Production Rules: 884
Non-terminals: 147
Terminals: 19

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 35
Choice Points: 64
Loop Patterns: 60
Path Alternatives: 134
Branching Factor: 6.23
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_101, BLOCK_106, BLOCK_109, BLOCK_116, BLOCK_126, BLOCK_128, BLOCK_138
  BLOCK_148, BLOCK_158, BLOCK_168, BLOCK_178, BLOCK_188, BLOCK_192, BLOCK_197, BLOCK_200
  BLOCK_205, BLOCK_209, BLOCK_210, BLOCK_211, BLOCK_216, BLOCK_220, BLOCK_23, BLOCK_30
  BLOCK_40, BLOCK_42, BLOCK_53, BLOCK_56, BLOCK_57, BLOCK_64, BLOCK_68, BLOCK_75
  BLOCK_79, BLOCK_87, BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_101, CONTENT_106, CONTENT_109
  CONTENT_116, CONTENT_126, CONTENT_128, CONTENT_138, CONTENT_148, CONTENT_158, CONTENT_168, CONTENT_178
  CONTENT_188, CONTENT_192, CONTENT_197, CONTENT_200, CONTENT_205, CONTENT_209, CONTENT_210, CONTENT_211
  CONTENT_216, CONTENT_220, CONTENT_23, CONTENT_30, CONTENT_40, CONTENT_42, CONTENT_53, CONTENT_56
  CONTENT_57, CONTENT_64, CONTENT_68, CONTENT_75, CONTENT_79, CONTENT_87, CONTENT_ENTRY, FUNC_JSMN_PARSE_STRING
  INSTRUCTION_SEQ, INTERLEAVE_106, INTERLEAVE_109, INTERLEAVE_126, INTERLEAVE_128, INTERLEAVE_138, INTERLEAVE_148, INTERLEAVE_158
  INTERLEAVE_168, INTERLEAVE_178, INTERLEAVE_23, INTERLEAVE_40, INTERLEAVE_42, INTERLEAVE_53, INTERLEAVE_57, INTERLEAVE_75
  INTERLEAVE_79, LOOP_106, LOOP_109, LOOP_116, LOOP_126, LOOP_128, LOOP_138, LOOP_148
  LOOP_158, LOOP_168, LOOP_178, LOOP_192, LOOP_197, LOOP_210, LOOP_211, LOOP_23
  LOOP_30, LOOP_40, LOOP_42, LOOP_75, LOOP_79, OPT_100, OPT_101, OPT_106
  OPT_109, OPT_116, OPT_126, OPT_128, OPT_138, OPT_148, OPT_158, OPT_168
  OPT_178, OPT_188, OPT_192, OPT_197, OPT_200, OPT_205, OPT_209, OPT_210
  OPT_211, OPT_216, OPT_220, OPT_23, OPT_30, OPT_40, OPT_42, OPT_53
  OPT_56, OPT_57, OPT_64, OPT_68, OPT_75, OPT_79, OPT_87, OPT_ENTRY
  OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT, SWITCH, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_PARSE_STRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> BRANCH
      | CONTENT_100 BLOCK_209
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 BLOCK_106
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 CHOICE_POINT
 | LOOP_106
BLOCK_109 -> INSTRUCTION_SEQ
      | CONTENT_109 CHOICE_POINT
 | LOOP_109
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 BLOCK_126
 | LOOP_116
BLOCK_126 -> INSTRUCTION_SEQ
      | CONTENT_126 CHOICE_POINT
 | LOOP_126
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128 CHOICE_POINT
 | LOOP_128
BLOCK_138 -> INSTRUCTION_SEQ
      | CONTENT_138 CHOICE_POINT
 | LOOP_138
BLOCK_148 -> INSTRUCTION_SEQ
      | CONTENT_148 CHOICE_POINT
 | LOOP_148
BLOCK_158 -> INSTRUCTION_SEQ
      | CONTENT_158 CHOICE_POINT
 | LOOP_158
BLOCK_168 -> INSTRUCTION_SEQ
      | CONTENT_168 CHOICE_POINT
 | LOOP_168
BLOCK_178 -> INSTRUCTION_SEQ
      | CONTENT_178 CHOICE_POINT
 | LOOP_178
BLOCK_188 -> INSTRUCTION_SEQ
      | CONTENT_188 BLOCK_220
BLOCK_192 -> INSTRUCTION_SEQ
      | CONTENT_192 BLOCK_197
 | LOOP_192
BLOCK_197 -> INSTRUCTION_SEQ
      | CONTENT_197 BLOCK_106
 | LOOP_197
... and 20 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_30
      | BLOCK_40
 | BLOCK_30 BLOCK_40
      | ... and 45 more alternatives

Loops Rules:
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_109 -> BLOCK_109
      | BLOCK_109 LOOP_109
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_126 -> BLOCK_126
      | BLOCK_126 LOOP_126
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_138 -> BLOCK_138
      | BLOCK_138 LOOP_138
LOOP_148 -> BLOCK_148
      | BLOCK_148 LOOP_148
LOOP_158 -> BLOCK_158
      | BLOCK_158 LOOP_158
LOOP_168 -> BLOCK_168
      | BLOCK_168 LOOP_168
LOOP_178 -> BLOCK_178
      | BLOCK_178 LOOP_178
LOOP_192 -> BLOCK_192
      | BLOCK_192 LOOP_192
LOOP_197 -> BLOCK_197
      | BLOCK_197 LOOP_197
LOOP_210 -> BLOCK_210
      | BLOCK_210 LOOP_210
LOOP_211 -> BLOCK_211
      | BLOCK_211 LOOP_211
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
... and 5 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 535 more alternatives
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_109 -> BLOCK_109
      | BLOCK_109 LOOP_109
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_126 -> BLOCK_126
      | BLOCK_126 LOOP_126
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_138 -> BLOCK_138
      | BLOCK_138 LOOP_138
LOOP_148 -> BLOCK_148
      | BLOCK_148 LOOP_148
LOOP_158 -> BLOCK_158
      | BLOCK_158 LOOP_158
LOOP_168 -> BLOCK_168
      | BLOCK_168 LOOP_168
LOOP_178 -> BLOCK_178
      | BLOCK_178 LOOP_178
LOOP_192 -> BLOCK_192
      | BLOCK_192 LOOP_192
LOOP_197 -> BLOCK_197
      | BLOCK_197 LOOP_197
LOOP_210 -> BLOCK_210
      | BLOCK_210 LOOP_210
LOOP_211 -> BLOCK_211
      | BLOCK_211 LOOP_211
... and 6 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_30
      | BLOCK_40
 | BLOCK_30 BLOCK_40
      | ... and 45 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_101 -> BLOCK_101
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_109 -> BLOCK_109
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_126 -> BLOCK_126
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_138 -> BLOCK_138
      | EPSILON
OPT_148 -> BLOCK_148
      | EPSILON
OPT_158 -> BLOCK_158
      | EPSILON
OPT_168 -> BLOCK_168
      | EPSILON
OPT_178 -> BLOCK_178
      | EPSILON
OPT_188 -> BLOCK_188
      | EPSILON
OPT_192 -> BLOCK_192
      | EPSILON
... and 21 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_109 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_126 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_138 -> INSTRUCTION_SEQ
     CONTENT_148 -> INSTRUCTION_SEQ
     CONTENT_158 -> INSTRUCTION_SEQ
     CONTENT_168 -> INSTRUCTION_SEQ
     CONTENT_178 -> INSTRUCTION_SEQ
     CONTENT_188 -> INSTRUCTION_SEQ
     CONTENT_192 -> INSTRUCTION_SEQ
     CONTENT_197 -> INSTRUCTION_SEQ
     ... and 34 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 4: jsmn_parse_primitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_PARSE_PRIMITIVE
Production Rules: 407
Non-terminals: 69
Terminals: 19

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 19
Choice Points: 24
Loop Patterns: 0
Path Alternatives: 62
Branching Factor: 6.36
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_107, BLOCK_17, BLOCK_24, BLOCK_34, BLOCK_36, BLOCK_45, BLOCK_46, BLOCK_47
  BLOCK_57, BLOCK_67, BLOCK_71, BLOCK_72, BLOCK_77, BLOCK_78, BLOCK_81, BLOCK_86
  BLOCK_93, BLOCK_97, BLOCK_ENTRY, CHOICE_POINT, CONTENT_107, CONTENT_17, CONTENT_24, CONTENT_34
  CONTENT_36, CONTENT_45, CONTENT_46, CONTENT_47, CONTENT_57, CONTENT_67, CONTENT_71, CONTENT_72
  CONTENT_77, CONTENT_78, CONTENT_81, CONTENT_86, CONTENT_93, CONTENT_97, CONTENT_ENTRY, FUNC_JSMN_PARSE_PRIMITIVE
  INSTRUCTION_SEQ, INTERLEAVE_17, INTERLEAVE_34, INTERLEAVE_47, INTERLEAVE_57, INTERLEAVE_78, INTERLEAVE_86, OPT_107
  OPT_17, OPT_24, OPT_34, OPT_36, OPT_45, OPT_46, OPT_47, OPT_57
  OPT_67, OPT_71, OPT_72, OPT_77, OPT_78, OPT_81, OPT_86, OPT_93
  OPT_97, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT, SWITCH, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_PARSE_PRIMITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_107 -> INSTRUCTION_SEQ
      | CONTENT_107
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 BLOCK_34
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 CHOICE_POINT
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36
BLOCK_45 -> BRANCH
      | CONTENT_45 BLOCK_78
BLOCK_46 -> BRANCH
      | CONTENT_46 BLOCK_47
BLOCK_47 -> INSTRUCTION_SEQ
      | CONTENT_47 CHOICE_POINT
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57 CHOICE_POINT
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67 BLOCK_107
BLOCK_71 -> BRANCH
      | CONTENT_71 BLOCK_72
BLOCK_72 -> INSTRUCTION_SEQ
      | CONTENT_72 BLOCK_17
BLOCK_77 -> BRANCH
      | CONTENT_77 BLOCK_78
BLOCK_78 -> INSTRUCTION_SEQ
      | CONTENT_78 CHOICE_POINT
BLOCK_81 -> INSTRUCTION_SEQ
      | CONTENT_81 BLOCK_107
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_24
      | BLOCK_34
 | BLOCK_24 BLOCK_34
      | ... and 15 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 268 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_24
      | BLOCK_34
 | BLOCK_24 BLOCK_34
      | ... and 15 more alternatives
OPT_107 -> BLOCK_107
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_47 -> BLOCK_47
      | EPSILON
OPT_57 -> BLOCK_57
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
OPT_71 -> BLOCK_71
      | EPSILON
OPT_72 -> BLOCK_72
      | EPSILON
OPT_77 -> BLOCK_77
      | EPSILON
OPT_78 -> BLOCK_78
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_47 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     CONTENT_67 -> INSTRUCTION_SEQ
     CONTENT_71 -> INSTRUCTION_SEQ
     CONTENT_72 -> INSTRUCTION_SEQ
     CONTENT_77 -> INSTRUCTION_SEQ
     CONTENT_78 -> INSTRUCTION_SEQ
     CONTENT_81 -> INSTRUCTION_SEQ
     CONTENT_86 -> INSTRUCTION_SEQ
     CONTENT_93 -> INSTRUCTION_SEQ
     ... and 8 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 5: jsmn_init
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_INIT
Production Rules: 34
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.50
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_JSMN_INIT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, GEP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_INIT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 26 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 6: main
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_MAIN
Production Rules: 641
Non-terminals: 138
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 32
Choice Points: 56
Loop Patterns: 72
Path Alternatives: 120
Branching Factor: 4.71
Estimated Depth: 5
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, MUL, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_107, BLOCK_114, BLOCK_115, BLOCK_116, BLOCK_117, BLOCK_118, BLOCK_119
  BLOCK_122, BLOCK_127, BLOCK_128, BLOCK_129, BLOCK_132, BLOCK_133, BLOCK_20, BLOCK_21
  BLOCK_24, BLOCK_29, BLOCK_30, BLOCK_31, BLOCK_35, BLOCK_42, BLOCK_47, BLOCK_55
  BLOCK_64, BLOCK_69, BLOCK_80, BLOCK_84, BLOCK_91, BLOCK_98, BLOCK_99, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_100, CONTENT_107, CONTENT_114, CONTENT_115, CONTENT_116, CONTENT_117, CONTENT_118
  CONTENT_119, CONTENT_122, CONTENT_127, CONTENT_128, CONTENT_129, CONTENT_132, CONTENT_133, CONTENT_20
  CONTENT_21, CONTENT_24, CONTENT_29, CONTENT_30, CONTENT_31, CONTENT_35, CONTENT_42, CONTENT_47
  CONTENT_55, CONTENT_64, CONTENT_69, CONTENT_80, CONTENT_84, CONTENT_91, CONTENT_98, CONTENT_99
  CONTENT_ENTRY, FUNC_MAIN, INSTRUCTION_SEQ, INTERLEAVE_100, INTERLEAVE_107, INTERLEAVE_21, INTERLEAVE_24, INTERLEAVE_31
  INTERLEAVE_35, INTERLEAVE_42, INTERLEAVE_47, INTERLEAVE_64, INTERLEAVE_69, INTERLEAVE_80, INTERLEAVE_84, INTERLEAVE_91
  INTERLEAVE_ENTRY, LOOP_100, LOOP_107, LOOP_114, LOOP_115, LOOP_116, LOOP_117, LOOP_118
  LOOP_119, LOOP_122, LOOP_127, LOOP_128, LOOP_129, LOOP_31, LOOP_35, LOOP_42
  LOOP_47, LOOP_55, LOOP_64, LOOP_69, LOOP_80, LOOP_84, LOOP_91, LOOP_98
  LOOP_99, OPT_100, OPT_107, OPT_114, OPT_115, OPT_116, OPT_117, OPT_118
  OPT_119, OPT_122, OPT_127, OPT_128, OPT_129, OPT_132, OPT_133, OPT_20
  OPT_21, OPT_24, OPT_29, OPT_30, OPT_31, OPT_35, OPT_42, OPT_47
  OPT_55, OPT_64, OPT_69, OPT_80, OPT_84, OPT_91, OPT_98, OPT_99
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, MUL, OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_MAIN -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 CHOICE_POINT
 | LOOP_100
BLOCK_107 -> INSTRUCTION_SEQ
      | CONTENT_107 CHOICE_POINT
 | LOOP_107
BLOCK_114 -> BRANCH
      | CONTENT_114 BLOCK_115
 | LOOP_114
BLOCK_115 -> BRANCH
      | CONTENT_115 BLOCK_116
 | LOOP_115
BLOCK_116 -> BRANCH
      | CONTENT_116 BLOCK_117
 | LOOP_116
BLOCK_117 -> BRANCH
      | CONTENT_117 BLOCK_118
 | LOOP_117
BLOCK_118 -> BRANCH
      | CONTENT_118 BLOCK_119
 | LOOP_118
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 BLOCK_64
 | LOOP_119
BLOCK_122 -> INSTRUCTION_SEQ
      | CONTENT_122 BLOCK_127
 | LOOP_122
BLOCK_127 -> BRANCH
      | CONTENT_127 BLOCK_128
 | LOOP_127
BLOCK_128 -> BRANCH
      | CONTENT_128 BLOCK_129
 | LOOP_128
BLOCK_129 -> INSTRUCTION_SEQ
      | CONTENT_129 BLOCK_31
 | LOOP_129
BLOCK_132 -> INSTRUCTION_SEQ
      | CONTENT_132 BLOCK_133
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_133
... and 17 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_20
      | BLOCK_21
 | BLOCK_20 BLOCK_21
      | ... and 39 more alternatives

Loops Rules:
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_114 -> BLOCK_114
      | BLOCK_114 LOOP_114
LOOP_115 -> BLOCK_115
      | BLOCK_115 LOOP_115
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_122 -> BLOCK_122
      | BLOCK_122 LOOP_122
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_129 -> BLOCK_129
      | BLOCK_129 LOOP_129
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_35 -> BLOCK_35
      | BLOCK_35 LOOP_35
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
... and 9 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 308 more alternatives
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_114 -> BLOCK_114
      | BLOCK_114 LOOP_114
LOOP_115 -> BLOCK_115
      | BLOCK_115 LOOP_115
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_122 -> BLOCK_122
      | BLOCK_122 LOOP_122
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_129 -> BLOCK_129
      | BLOCK_129 LOOP_129
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_35 -> BLOCK_35
      | BLOCK_35 LOOP_35
... and 10 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_20
      | BLOCK_21
 | BLOCK_20 BLOCK_21
      | ... and 39 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_107 -> BLOCK_107
      | EPSILON
OPT_114 -> BLOCK_114
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_118 -> BLOCK_118
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_122 -> BLOCK_122
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_129 -> BLOCK_129
      | EPSILON
OPT_132 -> BLOCK_132
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
... and 18 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_107 -> INSTRUCTION_SEQ
     CONTENT_114 -> INSTRUCTION_SEQ
     CONTENT_115 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_117 -> INSTRUCTION_SEQ
     CONTENT_118 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_122 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_129 -> INSTRUCTION_SEQ
     CONTENT_132 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     ... and 30 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 7: strlen_custom
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_STRLEN_CUSTOM
Production Rules: 79
Non-terminals: 19
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.60/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 6
Path Alternatives: 12
Branching Factor: 4.65
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_4, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_4
  CONTENT_ENTRY, FUNC_STRLEN_CUSTOM, INSTRUCTION_SEQ, INTERLEAVE_4, LOOP_12, LOOP_4, OPT_12, OPT_15
  OPT_4, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_STRLEN_CUSTOM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_4
 | LOOP_12
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15
BLOCK_4 -> INSTRUCTION_SEQ
      | CONTENT_4 CHOICE_POINT
 | LOOP_4
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_4

Control Flow Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_15
 | BLOCK_12 BLOCK_15

Loops Rules:
LOOP_12 -> BLOCK_12
      | BLOCK_12 LOOP_12
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 43 more alternatives
LOOP_12 -> BLOCK_12
      | BLOCK_12 LOOP_12
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_15
 | BLOCK_12 BLOCK_15
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_4 -> BLOCK_4
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_4 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_4 -> BLOCK_12
      | BLOCK_12 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 8: jsoneq
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSONEQ
Production Rules: 293
Non-terminals: 60
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 15
Choice Points: 20
Loop Patterns: 18
Path Alternatives: 50
Branching Factor: 5.05
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_15, BLOCK_23, BLOCK_26, BLOCK_36, BLOCK_37, BLOCK_41, BLOCK_59
  BLOCK_60, BLOCK_61, BLOCK_64, BLOCK_65, BLOCK_66, BLOCK_67, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_14, CONTENT_15, CONTENT_23, CONTENT_26, CONTENT_36, CONTENT_37, CONTENT_41, CONTENT_59
  CONTENT_60, CONTENT_61, CONTENT_64, CONTENT_65, CONTENT_66, CONTENT_67, CONTENT_ENTRY, FUNC_JSONEQ
  INSTRUCTION_SEQ, INTERLEAVE_15, INTERLEAVE_26, INTERLEAVE_37, INTERLEAVE_41, INTERLEAVE_ENTRY, LOOP_15, LOOP_23
  LOOP_37, LOOP_41, LOOP_60, LOOP_61, OPT_14, OPT_15, OPT_23, OPT_26
  OPT_36, OPT_37, OPT_41, OPT_59, OPT_60, OPT_61, OPT_64, OPT_65
  OPT_66, OPT_67, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SEXT, SUB

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSONEQ -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_15
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
 | LOOP_15
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_15
 | LOOP_23
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_37
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
 | LOOP_37
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 CHOICE_POINT
 | LOOP_41
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59 BLOCK_67
BLOCK_60 -> BRANCH
      | CONTENT_60 BLOCK_61
 | LOOP_60
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61 BLOCK_37
 | LOOP_61
BLOCK_64 -> INSTRUCTION_SEQ
      | CONTENT_64 BLOCK_67
BLOCK_65 -> BRANCH
      | CONTENT_65 BLOCK_66
BLOCK_66 -> INSTRUCTION_SEQ
      | CONTENT_66 BLOCK_67
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_66
 | BLOCK_14 BLOCK_66
      | ... and 12 more alternatives

Loops Rules:
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_60 -> BLOCK_60
      | BLOCK_60 LOOP_60
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 162 more alternatives
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_60 -> BLOCK_60
      | BLOCK_60 LOOP_60
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_66
 | BLOCK_14 BLOCK_66
      | ... and 12 more alternatives
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
OPT_60 -> BLOCK_60
      | EPSILON
OPT_61 -> BLOCK_61
      | EPSILON
OPT_64 -> BLOCK_64
      | EPSILON
OPT_65 -> BLOCK_65
      | EPSILON
OPT_66 -> BLOCK_66
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
... and 1 more paths & alternatives rules

Other Rules:
CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_59 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_61 -> INSTRUCTION_SEQ
     CONTENT_64 -> INSTRUCTION_SEQ
     CONTENT_65 -> INSTRUCTION_SEQ
     CONTENT_66 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_15 -> BLOCK_23
      | BLOCK_23 BLOCK_26
 | BLOCK_26
      | ... and 1 more alternatives
... and 4 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 9: jsmn_fill_token
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_JSMN_FILL_TOKEN
Production Rules: 58
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 14.50
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_JSMN_FILL_TOKEN, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, GEP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_JSMN_FILL_TOKEN -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 50 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
END OF GRAMMAR DUMP
================================================================================
