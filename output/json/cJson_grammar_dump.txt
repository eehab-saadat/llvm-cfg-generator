================================================================================
COMPREHENSIVE CONTEXT-FREE GRAMMAR DUMP
================================================================================
Generated from LLVM-IR analysis
Total Functions: 146
Timestamp: 2025-07-02 02:12:20.095082
================================================================================

SUMMARY STATISTICS
--------------------------------------------------
Total Production Rules: 33184
Total Non-terminals: 6452
Total Terminals: 2022
Average Rules per Function: 227.29

FUZZING READINESS OVERVIEW
--------------------------------------------------
Average Fuzzing Score: 5.85/10.0
Total Choice Points: 2592
Total Loop Patterns: 1182
Functions with High Fuzzing Score (>7.0): 64

================================================================================
FUNCTION 1: cJSON_GetErrorPtr
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETERRORPTR
Production Rules: 18
Non-terminals: 5
Terminals: 7

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 4.50
Estimated Depth: 2
Instruction Types: RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_GETERRORPTR, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, GEP, INSTRUCTION_SEQ, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETERRORPTR -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ OR
      | ... and 10 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 2: cJSON_GetStringValue
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETSTRINGVALUE
Production Rules: 67
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.47
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_7, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_7, CONTENT_8
  CONTENT_ENTRY, FUNC_CJSON_GETSTRINGVALUE, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_12, OPT_7, OPT_8, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETSTRINGVALUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_12
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_12
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_7
 | BLOCK_8 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 37 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_7
 | BLOCK_8 BLOCK_7
OPT_12 -> BLOCK_12
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 3: cJSON_IsString
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISSTRING
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISSTRING, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISSTRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 4: cJSON_GetNumberValue
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETNUMBERVALUE
Production Rules: 67
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.47
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_7, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_7, CONTENT_8
  CONTENT_ENTRY, FUNC_CJSON_GETNUMBERVALUE, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_12, OPT_7, OPT_8, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETNUMBERVALUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_12
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_12
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_7
 | BLOCK_8 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 37 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_7
 | BLOCK_8 BLOCK_7
OPT_12 -> BLOCK_12
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 5: cJSON_IsNumber
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISNUMBER
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISNUMBER, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISNUMBER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 6: cJSON_Version
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_VERSION
Production Rules: 14
Non-terminals: 5
Terminals: 7

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 3.50
Estimated Depth: 2
Instruction Types: CALL, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_VERSION, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, OP_DEFINE, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_VERSION -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ CALL
      | ... and 6 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 7: cJSON_InitHooks
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_INITHOOKS
Production Rules: 181
Non-terminals: 39
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 10
Choice Points: 20
Loop Patterns: 0
Path Alternatives: 40
Branching Factor: 4.89
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_15, BLOCK_20, BLOCK_24, BLOCK_27, BLOCK_30, BLOCK_31, BLOCK_5
  BLOCK_6, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_15, CONTENT_20, CONTENT_24, CONTENT_27
  CONTENT_30, CONTENT_31, CONTENT_5, CONTENT_6, CONTENT_ENTRY, FUNC_CJSON_INITHOOKS, INSTRUCTION_SEQ, INTERLEAVE_15
  INTERLEAVE_24, INTERLEAVE_27, INTERLEAVE_6, INTERLEAVE_ENTRY, OPT_11, OPT_15, OPT_20, OPT_24
  OPT_27, OPT_30, OPT_31, OPT_5, OPT_6, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_INITHOOKS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_15
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_24
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 BLOCK_31
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_31
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_6
 | BLOCK_5 BLOCK_6
      | ... and 12 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 93 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_6
 | BLOCK_5 BLOCK_6
      | ... and 12 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_5 -> BLOCK_5
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_15 -> BLOCK_20
      | BLOCK_20 BLOCK_24
 | BLOCK_24
      | ... and 1 more alternatives
INTERLEAVE_24 -> BLOCK_27
      | BLOCK_27 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_27 -> BLOCK_30
      | BLOCK_30 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_6 -> BLOCK_11
      | BLOCK_11 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_6
 | BLOCK_6
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 8: cJSON_Delete
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DELETE
Production Rules: 314
Non-terminals: 61
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 13
Choice Points: 28
Loop Patterns: 33
Path Alternatives: 54
Branching Factor: 5.32
Estimated Depth: 4
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_21, BLOCK_25, BLOCK_31, BLOCK_36, BLOCK_4, BLOCK_43, BLOCK_49
  BLOCK_54, BLOCK_61, BLOCK_65, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_21
  CONTENT_25, CONTENT_31, CONTENT_36, CONTENT_4, CONTENT_43, CONTENT_49, CONTENT_54, CONTENT_61
  CONTENT_65, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_DELETE, INSTRUCTION_SEQ, INTERLEAVE_16, INTERLEAVE_25, INTERLEAVE_31
  INTERLEAVE_4, INTERLEAVE_43, INTERLEAVE_49, INTERLEAVE_7, LOOP_16, LOOP_21, LOOP_25, LOOP_31
  LOOP_36, LOOP_4, LOOP_43, LOOP_49, LOOP_54, LOOP_61, LOOP_7, OPT_16
  OPT_21, OPT_25, OPT_31, OPT_36, OPT_4, OPT_43, OPT_49, OPT_54
  OPT_61, OPT_65, OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DELETE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
 | LOOP_16
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_25
 | LOOP_21
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 CHOICE_POINT
 | LOOP_25
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31 CHOICE_POINT
 | LOOP_31
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_43
 | LOOP_36
BLOCK_4 -> INSTRUCTION_SEQ
      | CONTENT_4 CHOICE_POINT
 | LOOP_4
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 CHOICE_POINT
 | LOOP_43
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 CHOICE_POINT
 | LOOP_49
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 BLOCK_61
 | LOOP_54
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61 BLOCK_4
 | LOOP_61
BLOCK_65 -> INSTRUCTION_SEQ
      | CONTENT_65
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 CHOICE_POINT
 | LOOP_7
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_4

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_65
 | BLOCK_7 BLOCK_65
      | ... and 18 more alternatives

Loops Rules:
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_36 -> BLOCK_36
      | BLOCK_36 LOOP_36
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_7 -> BLOCK_7
      | BLOCK_7 LOOP_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 164 more alternatives
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_36 -> BLOCK_36
      | BLOCK_36 LOOP_36
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_7 -> BLOCK_7
      | BLOCK_7 LOOP_7

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_65
 | BLOCK_7 BLOCK_65
      | ... and 18 more alternatives
OPT_16 -> BLOCK_16
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_4 -> BLOCK_4
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
OPT_61 -> BLOCK_61
      | EPSILON
OPT_65 -> BLOCK_65
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_4 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_61 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_16 -> BLOCK_21
      | BLOCK_21 BLOCK_25
 | BLOCK_25
      | ... and 1 more alternatives
INTERLEAVE_25 -> BLOCK_43
      | BLOCK_43 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_31 -> BLOCK_36
      | BLOCK_36 BLOCK_43
 | BLOCK_43
      | ... and 1 more alternatives
... and 4 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 9: cJSON_SetNumberHelper
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_SETNUMBERHELPER
Production Rules: 117
Non-terminals: 27
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.20/10.0
Basic Blocks: 7
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 22
Branching Factor: 4.68
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, FCMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_13, BLOCK_16, BLOCK_21, BLOCK_22, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_10, CONTENT_13, CONTENT_16, CONTENT_21, CONTENT_22, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_SETNUMBERHELPER
  INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_ENTRY, OPT_10, OPT_13, OPT_16, OPT_21, OPT_22
  OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FCMP, FPTOSI, GEP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_SETNUMBERHELPER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_21
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_21
BLOCK_21 -> BRANCH
      | CONTENT_21 BLOCK_22
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_22
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_10
 | BLOCK_7 BLOCK_10
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 65 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_10
 | BLOCK_7 BLOCK_10
      | ... and 3 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_10 -> BLOCK_13
      | BLOCK_13 BLOCK_16
 | BLOCK_16
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_10
 | BLOCK_10
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 10: cJSON_SetValuestring
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_SETVALUESTRING
Production Rules: 388
Non-terminals: 68
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 18
Choice Points: 40
Loop Patterns: 0
Path Alternatives: 76
Branching Factor: 5.88
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_17, BLOCK_23, BLOCK_24, BLOCK_29, BLOCK_32, BLOCK_33, BLOCK_43
  BLOCK_51, BLOCK_59, BLOCK_60, BLOCK_69, BLOCK_74, BLOCK_75, BLOCK_80, BLOCK_84
  BLOCK_89, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_17, CONTENT_23, CONTENT_24, CONTENT_29
  CONTENT_32, CONTENT_33, CONTENT_43, CONTENT_51, CONTENT_59, CONTENT_60, CONTENT_69, CONTENT_74
  CONTENT_75, CONTENT_80, CONTENT_84, CONTENT_89, CONTENT_ENTRY, FUNC_CJSON_SETVALUESTRING, INSTRUCTION_SEQ, INTERLEAVE_11
  INTERLEAVE_17, INTERLEAVE_24, INTERLEAVE_29, INTERLEAVE_33, INTERLEAVE_43, INTERLEAVE_51, INTERLEAVE_69, INTERLEAVE_75
  INTERLEAVE_ENTRY, OPT_11, OPT_17, OPT_23, OPT_24, OPT_29, OPT_32, OPT_33
  OPT_43, OPT_51, OPT_59, OPT_60, OPT_69, OPT_74, OPT_75, OPT_80
  OPT_84, OPT_89, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_SETVALUESTRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_89
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 CHOICE_POINT
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 BLOCK_89
BLOCK_33 -> INSTRUCTION_SEQ
      | CONTENT_33 CHOICE_POINT
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 CHOICE_POINT
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51 CHOICE_POINT
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59 BLOCK_89
BLOCK_60 -> INSTRUCTION_SEQ
      | CONTENT_60 BLOCK_89
BLOCK_69 -> INSTRUCTION_SEQ
      | CONTENT_69 CHOICE_POINT
BLOCK_74 -> INSTRUCTION_SEQ
      | CONTENT_74 BLOCK_89
BLOCK_75 -> INSTRUCTION_SEQ
      | CONTENT_75 CHOICE_POINT
BLOCK_80 -> INSTRUCTION_SEQ
      | CONTENT_80 BLOCK_84
... and 3 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_11
 | BLOCK_23 BLOCK_11
      | ... and 27 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 225 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_11
 | BLOCK_23 BLOCK_11
      | ... and 27 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_33 -> BLOCK_33
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
OPT_60 -> BLOCK_60
      | EPSILON
OPT_69 -> BLOCK_69
      | EPSILON
OPT_74 -> BLOCK_74
      | EPSILON
OPT_75 -> BLOCK_75
      | EPSILON
... and 4 more paths & alternatives rules

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_33 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_51 -> INSTRUCTION_SEQ
     CONTENT_59 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_69 -> INSTRUCTION_SEQ
     CONTENT_74 -> INSTRUCTION_SEQ
     CONTENT_75 -> INSTRUCTION_SEQ
     CONTENT_80 -> INSTRUCTION_SEQ
     ... and 12 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 11: cJSON_strdup
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_STRDUP
Production Rules: 130
Non-terminals: 24
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.00/10.0
Basic Blocks: 6
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 20
Branching Factor: 5.91
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_11, BLOCK_22, BLOCK_23, BLOCK_28, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10
  CONTENT_11, CONTENT_22, CONTENT_23, CONTENT_28, CONTENT_ENTRY, FUNC_CJSON_STRDUP, INSTRUCTION_SEQ, INTERLEAVE_11
  INTERLEAVE_ENTRY, OPT_10, OPT_11, OPT_22, OPT_23, OPT_28, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_STRDUP -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 BLOCK_28
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_28
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_28
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_11
 | BLOCK_10 BLOCK_11
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 83 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_11
 | BLOCK_10 BLOCK_11
      | ... and 3 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_11 -> BLOCK_11
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_11 -> BLOCK_22
      | BLOCK_22 BLOCK_23
 | BLOCK_23
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_10
      | BLOCK_10 BLOCK_11
 | BLOCK_11
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 12: cJSON_free
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_FREE
Production Rules: 24
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_FREE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_FREE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 16 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 13: cJSON_ParseWithOpts
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PARSEWITHOPTS
Production Rules: 87
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.80
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_21, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_12, CONTENT_21
  CONTENT_ENTRY, FUNC_CJSON_PARSEWITHOPTS, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_11, OPT_12, OPT_21, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PARSEWITHOPTS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_21
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_21
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_12
 | BLOCK_11 BLOCK_12

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 57 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_12
 | BLOCK_11 BLOCK_12
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_11
      | BLOCK_11 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 14: cJSON_ParseWithLengthOpts
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PARSEWITHLENGTHOPTS
Production Rules: 515
Non-terminals: 101
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 28
Choice Points: 52
Loop Patterns: 0
Path Alternatives: 108
Branching Factor: 5.20
Estimated Depth: 8
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_102, BLOCK_105, BLOCK_112, BLOCK_113, BLOCK_114, BLOCK_15, BLOCK_18
  BLOCK_19, BLOCK_29, BLOCK_30, BLOCK_36, BLOCK_37, BLOCK_40, BLOCK_47, BLOCK_57
  BLOCK_58, BLOCK_59, BLOCK_62, BLOCK_69, BLOCK_71, BLOCK_74, BLOCK_76, BLOCK_79
  BLOCK_88, BLOCK_92, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT, CONTENT_101, CONTENT_102, CONTENT_105
  CONTENT_112, CONTENT_113, CONTENT_114, CONTENT_15, CONTENT_18, CONTENT_19, CONTENT_29, CONTENT_30
  CONTENT_36, CONTENT_37, CONTENT_40, CONTENT_47, CONTENT_57, CONTENT_58, CONTENT_59, CONTENT_62
  CONTENT_69, CONTENT_71, CONTENT_74, CONTENT_76, CONTENT_79, CONTENT_88, CONTENT_92, CONTENT_96
  CONTENT_ENTRY, FUNC_CJSON_PARSEWITHLENGTHOPTS, INSTRUCTION_SEQ, INTERLEAVE_102, INTERLEAVE_15, INTERLEAVE_19, INTERLEAVE_30, INTERLEAVE_37
  INTERLEAVE_40, INTERLEAVE_47, INTERLEAVE_59, INTERLEAVE_71, INTERLEAVE_76, INTERLEAVE_79, INTERLEAVE_92, INTERLEAVE_ENTRY
  OPT_101, OPT_102, OPT_105, OPT_112, OPT_113, OPT_114, OPT_15, OPT_18
  OPT_19, OPT_29, OPT_30, OPT_36, OPT_37, OPT_40, OPT_47, OPT_57
  OPT_58, OPT_59, OPT_62, OPT_69, OPT_71, OPT_74, OPT_76, OPT_79
  OPT_88, OPT_92, OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PARSEWITHLENGTHOPTS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> BRANCH
      | CONTENT_101 BLOCK_102
BLOCK_102 -> INSTRUCTION_SEQ
      | CONTENT_102 CHOICE_POINT
BLOCK_105 -> INSTRUCTION_SEQ
      | CONTENT_105 BLOCK_112
BLOCK_112 -> INSTRUCTION_SEQ
      | CONTENT_112 BLOCK_113
BLOCK_113 -> INSTRUCTION_SEQ
      | CONTENT_113 BLOCK_114
BLOCK_114 -> INSTRUCTION_SEQ
      | CONTENT_114
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_18 -> BRANCH
      | CONTENT_18 BLOCK_71
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
BLOCK_29 -> BRANCH
      | CONTENT_29 BLOCK_71
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
BLOCK_36 -> BRANCH
      | CONTENT_36 BLOCK_71
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 CHOICE_POINT
BLOCK_47 -> INSTRUCTION_SEQ
      | CONTENT_47 CHOICE_POINT
... and 13 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_18
      | BLOCK_15
 | BLOCK_18 BLOCK_15
      | ... and 36 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 281 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_18
      | BLOCK_15
 | BLOCK_18 BLOCK_15
      | ... and 36 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_102 -> BLOCK_102
      | EPSILON
OPT_105 -> BLOCK_105
      | EPSILON
OPT_112 -> BLOCK_112
      | EPSILON
OPT_113 -> BLOCK_113
      | EPSILON
OPT_114 -> BLOCK_114
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
... and 14 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_102 -> INSTRUCTION_SEQ
     CONTENT_105 -> INSTRUCTION_SEQ
     CONTENT_112 -> INSTRUCTION_SEQ
     CONTENT_113 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_47 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     ... and 25 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 15: cJSON_New_Item
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_NEW_ITEM
Production Rules: 61
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 5.08
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_12, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_12, CONTENT_ENTRY, FUNC_CJSON_NEW_ITEM
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_10, OPT_12, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_NEW_ITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 BLOCK_12
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_12
 | BLOCK_10 BLOCK_12

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 36 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_12
 | BLOCK_10 BLOCK_12
OPT_10 -> BLOCK_10
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_10
      | BLOCK_10 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 16: skip_utf8_bom
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SKIP_UTF8_BOM
Production Rules: 208
Non-terminals: 40
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 10
Choice Points: 24
Loop Patterns: 0
Path Alternatives: 44
Branching Factor: 5.47
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_16, BLOCK_17, BLOCK_20, BLOCK_29, BLOCK_39, BLOCK_44, BLOCK_46
  BLOCK_6, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_16, CONTENT_17, CONTENT_20, CONTENT_29
  CONTENT_39, CONTENT_44, CONTENT_46, CONTENT_6, CONTENT_ENTRY, FUNC_SKIP_UTF8_BOM, INSTRUCTION_SEQ, INTERLEAVE_11
  INTERLEAVE_17, INTERLEAVE_20, INTERLEAVE_29, INTERLEAVE_6, INTERLEAVE_ENTRY, OPT_11, OPT_16, OPT_17
  OPT_20, OPT_29, OPT_39, OPT_44, OPT_46, OPT_6, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SKIP_UTF8_BOM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_46
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 CHOICE_POINT
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_44
BLOCK_44 -> INSTRUCTION_SEQ
      | CONTENT_44 BLOCK_46
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_6
 | BLOCK_16 BLOCK_6
      | ... and 15 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 113 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_6
 | BLOCK_16 BLOCK_6
      | ... and 15 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_11 -> BLOCK_16
      | BLOCK_16 BLOCK_17
 | BLOCK_17
      | ... and 1 more alternatives
INTERLEAVE_17 -> BLOCK_20
      | BLOCK_20 BLOCK_44
 | BLOCK_44
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_29
      | BLOCK_29 BLOCK_44
 | BLOCK_44
      | ... and 1 more alternatives
INTERLEAVE_29 -> BLOCK_39
      | BLOCK_39 BLOCK_44
 | BLOCK_44
      | ... and 1 more alternatives
INTERLEAVE_6 -> BLOCK_16
      | BLOCK_16 BLOCK_11
 | BLOCK_11
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_6
 | BLOCK_6
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 17: buffer_skip_whitespace
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_BUFFER_SKIP_WHITESPACE
Production Rules: 328
Non-terminals: 65
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 16
Choice Points: 32
Loop Patterns: 15
Path Alternatives: 64
Branching Factor: 5.21
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_15, BLOCK_24, BLOCK_26, BLOCK_27, BLOCK_30, BLOCK_39
  BLOCK_51, BLOCK_53, BLOCK_58, BLOCK_6, BLOCK_66, BLOCK_71, BLOCK_73, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_11, CONTENT_12, CONTENT_15, CONTENT_24, CONTENT_26, CONTENT_27, CONTENT_30
  CONTENT_39, CONTENT_51, CONTENT_53, CONTENT_58, CONTENT_6, CONTENT_66, CONTENT_71, CONTENT_73
  CONTENT_ENTRY, FUNC_BUFFER_SKIP_WHITESPACE, INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_15, INTERLEAVE_27, INTERLEAVE_30, INTERLEAVE_51
  INTERLEAVE_58, INTERLEAVE_6, INTERLEAVE_ENTRY, LOOP_27, LOOP_30, LOOP_39, LOOP_51, LOOP_53
  OPT_11, OPT_12, OPT_15, OPT_24, OPT_26, OPT_27, OPT_30, OPT_39
  OPT_51, OPT_53, OPT_58, OPT_6, OPT_66, OPT_71, OPT_73, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_BUFFER_SKIP_WHITESPACE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_73
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 BLOCK_73
BLOCK_26 -> BRANCH
      | CONTENT_26 BLOCK_27
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
 | LOOP_27
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
 | LOOP_30
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_51
 | LOOP_39
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51 CHOICE_POINT
 | LOOP_51
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53 BLOCK_27
 | LOOP_53
BLOCK_58 -> INSTRUCTION_SEQ
      | CONTENT_58 CHOICE_POINT
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
BLOCK_66 -> INSTRUCTION_SEQ
      | CONTENT_66 BLOCK_71
BLOCK_71 -> INSTRUCTION_SEQ
      | CONTENT_71 BLOCK_73
BLOCK_73 -> INSTRUCTION_SEQ
      | CONTENT_73
... and 1 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_6
 | BLOCK_11 BLOCK_6
      | ... and 21 more alternatives

Loops Rules:
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 174 more alternatives
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_6
 | BLOCK_11 BLOCK_6
      | ... and 21 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_58 -> BLOCK_58
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_66 -> BLOCK_66
      | EPSILON
OPT_71 -> BLOCK_71
      | EPSILON
... and 2 more paths & alternatives rules

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_51 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_58 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_66 -> INSTRUCTION_SEQ
     CONTENT_71 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     ... and 8 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 18: parse_value
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_VALUE
Production Rules: 905
Non-terminals: 134
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 35
Choice Points: 100
Loop Patterns: 0
Path Alternatives: 170
Branching Factor: 6.86
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_103, BLOCK_106, BLOCK_115, BLOCK_127, BLOCK_13, BLOCK_131, BLOCK_134, BLOCK_14
  BLOCK_143, BLOCK_155, BLOCK_167, BLOCK_17, BLOCK_179, BLOCK_183, BLOCK_186, BLOCK_195
  BLOCK_207, BLOCK_211, BLOCK_214, BLOCK_223, BLOCK_235, BLOCK_239, BLOCK_240, BLOCK_26
  BLOCK_36, BLOCK_43, BLOCK_46, BLOCK_55, BLOCK_65, BLOCK_72, BLOCK_75, BLOCK_8
  BLOCK_84, BLOCK_94, BLOCK_ENTRY, CHOICE_POINT, CONTENT_103, CONTENT_106, CONTENT_115, CONTENT_127
  CONTENT_13, CONTENT_131, CONTENT_134, CONTENT_14, CONTENT_143, CONTENT_155, CONTENT_167, CONTENT_17
  CONTENT_179, CONTENT_183, CONTENT_186, CONTENT_195, CONTENT_207, CONTENT_211, CONTENT_214, CONTENT_223
  CONTENT_235, CONTENT_239, CONTENT_240, CONTENT_26, CONTENT_36, CONTENT_43, CONTENT_46, CONTENT_55
  CONTENT_65, CONTENT_72, CONTENT_75, CONTENT_8, CONTENT_84, CONTENT_94, CONTENT_ENTRY, FUNC_PARSE_VALUE
  INSTRUCTION_SEQ, INTERLEAVE_103, INTERLEAVE_106, INTERLEAVE_115, INTERLEAVE_131, INTERLEAVE_134, INTERLEAVE_14, INTERLEAVE_143
  INTERLEAVE_155, INTERLEAVE_167, INTERLEAVE_17, INTERLEAVE_183, INTERLEAVE_186, INTERLEAVE_195, INTERLEAVE_211, INTERLEAVE_214
  INTERLEAVE_223, INTERLEAVE_26, INTERLEAVE_43, INTERLEAVE_46, INTERLEAVE_55, INTERLEAVE_72, INTERLEAVE_75, INTERLEAVE_8
  INTERLEAVE_84, INTERLEAVE_ENTRY, OPT_103, OPT_106, OPT_115, OPT_127, OPT_13, OPT_131
  OPT_134, OPT_14, OPT_143, OPT_155, OPT_167, OPT_17, OPT_179, OPT_183
  OPT_186, OPT_195, OPT_207, OPT_211, OPT_214, OPT_223, OPT_235, OPT_239
  OPT_240, OPT_26, OPT_36, OPT_43, OPT_46, OPT_55, OPT_65, OPT_72
  OPT_75, OPT_8, OPT_84, OPT_94, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_VALUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_103 -> INSTRUCTION_SEQ
      | CONTENT_103 CHOICE_POINT
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 CHOICE_POINT
BLOCK_115 -> INSTRUCTION_SEQ
      | CONTENT_115 CHOICE_POINT
BLOCK_127 -> INSTRUCTION_SEQ
      | CONTENT_127 BLOCK_240
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_240
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 CHOICE_POINT
BLOCK_134 -> INSTRUCTION_SEQ
      | CONTENT_134 CHOICE_POINT
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 CHOICE_POINT
BLOCK_155 -> INSTRUCTION_SEQ
      | CONTENT_155 CHOICE_POINT
BLOCK_167 -> INSTRUCTION_SEQ
      | CONTENT_167 CHOICE_POINT
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_179 -> INSTRUCTION_SEQ
      | CONTENT_179 BLOCK_240
BLOCK_183 -> INSTRUCTION_SEQ
      | CONTENT_183 CHOICE_POINT
BLOCK_186 -> INSTRUCTION_SEQ
      | CONTENT_186 CHOICE_POINT
... and 20 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_8
 | BLOCK_13 BLOCK_8
      | ... and 72 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 552 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_8
 | BLOCK_13 BLOCK_8
      | ... and 72 more alternatives
OPT_103 -> BLOCK_103
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_134 -> BLOCK_134
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_143 -> BLOCK_143
      | EPSILON
OPT_155 -> BLOCK_155
      | EPSILON
OPT_167 -> BLOCK_167
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_179 -> BLOCK_179
      | EPSILON
OPT_183 -> BLOCK_183
      | EPSILON
... and 21 more paths & alternatives rules

Other Rules:
CONTENT_103 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_115 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_134 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_155 -> INSTRUCTION_SEQ
     CONTENT_167 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_179 -> INSTRUCTION_SEQ
     CONTENT_183 -> INSTRUCTION_SEQ
     CONTENT_186 -> INSTRUCTION_SEQ
     ... and 44 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 19: parse_string
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_STRING
Production Rules: 947
Non-terminals: 157
Terminals: 21

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 42
Choice Points: 56
Loop Patterns: 33
Path Alternatives: 140
Branching Factor: 6.23
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_106, BLOCK_107, BLOCK_130, BLOCK_131, BLOCK_133, BLOCK_137, BLOCK_142
  BLOCK_148, BLOCK_155, BLOCK_156, BLOCK_161, BLOCK_164, BLOCK_167, BLOCK_170, BLOCK_173
  BLOCK_176, BLOCK_182, BLOCK_189, BLOCK_190, BLOCK_191, BLOCK_192, BLOCK_198, BLOCK_199
  BLOCK_219, BLOCK_222, BLOCK_228, BLOCK_231, BLOCK_241, BLOCK_242, BLOCK_40, BLOCK_41
  BLOCK_42, BLOCK_54, BLOCK_59, BLOCK_61, BLOCK_67, BLOCK_80, BLOCK_81, BLOCK_86
  BLOCK_89, BLOCK_ENTRY, CHOICE_POINT, CONTENT_101, CONTENT_106, CONTENT_107, CONTENT_130, CONTENT_131
  CONTENT_133, CONTENT_137, CONTENT_142, CONTENT_148, CONTENT_155, CONTENT_156, CONTENT_161, CONTENT_164
  CONTENT_167, CONTENT_170, CONTENT_173, CONTENT_176, CONTENT_182, CONTENT_189, CONTENT_190, CONTENT_191
  CONTENT_192, CONTENT_198, CONTENT_199, CONTENT_219, CONTENT_222, CONTENT_228, CONTENT_231, CONTENT_241
  CONTENT_242, CONTENT_40, CONTENT_41, CONTENT_42, CONTENT_54, CONTENT_59, CONTENT_61, CONTENT_67
  CONTENT_80, CONTENT_81, CONTENT_86, CONTENT_89, CONTENT_ENTRY, FUNC_PARSE_STRING, INSTRUCTION_SEQ, INTERLEAVE_101
  INTERLEAVE_107, INTERLEAVE_133, INTERLEAVE_137, INTERLEAVE_148, INTERLEAVE_182, INTERLEAVE_219, INTERLEAVE_228, INTERLEAVE_42
  INTERLEAVE_59, INTERLEAVE_61, INTERLEAVE_67, INTERLEAVE_89, INTERLEAVE_ENTRY, LOOP_133, LOOP_137, LOOP_142
  LOOP_198, LOOP_42, LOOP_54, LOOP_59, LOOP_61, LOOP_67, LOOP_81, LOOP_86
  OPT_101, OPT_106, OPT_107, OPT_130, OPT_131, OPT_133, OPT_137, OPT_142
  OPT_148, OPT_155, OPT_156, OPT_161, OPT_164, OPT_167, OPT_170, OPT_173
  OPT_176, OPT_182, OPT_189, OPT_190, OPT_191, OPT_192, OPT_198, OPT_199
  OPT_219, OPT_222, OPT_228, OPT_231, OPT_241, OPT_242, OPT_40, OPT_41
  OPT_42, OPT_54, OPT_59, OPT_61, OPT_67, OPT_80, OPT_81, OPT_86
  OPT_89, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, PTRTOINT, RETURN, SEXT, SUB, SWITCH
  ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_STRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 CHOICE_POINT
BLOCK_106 -> BRANCH
      | CONTENT_106 BLOCK_219
BLOCK_107 -> INSTRUCTION_SEQ
      | CONTENT_107 CHOICE_POINT
BLOCK_130 -> BRANCH
      | CONTENT_130 BLOCK_219
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 BLOCK_133
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 CHOICE_POINT
 | LOOP_133
BLOCK_137 -> INSTRUCTION_SEQ
      | CONTENT_137 CHOICE_POINT
 | LOOP_137
BLOCK_142 -> INSTRUCTION_SEQ
      | CONTENT_142 BLOCK_198
 | LOOP_142
BLOCK_148 -> INSTRUCTION_SEQ
      | CONTENT_148 CHOICE_POINT
BLOCK_155 -> BRANCH
      | CONTENT_155 BLOCK_219
BLOCK_156 -> INSTRUCTION_SEQ
      | CONTENT_156
BLOCK_161 -> INSTRUCTION_SEQ
      | CONTENT_161 BLOCK_192
BLOCK_164 -> INSTRUCTION_SEQ
      | CONTENT_164 BLOCK_192
BLOCK_167 -> INSTRUCTION_SEQ
      | CONTENT_167 BLOCK_192
BLOCK_170 -> INSTRUCTION_SEQ
      | CONTENT_170 BLOCK_192
... and 27 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_40
      | BLOCK_41
 | BLOCK_40 BLOCK_41
      | ... and 39 more alternatives

Loops Rules:
LOOP_133 -> BLOCK_133
      | BLOCK_133 LOOP_133
LOOP_137 -> BLOCK_137
      | BLOCK_137 LOOP_137
LOOP_142 -> BLOCK_142
      | BLOCK_142 LOOP_142
LOOP_198 -> BLOCK_198
      | BLOCK_198 LOOP_198
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_59 -> BLOCK_59
      | BLOCK_59 LOOP_59
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 604 more alternatives
LOOP_133 -> BLOCK_133
      | BLOCK_133 LOOP_133
LOOP_137 -> BLOCK_137
      | BLOCK_137 LOOP_137
LOOP_142 -> BLOCK_142
      | BLOCK_142 LOOP_142
LOOP_198 -> BLOCK_198
      | BLOCK_198 LOOP_198
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_59 -> BLOCK_59
      | BLOCK_59 LOOP_59
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_40
      | BLOCK_41
 | BLOCK_40 BLOCK_41
      | ... and 39 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_107 -> BLOCK_107
      | EPSILON
OPT_130 -> BLOCK_130
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_137 -> BLOCK_137
      | EPSILON
OPT_142 -> BLOCK_142
      | EPSILON
OPT_148 -> BLOCK_148
      | EPSILON
OPT_155 -> BLOCK_155
      | EPSILON
OPT_156 -> BLOCK_156
      | EPSILON
OPT_161 -> BLOCK_161
      | EPSILON
OPT_164 -> BLOCK_164
      | EPSILON
OPT_167 -> BLOCK_167
      | EPSILON
... and 28 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_107 -> INSTRUCTION_SEQ
     CONTENT_130 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_137 -> INSTRUCTION_SEQ
     CONTENT_142 -> INSTRUCTION_SEQ
     CONTENT_148 -> INSTRUCTION_SEQ
     CONTENT_155 -> INSTRUCTION_SEQ
     CONTENT_161 -> INSTRUCTION_SEQ
     CONTENT_164 -> INSTRUCTION_SEQ
     CONTENT_167 -> INSTRUCTION_SEQ
     CONTENT_170 -> INSTRUCTION_SEQ
     CONTENT_173 -> INSTRUCTION_SEQ
     ... and 39 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 20: parse_number
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_NUMBER
Production Rules: 697
Non-terminals: 124
Terminals: 22

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 34
Choice Points: 44
Loop Patterns: 15
Path Alternatives: 112
Branching Factor: 5.86
Estimated Depth: 8
Instruction Types: ADD, ALLOCA, BRANCH, CALL, FCMP, ICMP, LOAD, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_105, BLOCK_106, BLOCK_109, BLOCK_110, BLOCK_116, BLOCK_122, BLOCK_128
  BLOCK_131, BLOCK_134, BLOCK_137, BLOCK_142, BLOCK_143, BLOCK_16, BLOCK_160, BLOCK_21
  BLOCK_22, BLOCK_23, BLOCK_26, BLOCK_36, BLOCK_38, BLOCK_50, BLOCK_53, BLOCK_56
  BLOCK_57, BLOCK_58, BLOCK_61, BLOCK_62, BLOCK_72, BLOCK_73, BLOCK_88, BLOCK_89
  BLOCK_93, BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_105, CONTENT_106, CONTENT_109, CONTENT_110
  CONTENT_116, CONTENT_122, CONTENT_128, CONTENT_131, CONTENT_134, CONTENT_137, CONTENT_142, CONTENT_143
  CONTENT_16, CONTENT_160, CONTENT_21, CONTENT_22, CONTENT_23, CONTENT_26, CONTENT_36, CONTENT_38
  CONTENT_50, CONTENT_53, CONTENT_56, CONTENT_57, CONTENT_58, CONTENT_61, CONTENT_62, CONTENT_72
  CONTENT_73, CONTENT_88, CONTENT_89, CONTENT_93, CONTENT_ENTRY, FUNC_PARSE_NUMBER, INSTRUCTION_SEQ, INTERLEAVE_110
  INTERLEAVE_122, INTERLEAVE_131, INTERLEAVE_16, INTERLEAVE_23, INTERLEAVE_36, INTERLEAVE_62, INTERLEAVE_73, INTERLEAVE_89
  INTERLEAVE_93, INTERLEAVE_ENTRY, LOOP_100, LOOP_105, LOOP_106, LOOP_89, LOOP_93, OPT_100
  OPT_105, OPT_106, OPT_109, OPT_110, OPT_116, OPT_122, OPT_128, OPT_131
  OPT_134, OPT_137, OPT_142, OPT_143, OPT_16, OPT_160, OPT_21, OPT_22
  OPT_23, OPT_26, OPT_36, OPT_38, OPT_50, OPT_53, OPT_56, OPT_57
  OPT_58, OPT_61, OPT_62, OPT_72, OPT_73, OPT_88, OPT_89, OPT_93
  OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FCMP, FPTOSI
  GEP, ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, PTRTOINT, RETURN, SUB
  SWITCH, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_NUMBER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 BLOCK_105
 | LOOP_100
BLOCK_105 -> BRANCH
      | CONTENT_105 BLOCK_106
 | LOOP_105
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 BLOCK_89
 | LOOP_106
BLOCK_109 -> BRANCH
      | CONTENT_109 BLOCK_110
BLOCK_110 -> INSTRUCTION_SEQ
      | CONTENT_110 CHOICE_POINT
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 BLOCK_160
BLOCK_122 -> INSTRUCTION_SEQ
      | CONTENT_122 CHOICE_POINT
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128 BLOCK_143
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 CHOICE_POINT
BLOCK_134 -> INSTRUCTION_SEQ
      | CONTENT_134 BLOCK_142
BLOCK_137 -> INSTRUCTION_SEQ
      | CONTENT_137 BLOCK_142
BLOCK_142 -> BRANCH
      | CONTENT_142 BLOCK_143
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 BLOCK_160
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
BLOCK_160 -> INSTRUCTION_SEQ
      | CONTENT_160
... and 19 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_21
      | BLOCK_16
 | BLOCK_21 BLOCK_16
      | ... and 30 more alternatives

Loops Rules:
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_105 -> BLOCK_105
      | BLOCK_105 LOOP_105
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
LOOP_93 -> BLOCK_93
      | BLOCK_93 LOOP_93

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 433 more alternatives
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_105 -> BLOCK_105
      | BLOCK_105 LOOP_105
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
LOOP_93 -> BLOCK_93
      | BLOCK_93 LOOP_93

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_21
      | BLOCK_16
 | BLOCK_21 BLOCK_16
      | ... and 30 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_105 -> BLOCK_105
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_109 -> BLOCK_109
      | EPSILON
OPT_110 -> BLOCK_110
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_122 -> BLOCK_122
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_134 -> BLOCK_134
      | EPSILON
OPT_137 -> BLOCK_137
      | EPSILON
OPT_142 -> BLOCK_142
      | EPSILON
OPT_143 -> BLOCK_143
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
... and 20 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_105 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_109 -> INSTRUCTION_SEQ
     CONTENT_110 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_122 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_134 -> INSTRUCTION_SEQ
     CONTENT_137 -> INSTRUCTION_SEQ
     CONTENT_142 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     ... and 28 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 21: parse_array
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_ARRAY
Production Rules: 802
Non-terminals: 140
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 36
Choice Points: 72
Loop Patterns: 30
Path Alternatives: 144
Branching Factor: 5.81
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_104, BLOCK_115, BLOCK_116, BLOCK_119, BLOCK_122, BLOCK_13, BLOCK_131, BLOCK_14
  BLOCK_143, BLOCK_145, BLOCK_148, BLOCK_157, BLOCK_169, BLOCK_170, BLOCK_171, BLOCK_178
  BLOCK_182, BLOCK_192, BLOCK_195, BLOCK_197, BLOCK_198, BLOCK_30, BLOCK_31, BLOCK_40
  BLOCK_49, BLOCK_61, BLOCK_62, BLOCK_65, BLOCK_74, BLOCK_79, BLOCK_84, BLOCK_90
  BLOCK_91, BLOCK_94, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT, CONTENT_104, CONTENT_115, CONTENT_116
  CONTENT_119, CONTENT_122, CONTENT_13, CONTENT_131, CONTENT_14, CONTENT_143, CONTENT_145, CONTENT_148
  CONTENT_157, CONTENT_169, CONTENT_170, CONTENT_171, CONTENT_178, CONTENT_182, CONTENT_192, CONTENT_195
  CONTENT_197, CONTENT_198, CONTENT_30, CONTENT_31, CONTENT_40, CONTENT_49, CONTENT_61, CONTENT_62
  CONTENT_65, CONTENT_74, CONTENT_79, CONTENT_84, CONTENT_90, CONTENT_91, CONTENT_94, CONTENT_96
  CONTENT_ENTRY, FUNC_PARSE_ARRAY, INSTRUCTION_SEQ, INTERLEAVE_104, INTERLEAVE_119, INTERLEAVE_122, INTERLEAVE_14, INTERLEAVE_143
  INTERLEAVE_145, INTERLEAVE_148, INTERLEAVE_157, INTERLEAVE_171, INTERLEAVE_192, INTERLEAVE_31, INTERLEAVE_40, INTERLEAVE_49
  INTERLEAVE_62, INTERLEAVE_65, INTERLEAVE_84, INTERLEAVE_91, INTERLEAVE_ENTRY, LOOP_104, LOOP_116, LOOP_119
  LOOP_122, LOOP_131, LOOP_143, LOOP_84, LOOP_91, LOOP_94, LOOP_96, OPT_104
  OPT_115, OPT_116, OPT_119, OPT_122, OPT_13, OPT_131, OPT_14, OPT_143
  OPT_145, OPT_148, OPT_157, OPT_169, OPT_170, OPT_171, OPT_178, OPT_182
  OPT_192, OPT_195, OPT_197, OPT_198, OPT_30, OPT_31, OPT_40, OPT_49
  OPT_61, OPT_62, OPT_65, OPT_74, OPT_79, OPT_84, OPT_90, OPT_91
  OPT_94, OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_ARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_104 -> INSTRUCTION_SEQ
      | CONTENT_104 CHOICE_POINT
 | LOOP_104
BLOCK_115 -> BRANCH
      | CONTENT_115 BLOCK_192
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 BLOCK_119
 | LOOP_116
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 CHOICE_POINT
 | LOOP_119
BLOCK_122 -> INSTRUCTION_SEQ
      | CONTENT_122 CHOICE_POINT
 | LOOP_122
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_198
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 BLOCK_143
 | LOOP_131
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 CHOICE_POINT
 | LOOP_143
BLOCK_145 -> INSTRUCTION_SEQ
      | CONTENT_145 CHOICE_POINT
BLOCK_148 -> INSTRUCTION_SEQ
      | CONTENT_148 CHOICE_POINT
BLOCK_157 -> INSTRUCTION_SEQ
      | CONTENT_157 CHOICE_POINT
BLOCK_169 -> BRANCH
      | CONTENT_169 BLOCK_192
BLOCK_170 -> BRANCH
      | CONTENT_170 BLOCK_171
BLOCK_171 -> INSTRUCTION_SEQ
      | CONTENT_171 CHOICE_POINT
... and 21 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 51 more alternatives

Loops Rules:
LOOP_104 -> BLOCK_104
      | BLOCK_104 LOOP_104
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_122 -> BLOCK_122
      | BLOCK_122 LOOP_122
LOOP_131 -> BLOCK_131
      | BLOCK_131 LOOP_131
LOOP_143 -> BLOCK_143
      | BLOCK_143 LOOP_143
LOOP_84 -> BLOCK_84
      | BLOCK_84 LOOP_84
LOOP_91 -> BLOCK_91
      | BLOCK_91 LOOP_91
LOOP_94 -> BLOCK_94
      | BLOCK_94 LOOP_94
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 463 more alternatives
LOOP_104 -> BLOCK_104
      | BLOCK_104 LOOP_104
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_122 -> BLOCK_122
      | BLOCK_122 LOOP_122
LOOP_131 -> BLOCK_131
      | BLOCK_131 LOOP_131
LOOP_143 -> BLOCK_143
      | BLOCK_143 LOOP_143
LOOP_84 -> BLOCK_84
      | BLOCK_84 LOOP_84
LOOP_91 -> BLOCK_91
      | BLOCK_91 LOOP_91
LOOP_94 -> BLOCK_94
      | BLOCK_94 LOOP_94
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 51 more alternatives
OPT_104 -> BLOCK_104
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_122 -> BLOCK_122
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_143 -> BLOCK_143
      | EPSILON
OPT_145 -> BLOCK_145
      | EPSILON
OPT_148 -> BLOCK_148
      | EPSILON
OPT_157 -> BLOCK_157
      | EPSILON
OPT_169 -> BLOCK_169
      | EPSILON
OPT_170 -> BLOCK_170
      | EPSILON
... and 22 more paths & alternatives rules

Other Rules:
CONTENT_104 -> INSTRUCTION_SEQ
     CONTENT_115 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_122 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_145 -> INSTRUCTION_SEQ
     CONTENT_148 -> INSTRUCTION_SEQ
     CONTENT_157 -> INSTRUCTION_SEQ
     CONTENT_169 -> INSTRUCTION_SEQ
     CONTENT_170 -> INSTRUCTION_SEQ
     CONTENT_171 -> INSTRUCTION_SEQ
     ... and 38 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 22: parse_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_OBJECT
Production Rules: 1081
Non-terminals: 187
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 47
Choice Points: 104
Loop Patterns: 48
Path Alternatives: 198
Branching Factor: 5.84
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_102, BLOCK_103, BLOCK_106, BLOCK_108, BLOCK_116, BLOCK_119, BLOCK_128, BLOCK_129
  BLOCK_13, BLOCK_14, BLOCK_140, BLOCK_141, BLOCK_153, BLOCK_162, BLOCK_174, BLOCK_175
  BLOCK_186, BLOCK_187, BLOCK_190, BLOCK_193, BLOCK_202, BLOCK_21, BLOCK_214, BLOCK_216
  BLOCK_219, BLOCK_228, BLOCK_240, BLOCK_241, BLOCK_242, BLOCK_249, BLOCK_253, BLOCK_263
  BLOCK_266, BLOCK_268, BLOCK_269, BLOCK_30, BLOCK_42, BLOCK_43, BLOCK_52, BLOCK_61
  BLOCK_73, BLOCK_74, BLOCK_77, BLOCK_86, BLOCK_91, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_102, CONTENT_103, CONTENT_106, CONTENT_108, CONTENT_116, CONTENT_119, CONTENT_128, CONTENT_129
  CONTENT_13, CONTENT_14, CONTENT_140, CONTENT_141, CONTENT_153, CONTENT_162, CONTENT_174, CONTENT_175
  CONTENT_186, CONTENT_187, CONTENT_190, CONTENT_193, CONTENT_202, CONTENT_21, CONTENT_214, CONTENT_216
  CONTENT_219, CONTENT_228, CONTENT_240, CONTENT_241, CONTENT_242, CONTENT_249, CONTENT_253, CONTENT_263
  CONTENT_266, CONTENT_268, CONTENT_269, CONTENT_30, CONTENT_42, CONTENT_43, CONTENT_52, CONTENT_61
  CONTENT_73, CONTENT_74, CONTENT_77, CONTENT_86, CONTENT_91, CONTENT_96, CONTENT_ENTRY, FUNC_PARSE_OBJECT
  INSTRUCTION_SEQ, INTERLEAVE_103, INTERLEAVE_116, INTERLEAVE_119, INTERLEAVE_129, INTERLEAVE_14, INTERLEAVE_141, INTERLEAVE_153
  INTERLEAVE_162, INTERLEAVE_175, INTERLEAVE_190, INTERLEAVE_193, INTERLEAVE_21, INTERLEAVE_214, INTERLEAVE_216, INTERLEAVE_219
  INTERLEAVE_228, INTERLEAVE_242, INTERLEAVE_263, INTERLEAVE_30, INTERLEAVE_43, INTERLEAVE_52, INTERLEAVE_61, INTERLEAVE_74
  INTERLEAVE_77, INTERLEAVE_96, INTERLEAVE_ENTRY, LOOP_103, LOOP_106, LOOP_108, LOOP_116, LOOP_119
  LOOP_129, LOOP_141, LOOP_153, LOOP_162, LOOP_175, LOOP_187, LOOP_190, LOOP_193
  LOOP_202, LOOP_214, LOOP_96, OPT_102, OPT_103, OPT_106, OPT_108, OPT_116
  OPT_119, OPT_128, OPT_129, OPT_13, OPT_14, OPT_140, OPT_141, OPT_153
  OPT_162, OPT_174, OPT_175, OPT_186, OPT_187, OPT_190, OPT_193, OPT_202
  OPT_21, OPT_214, OPT_216, OPT_219, OPT_228, OPT_240, OPT_241, OPT_242
  OPT_249, OPT_253, OPT_263, OPT_266, OPT_268, OPT_269, OPT_30, OPT_42
  OPT_43, OPT_52, OPT_61, OPT_73, OPT_74, OPT_77, OPT_86, OPT_91
  OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_102 -> BRANCH
      | CONTENT_102 BLOCK_263
BLOCK_103 -> INSTRUCTION_SEQ
      | CONTENT_103 CHOICE_POINT
 | LOOP_103
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 BLOCK_116
 | LOOP_106
BLOCK_108 -> INSTRUCTION_SEQ
      | CONTENT_108 BLOCK_116
 | LOOP_108
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 CHOICE_POINT
 | LOOP_116
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 CHOICE_POINT
 | LOOP_119
BLOCK_128 -> BRANCH
      | CONTENT_128 BLOCK_263
BLOCK_129 -> INSTRUCTION_SEQ
      | CONTENT_129 CHOICE_POINT
 | LOOP_129
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_269
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_140 -> BRANCH
      | CONTENT_140 BLOCK_263
BLOCK_141 -> INSTRUCTION_SEQ
      | CONTENT_141 CHOICE_POINT
 | LOOP_141
BLOCK_153 -> INSTRUCTION_SEQ
      | CONTENT_153 CHOICE_POINT
 | LOOP_153
BLOCK_162 -> INSTRUCTION_SEQ
      | CONTENT_162 CHOICE_POINT
 | LOOP_162
BLOCK_174 -> BRANCH
      | CONTENT_174 BLOCK_263
... and 32 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 75 more alternatives

Loops Rules:
LOOP_103 -> BLOCK_103
      | BLOCK_103 LOOP_103
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_108 -> BLOCK_108
      | BLOCK_108 LOOP_108
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_129 -> BLOCK_129
      | BLOCK_129 LOOP_129
LOOP_141 -> BLOCK_141
      | BLOCK_141 LOOP_141
LOOP_153 -> BLOCK_153
      | BLOCK_153 LOOP_153
LOOP_162 -> BLOCK_162
      | BLOCK_162 LOOP_162
LOOP_175 -> BLOCK_175
      | BLOCK_175 LOOP_175
LOOP_187 -> BLOCK_187
      | BLOCK_187 LOOP_187
LOOP_190 -> BLOCK_190
      | BLOCK_190 LOOP_190
LOOP_193 -> BLOCK_193
      | BLOCK_193 LOOP_193
LOOP_202 -> BLOCK_202
      | BLOCK_202 LOOP_202
LOOP_214 -> BLOCK_214
      | BLOCK_214 LOOP_214
... and 1 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 613 more alternatives
LOOP_103 -> BLOCK_103
      | BLOCK_103 LOOP_103
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_108 -> BLOCK_108
      | BLOCK_108 LOOP_108
LOOP_116 -> BLOCK_116
      | BLOCK_116 LOOP_116
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_129 -> BLOCK_129
      | BLOCK_129 LOOP_129
LOOP_141 -> BLOCK_141
      | BLOCK_141 LOOP_141
LOOP_153 -> BLOCK_153
      | BLOCK_153 LOOP_153
LOOP_162 -> BLOCK_162
      | BLOCK_162 LOOP_162
LOOP_175 -> BLOCK_175
      | BLOCK_175 LOOP_175
LOOP_187 -> BLOCK_187
      | BLOCK_187 LOOP_187
LOOP_190 -> BLOCK_190
      | BLOCK_190 LOOP_190
LOOP_193 -> BLOCK_193
      | BLOCK_193 LOOP_193
LOOP_202 -> BLOCK_202
      | BLOCK_202 LOOP_202
... and 2 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 75 more alternatives
OPT_102 -> BLOCK_102
      | EPSILON
OPT_103 -> BLOCK_103
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_108 -> BLOCK_108
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_129 -> BLOCK_129
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_140 -> BLOCK_140
      | EPSILON
OPT_141 -> BLOCK_141
      | EPSILON
OPT_153 -> BLOCK_153
      | EPSILON
OPT_162 -> BLOCK_162
      | EPSILON
... and 33 more paths & alternatives rules

Other Rules:
CONTENT_102 -> INSTRUCTION_SEQ
     CONTENT_103 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_108 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_129 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_140 -> INSTRUCTION_SEQ
     CONTENT_141 -> INSTRUCTION_SEQ
     CONTENT_153 -> INSTRUCTION_SEQ
     CONTENT_162 -> INSTRUCTION_SEQ
     CONTENT_174 -> INSTRUCTION_SEQ
     ... and 57 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 23: parse_hex4
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PARSE_HEX4
Production Rules: 433
Non-terminals: 88
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 20
Choice Points: 32
Loop Patterns: 48
Path Alternatives: 72
Branching Factor: 5.03
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_23, BLOCK_32, BLOCK_39, BLOCK_46, BLOCK_56, BLOCK_6, BLOCK_63
  BLOCK_70, BLOCK_80, BLOCK_81, BLOCK_82, BLOCK_83, BLOCK_86, BLOCK_89, BLOCK_9
  BLOCK_90, BLOCK_93, BLOCK_95, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_23, CONTENT_32
  CONTENT_39, CONTENT_46, CONTENT_56, CONTENT_6, CONTENT_63, CONTENT_70, CONTENT_80, CONTENT_81
  CONTENT_82, CONTENT_83, CONTENT_86, CONTENT_89, CONTENT_9, CONTENT_90, CONTENT_93, CONTENT_95
  CONTENT_ENTRY, FUNC_PARSE_HEX4, INSTRUCTION_SEQ, INTERLEAVE_16, INTERLEAVE_32, INTERLEAVE_39, INTERLEAVE_56, INTERLEAVE_6
  INTERLEAVE_63, INTERLEAVE_83, INTERLEAVE_9, LOOP_16, LOOP_23, LOOP_32, LOOP_39, LOOP_46
  LOOP_56, LOOP_6, LOOP_63, LOOP_70, LOOP_81, LOOP_82, LOOP_83, LOOP_86
  LOOP_89, LOOP_9, LOOP_90, OPT_16, OPT_23, OPT_32, OPT_39, OPT_46
  OPT_56, OPT_6, OPT_63, OPT_70, OPT_80, OPT_81, OPT_82, OPT_83
  OPT_86, OPT_89, OPT_9, OPT_90, OPT_93, OPT_95, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SHL, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PARSE_HEX4 -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
 | LOOP_16
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_83
 | LOOP_23
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
 | LOOP_32
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 CHOICE_POINT
 | LOOP_39
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 BLOCK_82
 | LOOP_46
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
 | LOOP_56
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
 | LOOP_6
BLOCK_63 -> INSTRUCTION_SEQ
      | CONTENT_63 CHOICE_POINT
 | LOOP_63
BLOCK_70 -> INSTRUCTION_SEQ
      | CONTENT_70 BLOCK_81
 | LOOP_70
BLOCK_80 -> INSTRUCTION_SEQ
      | CONTENT_80 BLOCK_95
BLOCK_81 -> BRANCH
      | CONTENT_81 BLOCK_82
 | LOOP_81
BLOCK_82 -> BRANCH
      | CONTENT_82 BLOCK_83
 | LOOP_82
BLOCK_83 -> INSTRUCTION_SEQ
      | CONTENT_83 CHOICE_POINT
 | LOOP_83
BLOCK_86 -> INSTRUCTION_SEQ
      | CONTENT_86 BLOCK_89
 | LOOP_86
BLOCK_89 -> BRANCH
      | CONTENT_89 BLOCK_90
 | LOOP_89
... and 5 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_93
 | BLOCK_9 BLOCK_93
      | ... and 21 more alternatives

Loops Rules:
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_56 -> BLOCK_56
      | BLOCK_56 LOOP_56
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_70 -> BLOCK_70
      | BLOCK_70 LOOP_70
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81
LOOP_82 -> BLOCK_82
      | BLOCK_82 LOOP_82
LOOP_83 -> BLOCK_83
      | BLOCK_83 LOOP_83
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
LOOP_9 -> BLOCK_9
      | BLOCK_9 LOOP_9
... and 1 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 226 more alternatives
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_56 -> BLOCK_56
      | BLOCK_56 LOOP_56
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_70 -> BLOCK_70
      | BLOCK_70 LOOP_70
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81
LOOP_82 -> BLOCK_82
      | BLOCK_82 LOOP_82
LOOP_83 -> BLOCK_83
      | BLOCK_83 LOOP_83
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
... and 2 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_93
 | BLOCK_9 BLOCK_93
      | ... and 21 more alternatives
OPT_16 -> BLOCK_16
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_63 -> BLOCK_63
      | EPSILON
OPT_70 -> BLOCK_70
      | EPSILON
OPT_80 -> BLOCK_80
      | EPSILON
OPT_81 -> BLOCK_81
      | EPSILON
OPT_82 -> BLOCK_82
      | EPSILON
OPT_83 -> BLOCK_83
      | EPSILON
OPT_86 -> BLOCK_86
      | EPSILON
... and 6 more paths & alternatives rules

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_63 -> INSTRUCTION_SEQ
     CONTENT_70 -> INSTRUCTION_SEQ
     CONTENT_80 -> INSTRUCTION_SEQ
     CONTENT_81 -> INSTRUCTION_SEQ
     CONTENT_82 -> INSTRUCTION_SEQ
     CONTENT_83 -> INSTRUCTION_SEQ
     CONTENT_86 -> INSTRUCTION_SEQ
     CONTENT_89 -> INSTRUCTION_SEQ
     ... and 12 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 24: cJSON_Parse
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PARSE
Production Rules: 20
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_PARSE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PARSE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 12 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 25: cJSON_ParseWithLength
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PARSEWITHLENGTH
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_PARSEWITHLENGTH, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PARSEWITHLENGTH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 26: cJSON_Print
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PRINT
Production Rules: 20
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_PRINT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PRINT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 12 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 27: print
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT
Production Rules: 486
Non-terminals: 75
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 21
Choice Points: 32
Loop Patterns: 0
Path Alternatives: 74
Branching Factor: 6.66
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_109, BLOCK_111, BLOCK_116, BLOCK_125, BLOCK_128, BLOCK_133, BLOCK_134, BLOCK_29
  BLOCK_30, BLOCK_35, BLOCK_36, BLOCK_42, BLOCK_56, BLOCK_57, BLOCK_60, BLOCK_71
  BLOCK_72, BLOCK_85, BLOCK_89, BLOCK_94, BLOCK_ENTRY, CHOICE_POINT, CONTENT_109, CONTENT_111
  CONTENT_116, CONTENT_125, CONTENT_128, CONTENT_133, CONTENT_134, CONTENT_29, CONTENT_30, CONTENT_35
  CONTENT_36, CONTENT_42, CONTENT_56, CONTENT_57, CONTENT_60, CONTENT_71, CONTENT_72, CONTENT_85
  CONTENT_89, CONTENT_94, CONTENT_ENTRY, FUNC_PRINT, INSTRUCTION_SEQ, INTERLEAVE_111, INTERLEAVE_125, INTERLEAVE_30
  INTERLEAVE_36, INTERLEAVE_42, INTERLEAVE_60, INTERLEAVE_72, INTERLEAVE_ENTRY, OPT_109, OPT_111, OPT_116
  OPT_125, OPT_128, OPT_133, OPT_134, OPT_29, OPT_30, OPT_35, OPT_36
  OPT_42, OPT_56, OPT_57, OPT_60, OPT_71, OPT_72, OPT_85, OPT_89
  OPT_94, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_109 -> INSTRUCTION_SEQ
      | CONTENT_109 BLOCK_134
BLOCK_111 -> INSTRUCTION_SEQ
      | CONTENT_111 CHOICE_POINT
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 BLOCK_125
BLOCK_125 -> INSTRUCTION_SEQ
      | CONTENT_125 CHOICE_POINT
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128 BLOCK_133
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 BLOCK_134
BLOCK_134 -> INSTRUCTION_SEQ
      | CONTENT_134
BLOCK_29 -> BRANCH
      | CONTENT_29 BLOCK_111
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
BLOCK_35 -> BRANCH
      | CONTENT_35 BLOCK_111
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 CHOICE_POINT
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 CHOICE_POINT
BLOCK_56 -> BRANCH
      | CONTENT_56 BLOCK_111
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57 BLOCK_109
BLOCK_60 -> INSTRUCTION_SEQ
      | CONTENT_60 CHOICE_POINT
... and 6 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_29
      | BLOCK_30
 | BLOCK_29 BLOCK_30
      | ... and 21 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 322 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_29
      | BLOCK_30
 | BLOCK_29 BLOCK_30
      | ... and 21 more alternatives
OPT_109 -> BLOCK_109
      | EPSILON
OPT_111 -> BLOCK_111
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_125 -> BLOCK_125
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_134 -> BLOCK_134
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_57 -> BLOCK_57
      | EPSILON
... and 7 more paths & alternatives rules

Other Rules:
CONTENT_109 -> INSTRUCTION_SEQ
     CONTENT_111 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_125 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_71 -> INSTRUCTION_SEQ
     ... and 13 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 28: print_value
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_VALUE
Production Rules: 438
Non-terminals: 85
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 24
Choice Points: 28
Loop Patterns: 0
Path Alternatives: 76
Branching Factor: 5.47
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_13, BLOCK_14, BLOCK_19, BLOCK_24, BLOCK_25, BLOCK_28, BLOCK_33
  BLOCK_34, BLOCK_37, BLOCK_42, BLOCK_43, BLOCK_46, BLOCK_50, BLOCK_55, BLOCK_56
  BLOCK_67, BLOCK_68, BLOCK_74, BLOCK_78, BLOCK_82, BLOCK_86, BLOCK_87, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_10, CONTENT_13, CONTENT_14, CONTENT_19, CONTENT_24, CONTENT_25, CONTENT_28
  CONTENT_33, CONTENT_34, CONTENT_37, CONTENT_42, CONTENT_43, CONTENT_46, CONTENT_50, CONTENT_55
  CONTENT_56, CONTENT_67, CONTENT_68, CONTENT_74, CONTENT_78, CONTENT_82, CONTENT_86, CONTENT_87
  CONTENT_ENTRY, FUNC_PRINT_VALUE, INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_19, INTERLEAVE_28, INTERLEAVE_37, INTERLEAVE_50
  INTERLEAVE_56, INTERLEAVE_ENTRY, OPT_10, OPT_13, OPT_14, OPT_19, OPT_24, OPT_25
  OPT_28, OPT_33, OPT_34, OPT_37, OPT_42, OPT_43, OPT_46, OPT_50
  OPT_55, OPT_56, OPT_67, OPT_68, OPT_74, OPT_78, OPT_82, OPT_86
  OPT_87, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, SWITCH

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_VALUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_87
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 BLOCK_87
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_87
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
BLOCK_33 -> INSTRUCTION_SEQ
      | CONTENT_33 BLOCK_87
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_87
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_87
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 BLOCK_87
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 BLOCK_87
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 CHOICE_POINT
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 BLOCK_87
... and 9 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 18 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 267 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 18 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_33 -> BLOCK_33
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
... and 10 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_33 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     ... and 14 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 29: update_offset
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_UPDATE_OFFSET
Production Rules: 105
Non-terminals: 21
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.80/10.0
Basic Blocks: 5
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 18
Branching Factor: 5.53
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_26, BLOCK_6, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_12
  CONTENT_26, CONTENT_6, CONTENT_ENTRY, FUNC_UPDATE_OFFSET, INSTRUCTION_SEQ, INTERLEAVE_6, INTERLEAVE_ENTRY, OPT_11
  OPT_12, OPT_26, OPT_6, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_UPDATE_OFFSET -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> BRANCH
      | CONTENT_11 BLOCK_26
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_26
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_6
 | BLOCK_11 BLOCK_6
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 63 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_6
 | BLOCK_11 BLOCK_6
      | ... and 3 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_6 -> BLOCK_11
      | BLOCK_11 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_11
      | BLOCK_11 BLOCK_6
 | BLOCK_6
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 30: ensure
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_ENSURE
Production Rules: 604
Non-terminals: 97
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 27
Choice Points: 48
Loop Patterns: 0
Path Alternatives: 102
Branching Factor: 6.36
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, MUL, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_102, BLOCK_103, BLOCK_112, BLOCK_124, BLOCK_140, BLOCK_15, BLOCK_152
  BLOCK_16, BLOCK_21, BLOCK_29, BLOCK_30, BLOCK_33, BLOCK_34, BLOCK_46, BLOCK_54
  BLOCK_59, BLOCK_60, BLOCK_63, BLOCK_66, BLOCK_67, BLOCK_68, BLOCK_69, BLOCK_72
  BLOCK_78, BLOCK_90, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_102, CONTENT_103, CONTENT_112
  CONTENT_124, CONTENT_140, CONTENT_15, CONTENT_152, CONTENT_16, CONTENT_21, CONTENT_29, CONTENT_30
  CONTENT_33, CONTENT_34, CONTENT_46, CONTENT_54, CONTENT_59, CONTENT_60, CONTENT_63, CONTENT_66
  CONTENT_67, CONTENT_68, CONTENT_69, CONTENT_72, CONTENT_78, CONTENT_90, CONTENT_ENTRY, FUNC_ENSURE
  INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_103, INTERLEAVE_16, INTERLEAVE_21, INTERLEAVE_30, INTERLEAVE_34, INTERLEAVE_54
  INTERLEAVE_60, INTERLEAVE_63, INTERLEAVE_72, INTERLEAVE_78, INTERLEAVE_ENTRY, OPT_10, OPT_102, OPT_103
  OPT_112, OPT_124, OPT_140, OPT_15, OPT_152, OPT_16, OPT_21, OPT_29
  OPT_30, OPT_33, OPT_34, OPT_46, OPT_54, OPT_59, OPT_60, OPT_63
  OPT_66, OPT_67, OPT_68, OPT_69, OPT_72, OPT_78, OPT_90, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, MUL, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_ENSURE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_102 -> BRANCH
      | CONTENT_102 BLOCK_140
BLOCK_103 -> INSTRUCTION_SEQ
      | CONTENT_103 CHOICE_POINT
BLOCK_112 -> INSTRUCTION_SEQ
      | CONTENT_112 BLOCK_152
BLOCK_124 -> INSTRUCTION_SEQ
      | CONTENT_124 BLOCK_140
BLOCK_140 -> INSTRUCTION_SEQ
      | CONTENT_140 BLOCK_152
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_152
BLOCK_152 -> INSTRUCTION_SEQ
      | CONTENT_152
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_152
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
BLOCK_33 -> INSTRUCTION_SEQ
      | CONTENT_33 BLOCK_152
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 CHOICE_POINT
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 BLOCK_152
... and 12 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_10
 | BLOCK_15 BLOCK_10
      | ... and 33 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 382 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_10
 | BLOCK_15 BLOCK_10
      | ... and 33 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_102 -> BLOCK_102
      | EPSILON
OPT_103 -> BLOCK_103
      | EPSILON
OPT_112 -> BLOCK_112
      | EPSILON
OPT_124 -> BLOCK_124
      | EPSILON
OPT_140 -> BLOCK_140
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_152 -> BLOCK_152
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_33 -> BLOCK_33
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
... and 13 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_102 -> INSTRUCTION_SEQ
     CONTENT_103 -> INSTRUCTION_SEQ
     CONTENT_112 -> INSTRUCTION_SEQ
     CONTENT_124 -> INSTRUCTION_SEQ
     CONTENT_140 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_33 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     ... and 23 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 31: print_number
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_NUMBER
Production Rules: 528
Non-terminals: 95
Terminals: 21

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 25
Choice Points: 44
Loop Patterns: 15
Path Alternatives: 94
Branching Factor: 5.68
Estimated Depth: 5
Instruction Types: ADD, ALLOCA, BRANCH, CALL, FCMP, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_107, BLOCK_110, BLOCK_120, BLOCK_19, BLOCK_20, BLOCK_23, BLOCK_32
  BLOCK_35, BLOCK_42, BLOCK_48, BLOCK_55, BLOCK_60, BLOCK_64, BLOCK_65, BLOCK_66
  BLOCK_69, BLOCK_72, BLOCK_73, BLOCK_81, BLOCK_82, BLOCK_83, BLOCK_88, BLOCK_96
  BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_107, CONTENT_110, CONTENT_120, CONTENT_19, CONTENT_20
  CONTENT_23, CONTENT_32, CONTENT_35, CONTENT_42, CONTENT_48, CONTENT_55, CONTENT_60, CONTENT_64
  CONTENT_65, CONTENT_66, CONTENT_69, CONTENT_72, CONTENT_73, CONTENT_81, CONTENT_82, CONTENT_83
  CONTENT_88, CONTENT_96, CONTENT_ENTRY, FUNC_PRINT_NUMBER, INSTRUCTION_SEQ, INTERLEAVE_20, INTERLEAVE_23, INTERLEAVE_35
  INTERLEAVE_48, INTERLEAVE_55, INTERLEAVE_66, INTERLEAVE_69, INTERLEAVE_73, INTERLEAVE_83, INTERLEAVE_88, INTERLEAVE_ENTRY
  LOOP_100, LOOP_107, LOOP_83, LOOP_88, LOOP_96, OPT_100, OPT_107, OPT_110
  OPT_120, OPT_19, OPT_20, OPT_23, OPT_32, OPT_35, OPT_42, OPT_48
  OPT_55, OPT_60, OPT_64, OPT_65, OPT_66, OPT_69, OPT_72, OPT_73
  OPT_81, OPT_82, OPT_83, OPT_88, OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BITCAST, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FCMP
  GEP, ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, SELECT, SEXT, SITOFP
  ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_NUMBER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 BLOCK_107
 | LOOP_100
BLOCK_107 -> INSTRUCTION_SEQ
      | CONTENT_107 BLOCK_83
 | LOOP_107
BLOCK_110 -> INSTRUCTION_SEQ
      | CONTENT_110 BLOCK_120
BLOCK_120 -> INSTRUCTION_SEQ
      | CONTENT_120
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 BLOCK_120
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 BLOCK_66
BLOCK_35 -> INSTRUCTION_SEQ
      | CONTENT_35 CHOICE_POINT
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_65
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 CHOICE_POINT
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 CHOICE_POINT
BLOCK_60 -> INSTRUCTION_SEQ
      | CONTENT_60 BLOCK_64
BLOCK_64 -> BRANCH
      | CONTENT_64 BLOCK_65
BLOCK_65 -> BRANCH
      | CONTENT_65 BLOCK_66
... and 10 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_19
      | BLOCK_20
 | BLOCK_19 BLOCK_20
      | ... and 30 more alternatives

Loops Rules:
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_83 -> BLOCK_83
      | BLOCK_83 LOOP_83
LOOP_88 -> BLOCK_88
      | BLOCK_88 LOOP_88
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 308 more alternatives
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_83 -> BLOCK_83
      | BLOCK_83 LOOP_83
LOOP_88 -> BLOCK_88
      | BLOCK_88 LOOP_88
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_19
      | BLOCK_20
 | BLOCK_19 BLOCK_20
      | ... and 30 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_107 -> BLOCK_107
      | EPSILON
OPT_110 -> BLOCK_110
      | EPSILON
OPT_120 -> BLOCK_120
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_60 -> BLOCK_60
      | EPSILON
OPT_64 -> BLOCK_64
      | EPSILON
... and 11 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_107 -> INSTRUCTION_SEQ
     CONTENT_110 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_64 -> INSTRUCTION_SEQ
     CONTENT_65 -> INSTRUCTION_SEQ
     CONTENT_66 -> INSTRUCTION_SEQ
     ... and 20 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 32: print_string
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_STRING
Production Rules: 30
Non-terminals: 5
Terminals: 11

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 7.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_PRINT_STRING, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, GEP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR
  RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_STRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 22 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 33: print_array
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_ARRAY
Production Rules: 450
Non-terminals: 77
Terminals: 18

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 24
Path Alternatives: 70
Branching Factor: 6.00
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_15, BLOCK_20, BLOCK_21, BLOCK_31, BLOCK_34, BLOCK_39, BLOCK_40
  BLOCK_46, BLOCK_60, BLOCK_61, BLOCK_68, BLOCK_71, BLOCK_78, BLOCK_82, BLOCK_87
  BLOCK_88, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_15, CONTENT_20, CONTENT_21
  CONTENT_31, CONTENT_34, CONTENT_39, CONTENT_40, CONTENT_46, CONTENT_60, CONTENT_61, CONTENT_68
  CONTENT_71, CONTENT_78, CONTENT_82, CONTENT_87, CONTENT_88, CONTENT_96, CONTENT_ENTRY, FUNC_PRINT_ARRAY
  INSTRUCTION_SEQ, INTERLEAVE_15, INTERLEAVE_31, INTERLEAVE_34, INTERLEAVE_40, INTERLEAVE_46, INTERLEAVE_61, INTERLEAVE_82
  INTERLEAVE_ENTRY, LOOP_31, LOOP_34, LOOP_40, LOOP_46, LOOP_61, LOOP_68, LOOP_71
  LOOP_78, OPT_14, OPT_15, OPT_20, OPT_21, OPT_31, OPT_34, OPT_39
  OPT_40, OPT_46, OPT_60, OPT_61, OPT_68, OPT_71, OPT_78, OPT_82
  OPT_87, OPT_88, OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, SELECT, SEXT, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_ARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_96
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_96
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_31
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31 CHOICE_POINT
 | LOOP_31
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 CHOICE_POINT
 | LOOP_34
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_96
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 CHOICE_POINT
 | LOOP_40
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 CHOICE_POINT
 | LOOP_46
BLOCK_60 -> INSTRUCTION_SEQ
      | CONTENT_60 BLOCK_96
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61 CHOICE_POINT
 | LOOP_61
BLOCK_68 -> INSTRUCTION_SEQ
      | CONTENT_68 BLOCK_71
 | LOOP_68
BLOCK_71 -> INSTRUCTION_SEQ
      | CONTENT_71 BLOCK_78
 | LOOP_71
BLOCK_78 -> INSTRUCTION_SEQ
      | CONTENT_78 BLOCK_31
 | LOOP_78
BLOCK_82 -> INSTRUCTION_SEQ
      | CONTENT_82 CHOICE_POINT
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_15
 | BLOCK_14 BLOCK_15
      | ... and 21 more alternatives

Loops Rules:
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_40 -> BLOCK_40
      | BLOCK_40 LOOP_40
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
LOOP_71 -> BLOCK_71
      | BLOCK_71 LOOP_71
LOOP_78 -> BLOCK_78
      | BLOCK_78 LOOP_78

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 272 more alternatives
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_40 -> BLOCK_40
      | BLOCK_40 LOOP_40
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
LOOP_71 -> BLOCK_71
      | BLOCK_71 LOOP_71
LOOP_78 -> BLOCK_78
      | BLOCK_78 LOOP_78

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_15
 | BLOCK_14 BLOCK_15
      | ... and 21 more alternatives
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_60 -> BLOCK_60
      | EPSILON
OPT_61 -> BLOCK_61
      | EPSILON
OPT_68 -> BLOCK_68
      | EPSILON
OPT_71 -> BLOCK_71
      | EPSILON
OPT_78 -> BLOCK_78
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_61 -> INSTRUCTION_SEQ
     CONTENT_68 -> INSTRUCTION_SEQ
     CONTENT_71 -> INSTRUCTION_SEQ
     CONTENT_78 -> INSTRUCTION_SEQ
     CONTENT_82 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 34: print_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_OBJECT
Production Rules: 1024
Non-terminals: 176
Terminals: 20

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 44
Choice Points: 72
Loop Patterns: 66
Path Alternatives: 160
Branching Factor: 5.89
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_112, BLOCK_113, BLOCK_120, BLOCK_123, BLOCK_133, BLOCK_134, BLOCK_157, BLOCK_158
  BLOCK_16, BLOCK_163, BLOCK_166, BLOCK_17, BLOCK_171, BLOCK_174, BLOCK_184, BLOCK_190
  BLOCK_195, BLOCK_196, BLOCK_201, BLOCK_202, BLOCK_207, BLOCK_208, BLOCK_215, BLOCK_218
  BLOCK_221, BLOCK_222, BLOCK_230, BLOCK_31, BLOCK_32, BLOCK_43, BLOCK_46, BLOCK_52
  BLOCK_55, BLOCK_60, BLOCK_68, BLOCK_69, BLOCK_70, BLOCK_76, BLOCK_79, BLOCK_82
  BLOCK_90, BLOCK_97, BLOCK_98, BLOCK_ENTRY, CHOICE_POINT, CONTENT_112, CONTENT_113, CONTENT_120
  CONTENT_123, CONTENT_133, CONTENT_134, CONTENT_157, CONTENT_158, CONTENT_16, CONTENT_163, CONTENT_166
  CONTENT_17, CONTENT_171, CONTENT_174, CONTENT_184, CONTENT_190, CONTENT_195, CONTENT_196, CONTENT_201
  CONTENT_202, CONTENT_207, CONTENT_208, CONTENT_215, CONTENT_218, CONTENT_221, CONTENT_222, CONTENT_230
  CONTENT_31, CONTENT_32, CONTENT_43, CONTENT_46, CONTENT_52, CONTENT_55, CONTENT_60, CONTENT_68
  CONTENT_69, CONTENT_70, CONTENT_76, CONTENT_79, CONTENT_82, CONTENT_90, CONTENT_97, CONTENT_98
  CONTENT_ENTRY, FUNC_PRINT_OBJECT, INSTRUCTION_SEQ, INTERLEAVE_113, INTERLEAVE_123, INTERLEAVE_134, INTERLEAVE_158, INTERLEAVE_166
  INTERLEAVE_17, INTERLEAVE_184, INTERLEAVE_196, INTERLEAVE_202, INTERLEAVE_208, INTERLEAVE_32, INTERLEAVE_52, INTERLEAVE_55
  INTERLEAVE_60, INTERLEAVE_70, INTERLEAVE_90, INTERLEAVE_98, INTERLEAVE_ENTRY, LOOP_113, LOOP_120, LOOP_123
  LOOP_134, LOOP_158, LOOP_163, LOOP_166, LOOP_171, LOOP_174, LOOP_208, LOOP_215
  LOOP_218, LOOP_52, LOOP_55, LOOP_60, LOOP_69, LOOP_70, LOOP_76, LOOP_79
  LOOP_82, LOOP_90, LOOP_98, OPT_112, OPT_113, OPT_120, OPT_123, OPT_133
  OPT_134, OPT_157, OPT_158, OPT_16, OPT_163, OPT_166, OPT_17, OPT_171
  OPT_174, OPT_184, OPT_190, OPT_195, OPT_196, OPT_201, OPT_202, OPT_207
  OPT_208, OPT_215, OPT_218, OPT_221, OPT_222, OPT_230, OPT_31, OPT_32
  OPT_43, OPT_46, OPT_52, OPT_55, OPT_60, OPT_68, OPT_69, OPT_70
  OPT_76, OPT_79, OPT_82, OPT_90, OPT_97, OPT_98, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SELECT, SEXT, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_112 -> INSTRUCTION_SEQ
      | CONTENT_112 BLOCK_230
BLOCK_113 -> INSTRUCTION_SEQ
      | CONTENT_113 CHOICE_POINT
 | LOOP_113
BLOCK_120 -> INSTRUCTION_SEQ
      | CONTENT_120 BLOCK_123
 | LOOP_120
BLOCK_123 -> INSTRUCTION_SEQ
      | CONTENT_123 CHOICE_POINT
 | LOOP_123
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 BLOCK_230
BLOCK_134 -> INSTRUCTION_SEQ
      | CONTENT_134 CHOICE_POINT
 | LOOP_134
BLOCK_157 -> INSTRUCTION_SEQ
      | CONTENT_157 BLOCK_230
BLOCK_158 -> INSTRUCTION_SEQ
      | CONTENT_158 CHOICE_POINT
 | LOOP_158
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_230
BLOCK_163 -> INSTRUCTION_SEQ
      | CONTENT_163 BLOCK_166
 | LOOP_163
BLOCK_166 -> INSTRUCTION_SEQ
      | CONTENT_166 CHOICE_POINT
 | LOOP_166
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_171 -> INSTRUCTION_SEQ
      | CONTENT_171 BLOCK_174
 | LOOP_171
BLOCK_174 -> INSTRUCTION_SEQ
      | CONTENT_174 BLOCK_52
 | LOOP_174
BLOCK_184 -> INSTRUCTION_SEQ
      | CONTENT_184 CHOICE_POINT
... and 29 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_17
 | BLOCK_16 BLOCK_17
      | ... and 51 more alternatives

Loops Rules:
LOOP_113 -> BLOCK_113
      | BLOCK_113 LOOP_113
LOOP_120 -> BLOCK_120
      | BLOCK_120 LOOP_120
LOOP_123 -> BLOCK_123
      | BLOCK_123 LOOP_123
LOOP_134 -> BLOCK_134
      | BLOCK_134 LOOP_134
LOOP_158 -> BLOCK_158
      | BLOCK_158 LOOP_158
LOOP_163 -> BLOCK_163
      | BLOCK_163 LOOP_163
LOOP_166 -> BLOCK_166
      | BLOCK_166 LOOP_166
LOOP_171 -> BLOCK_171
      | BLOCK_171 LOOP_171
LOOP_174 -> BLOCK_174
      | BLOCK_174 LOOP_174
LOOP_208 -> BLOCK_208
      | BLOCK_208 LOOP_208
LOOP_215 -> BLOCK_215
      | BLOCK_215 LOOP_215
LOOP_218 -> BLOCK_218
      | BLOCK_218 LOOP_218
LOOP_52 -> BLOCK_52
      | BLOCK_52 LOOP_52
LOOP_55 -> BLOCK_55
      | BLOCK_55 LOOP_55
LOOP_60 -> BLOCK_60
      | BLOCK_60 LOOP_60
... and 7 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 609 more alternatives
LOOP_113 -> BLOCK_113
      | BLOCK_113 LOOP_113
LOOP_120 -> BLOCK_120
      | BLOCK_120 LOOP_120
LOOP_123 -> BLOCK_123
      | BLOCK_123 LOOP_123
LOOP_134 -> BLOCK_134
      | BLOCK_134 LOOP_134
LOOP_158 -> BLOCK_158
      | BLOCK_158 LOOP_158
LOOP_163 -> BLOCK_163
      | BLOCK_163 LOOP_163
LOOP_166 -> BLOCK_166
      | BLOCK_166 LOOP_166
LOOP_171 -> BLOCK_171
      | BLOCK_171 LOOP_171
LOOP_174 -> BLOCK_174
      | BLOCK_174 LOOP_174
LOOP_208 -> BLOCK_208
      | BLOCK_208 LOOP_208
LOOP_215 -> BLOCK_215
      | BLOCK_215 LOOP_215
LOOP_218 -> BLOCK_218
      | BLOCK_218 LOOP_218
LOOP_52 -> BLOCK_52
      | BLOCK_52 LOOP_52
LOOP_55 -> BLOCK_55
      | BLOCK_55 LOOP_55
... and 8 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_17
 | BLOCK_16 BLOCK_17
      | ... and 51 more alternatives
OPT_112 -> BLOCK_112
      | EPSILON
OPT_113 -> BLOCK_113
      | EPSILON
OPT_120 -> BLOCK_120
      | EPSILON
OPT_123 -> BLOCK_123
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_134 -> BLOCK_134
      | EPSILON
OPT_157 -> BLOCK_157
      | EPSILON
OPT_158 -> BLOCK_158
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_163 -> BLOCK_163
      | EPSILON
OPT_166 -> BLOCK_166
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_171 -> BLOCK_171
      | EPSILON
OPT_174 -> BLOCK_174
      | EPSILON
... and 30 more paths & alternatives rules

Other Rules:
CONTENT_112 -> INSTRUCTION_SEQ
     CONTENT_113 -> INSTRUCTION_SEQ
     CONTENT_120 -> INSTRUCTION_SEQ
     CONTENT_123 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_134 -> INSTRUCTION_SEQ
     CONTENT_157 -> INSTRUCTION_SEQ
     CONTENT_158 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_163 -> INSTRUCTION_SEQ
     CONTENT_166 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_171 -> INSTRUCTION_SEQ
     CONTENT_174 -> INSTRUCTION_SEQ
     CONTENT_184 -> INSTRUCTION_SEQ
     ... and 46 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 35: print_string_ptr
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_PRINT_STRING_PTR
Production Rules: 756
Non-terminals: 141
Terminals: 19

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 39
Choice Points: 44
Loop Patterns: 21
Path Alternatives: 122
Branching Factor: 5.60
Estimated Depth: 5
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_106, BLOCK_111, BLOCK_115, BLOCK_121, BLOCK_123, BLOCK_125, BLOCK_127
  BLOCK_129, BLOCK_13, BLOCK_131, BLOCK_133, BLOCK_135, BLOCK_14, BLOCK_143, BLOCK_144
  BLOCK_145, BLOCK_150, BLOCK_159, BLOCK_17, BLOCK_22, BLOCK_23, BLOCK_26, BLOCK_28
  BLOCK_32, BLOCK_36, BLOCK_39, BLOCK_44, BLOCK_47, BLOCK_48, BLOCK_49, BLOCK_52
  BLOCK_66, BLOCK_67, BLOCK_70, BLOCK_85, BLOCK_91, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_101, CONTENT_106, CONTENT_111, CONTENT_115, CONTENT_121, CONTENT_123, CONTENT_125, CONTENT_127
  CONTENT_129, CONTENT_13, CONTENT_131, CONTENT_133, CONTENT_135, CONTENT_14, CONTENT_143, CONTENT_144
  CONTENT_145, CONTENT_150, CONTENT_159, CONTENT_17, CONTENT_22, CONTENT_23, CONTENT_26, CONTENT_28
  CONTENT_32, CONTENT_36, CONTENT_39, CONTENT_44, CONTENT_47, CONTENT_48, CONTENT_49, CONTENT_52
  CONTENT_66, CONTENT_67, CONTENT_70, CONTENT_85, CONTENT_91, CONTENT_96, CONTENT_ENTRY, FUNC_PRINT_STRING_PTR
  INSTRUCTION_SEQ, INTERLEAVE_101, INTERLEAVE_106, INTERLEAVE_14, INTERLEAVE_17, INTERLEAVE_28, INTERLEAVE_39, INTERLEAVE_52
  INTERLEAVE_67, INTERLEAVE_91, INTERLEAVE_96, INTERLEAVE_ENTRY, LOOP_101, LOOP_106, LOOP_111, LOOP_144
  LOOP_145, LOOP_91, LOOP_96, OPT_101, OPT_106, OPT_111, OPT_115, OPT_121
  OPT_123, OPT_125, OPT_127, OPT_129, OPT_13, OPT_131, OPT_133, OPT_135
  OPT_14, OPT_143, OPT_144, OPT_145, OPT_150, OPT_159, OPT_17, OPT_22
  OPT_23, OPT_26, OPT_28, OPT_32, OPT_36, OPT_39, OPT_44, OPT_47
  OPT_48, OPT_49, OPT_52, OPT_66, OPT_67, OPT_70, OPT_85, OPT_91
  OPT_96, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PTRTOINT, RETURN, SUB, SWITCH, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_PRINT_STRING_PTR -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 CHOICE_POINT
 | LOOP_101
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 CHOICE_POINT
 | LOOP_106
BLOCK_111 -> INSTRUCTION_SEQ
      | CONTENT_111 BLOCK_144
 | LOOP_111
BLOCK_115 -> INSTRUCTION_SEQ
      | CONTENT_115
BLOCK_121 -> INSTRUCTION_SEQ
      | CONTENT_121 BLOCK_143
BLOCK_123 -> INSTRUCTION_SEQ
      | CONTENT_123 BLOCK_143
BLOCK_125 -> INSTRUCTION_SEQ
      | CONTENT_125 BLOCK_143
BLOCK_127 -> INSTRUCTION_SEQ
      | CONTENT_127 BLOCK_143
BLOCK_129 -> INSTRUCTION_SEQ
      | CONTENT_129 BLOCK_143
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_159
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 BLOCK_143
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 BLOCK_143
BLOCK_135 -> INSTRUCTION_SEQ
      | CONTENT_135 BLOCK_143
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_143 -> BRANCH
      | CONTENT_143 BLOCK_144
... and 24 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 30 more alternatives

Loops Rules:
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_144 -> BLOCK_144
      | BLOCK_144 LOOP_144
LOOP_145 -> BLOCK_145
      | BLOCK_145 LOOP_145
LOOP_91 -> BLOCK_91
      | BLOCK_91 LOOP_91
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 462 more alternatives
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_144 -> BLOCK_144
      | BLOCK_144 LOOP_144
LOOP_145 -> BLOCK_145
      | BLOCK_145 LOOP_145
LOOP_91 -> BLOCK_91
      | BLOCK_91 LOOP_91
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 30 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_111 -> BLOCK_111
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_121 -> BLOCK_121
      | EPSILON
OPT_123 -> BLOCK_123
      | EPSILON
OPT_125 -> BLOCK_125
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_129 -> BLOCK_129
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_135 -> BLOCK_135
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
... and 25 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_111 -> INSTRUCTION_SEQ
     CONTENT_121 -> INSTRUCTION_SEQ
     CONTENT_123 -> INSTRUCTION_SEQ
     CONTENT_125 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_129 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_135 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_144 -> INSTRUCTION_SEQ
     ... and 32 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 36: compare_double
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_COMPARE_DOUBLE
Production Rules: 91
Non-terminals: 17
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 6.07
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, FCMP, LOAD, MUL, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_14, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_14, CONTENT_17
  CONTENT_ENTRY, FUNC_COMPARE_DOUBLE, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_11, OPT_14, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FCMP, INSTRUCTION_SEQ, LOAD
  MUL, OP_DEFINE, OR, PHI, RETURN, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_COMPARE_DOUBLE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_17
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_14
 | BLOCK_11 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 61 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_14
 | BLOCK_11 BLOCK_14
OPT_11 -> BLOCK_11
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_11
      | BLOCK_11 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 37: cJSON_PrintUnformatted
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PRINTUNFORMATTED
Production Rules: 20
Non-terminals: 5
Terminals: 9

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_PRINTUNFORMATTED, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PRINTUNFORMATTED -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ ALLOCA
      | ... and 12 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 38: cJSON_PrintBuffered
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PRINTBUFFERED
Production Rules: 187
Non-terminals: 31
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.60/10.0
Basic Blocks: 8
Choice Points: 12
Loop Patterns: 0
Path Alternatives: 28
Branching Factor: 6.45
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_21, BLOCK_22, BLOCK_34, BLOCK_39, BLOCK_42, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_11, CONTENT_12, CONTENT_21, CONTENT_22, CONTENT_34, CONTENT_39, CONTENT_42
  CONTENT_ENTRY, FUNC_CJSON_PRINTBUFFERED, INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_22, INTERLEAVE_ENTRY, OPT_11, OPT_12
  OPT_21, OPT_22, OPT_34, OPT_39, OPT_42, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PRINTBUFFERED -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_42
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_42
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_42
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_42
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_12
 | BLOCK_11 BLOCK_12
      | ... and 6 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 123 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_12
 | BLOCK_11 BLOCK_12
      | ... and 6 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_22
      | BLOCK_22 BLOCK_21
 | BLOCK_21
      | ... and 1 more alternatives
INTERLEAVE_22 -> BLOCK_39
      | BLOCK_39 BLOCK_34
 | BLOCK_34
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_11
      | BLOCK_11 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 39: cJSON_PrintPreallocated
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_PRINTPREALLOCATED
Production Rules: 130
Non-terminals: 21
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.80/10.0
Basic Blocks: 5
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 18
Branching Factor: 6.84
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_16, BLOCK_17, BLOCK_30, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_16
  CONTENT_17, CONTENT_30, CONTENT_ENTRY, FUNC_CJSON_PRINTPREALLOCATED, INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_ENTRY, OPT_13
  OPT_16, OPT_17, OPT_30, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_PRINTPREALLOCATED -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_30
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 BLOCK_30
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_13
 | BLOCK_16 BLOCK_13
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> ALLOCA
      | INSTRUCTION_SEQ ALLOCA
 | INSTRUCTION_SEQ ALLOCA
      | ... and 88 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_13
 | BLOCK_16 BLOCK_13
      | ... and 3 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_16
      | BLOCK_16 BLOCK_17
 | BLOCK_17
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_13
 | BLOCK_13
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 40: cJSON_GetArraySize
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETARRAYSIZE
Production Rules: 134
Non-terminals: 29
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 9.00/10.0
Basic Blocks: 7
Choice Points: 8
Loop Patterns: 6
Path Alternatives: 22
Branching Factor: 4.96
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_16, BLOCK_22, BLOCK_25, BLOCK_8, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_13, CONTENT_16, CONTENT_22, CONTENT_25, CONTENT_8, CONTENT_9, CONTENT_ENTRY, FUNC_CJSON_GETARRAYSIZE
  INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_ENTRY, LOOP_13, LOOP_16, OPT_13, OPT_16, OPT_22
  OPT_25, OPT_8, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, TRUNC

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETARRAYSIZE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
 | LOOP_13
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_13
 | LOOP_16
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_25
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_25
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_13
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9
      | ... and 3 more alternatives

Loops Rules:
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 76 more alternatives
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9
      | ... and 3 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_16
      | BLOCK_16 BLOCK_22
 | BLOCK_22
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 41: cJSON_GetArrayItem
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETARRAYITEM
Production Rules: 71
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_8, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_8, CONTENT_9
  CONTENT_ENTRY, FUNC_CJSON_GETARRAYITEM, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_8, OPT_9, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETARRAYITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_14
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9
OPT_14 -> BLOCK_14
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 42: get_array_item
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_GET_ARRAY_ITEM
Production Rules: 167
Non-terminals: 38
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 9.80/10.0
Basic Blocks: 9
Choice Points: 12
Loop Patterns: 12
Path Alternatives: 30
Branching Factor: 4.64
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_14, BLOCK_17, BLOCK_20, BLOCK_22, BLOCK_28, BLOCK_30, BLOCK_9
  BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_14, CONTENT_17, CONTENT_20, CONTENT_22, CONTENT_28
  CONTENT_30, CONTENT_9, CONTENT_ENTRY, FUNC_GET_ARRAY_ITEM, INSTRUCTION_SEQ, INTERLEAVE_14, INTERLEAVE_20, INTERLEAVE_ENTRY
  LOOP_14, LOOP_17, LOOP_20, LOOP_22, OPT_10, OPT_14, OPT_17, OPT_20
  OPT_22, OPT_28, OPT_30, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_GET_ARRAY_ITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 BLOCK_14
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
 | LOOP_14
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 BLOCK_20
 | LOOP_17
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
 | LOOP_20
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_14
 | LOOP_22
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 BLOCK_30
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_30
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_10
 | BLOCK_9 BLOCK_10
      | ... and 6 more alternatives

Loops Rules:
LOOP_14 -> BLOCK_14
      | BLOCK_14 LOOP_14
LOOP_17 -> BLOCK_17
      | BLOCK_17 LOOP_17
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 86 more alternatives
LOOP_14 -> BLOCK_14
      | BLOCK_14 LOOP_14
LOOP_17 -> BLOCK_17
      | BLOCK_17 LOOP_17
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_10
 | BLOCK_9 BLOCK_10
      | ... and 6 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_14 -> BLOCK_17
      | BLOCK_17 BLOCK_20
 | BLOCK_20
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_22
      | BLOCK_22 BLOCK_28
 | BLOCK_28
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_9
      | BLOCK_9 BLOCK_10
 | BLOCK_10
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 43: cJSON_GetObjectItem
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETOBJECTITEM
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_GETOBJECTITEM, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETOBJECTITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 44: get_object_item
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_GET_OBJECT_ITEM
Production Rules: 385
Non-terminals: 89
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 22
Choice Points: 40
Loop Patterns: 27
Path Alternatives: 84
Branching Factor: 4.43
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_14, BLOCK_15, BLOCK_21, BLOCK_22, BLOCK_25, BLOCK_30, BLOCK_37
  BLOCK_39, BLOCK_43, BLOCK_44, BLOCK_45, BLOCK_48, BLOCK_55, BLOCK_57, BLOCK_61
  BLOCK_62, BLOCK_65, BLOCK_70, BLOCK_71, BLOCK_73, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11
  CONTENT_14, CONTENT_15, CONTENT_21, CONTENT_22, CONTENT_25, CONTENT_30, CONTENT_37, CONTENT_39
  CONTENT_43, CONTENT_44, CONTENT_45, CONTENT_48, CONTENT_55, CONTENT_57, CONTENT_61, CONTENT_62
  CONTENT_65, CONTENT_70, CONTENT_71, CONTENT_73, CONTENT_ENTRY, FUNC_GET_OBJECT_ITEM, INSTRUCTION_SEQ, INTERLEAVE_11
  INTERLEAVE_15, INTERLEAVE_22, INTERLEAVE_25, INTERLEAVE_37, INTERLEAVE_45, INTERLEAVE_55, INTERLEAVE_62, INTERLEAVE_65
  INTERLEAVE_ENTRY, LOOP_22, LOOP_25, LOOP_30, LOOP_37, LOOP_39, LOOP_45, LOOP_48
  LOOP_55, LOOP_57, OPT_11, OPT_14, OPT_15, OPT_21, OPT_22, OPT_25
  OPT_30, OPT_37, OPT_39, OPT_43, OPT_44, OPT_45, OPT_48, OPT_55
  OPT_57, OPT_61, OPT_62, OPT_65, OPT_70, OPT_71, OPT_73, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_GET_OBJECT_ITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_73
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_21 -> BRANCH
      | CONTENT_21 BLOCK_22
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
 | LOOP_22
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 CHOICE_POINT
 | LOOP_25
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 BLOCK_37
 | LOOP_30
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
 | LOOP_37
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_22
 | LOOP_39
BLOCK_43 -> BRANCH
      | CONTENT_43 BLOCK_62
BLOCK_44 -> BRANCH
      | CONTENT_44 BLOCK_45
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 CHOICE_POINT
 | LOOP_45
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_55
 | LOOP_48
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 CHOICE_POINT
 | LOOP_55
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57 BLOCK_45
 | LOOP_57
... and 7 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_11
 | BLOCK_14 BLOCK_11
      | ... and 27 more alternatives

Loops Rules:
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_55 -> BLOCK_55
      | BLOCK_55 LOOP_55
LOOP_57 -> BLOCK_57
      | BLOCK_57 LOOP_57

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 175 more alternatives
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_55 -> BLOCK_55
      | BLOCK_55 LOOP_55
LOOP_57 -> BLOCK_57
      | BLOCK_57 LOOP_57

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_11
 | BLOCK_14 BLOCK_11
      | ... and 27 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
... and 8 more paths & alternatives rules

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     ... and 16 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 45: case_insensitive_strcmp
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CASE_INSENSITIVE_STRCMP
Production Rules: 239
Non-terminals: 52
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 13
Choice Points: 20
Loop Patterns: 12
Path Alternatives: 46
Branching Factor: 4.78
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_16, BLOCK_17, BLOCK_18, BLOCK_28, BLOCK_33, BLOCK_34
  BLOCK_35, BLOCK_40, BLOCK_50, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_12
  CONTENT_16, CONTENT_17, CONTENT_18, CONTENT_28, CONTENT_33, CONTENT_34, CONTENT_35, CONTENT_40
  CONTENT_50, CONTENT_8, CONTENT_ENTRY, FUNC_CASE_INSENSITIVE_STRCMP, INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_18, INTERLEAVE_28
  INTERLEAVE_8, INTERLEAVE_ENTRY, LOOP_18, LOOP_28, LOOP_34, LOOP_35, OPT_11, OPT_12
  OPT_16, OPT_17, OPT_18, OPT_28, OPT_33, OPT_34, OPT_35, OPT_40
  OPT_50, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CASE_INSENSITIVE_STRCMP -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_50
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_50
BLOCK_17 -> BRANCH
      | CONTENT_17 BLOCK_18
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_33 -> INSTRUCTION_SEQ
      | CONTENT_33 BLOCK_50
BLOCK_34 -> BRANCH
      | CONTENT_34 BLOCK_35
 | LOOP_34
BLOCK_35 -> INSTRUCTION_SEQ
      | CONTENT_35 BLOCK_18
 | LOOP_35
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 BLOCK_50
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_8
 | BLOCK_11 BLOCK_8
      | ... and 12 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_35 -> BLOCK_35
      | BLOCK_35 LOOP_35

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 124 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_35 -> BLOCK_35
      | BLOCK_35 LOOP_35

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_8
 | BLOCK_11 BLOCK_8
      | ... and 12 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_33 -> BLOCK_33
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_33 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_16
      | BLOCK_16 BLOCK_17
 | BLOCK_17
      | ... and 1 more alternatives
INTERLEAVE_18 -> BLOCK_28
      | BLOCK_28 BLOCK_40
 | BLOCK_40
      | ... and 1 more alternatives
INTERLEAVE_28 -> BLOCK_33
      | BLOCK_33 BLOCK_34
 | BLOCK_34
      | ... and 1 more alternatives
... and 2 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 46: cJSON_GetObjectItemCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_GETOBJECTITEMCASESENSITIVE
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_GETOBJECTITEMCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_GETOBJECTITEMCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 47: cJSON_HasObjectItem
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_HASOBJECTITEM
Production Rules: 32
Non-terminals: 5
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_HASOBJECTITEM, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR
  RETURN, SELECT, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_HASOBJECTITEM -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 24 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 48: cJSON_AddItemToArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDITEMTOARRAY
Production Rules: 26
Non-terminals: 5
Terminals: 9

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ADD, ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_ADDITEMTOARRAY, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDITEMTOARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 49: add_item_to_array
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_ADD_ITEM_TO_ARRAY
Production Rules: 222
Non-terminals: 42
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 11
Choice Points: 20
Loop Patterns: 0
Path Alternatives: 42
Branching Factor: 5.55
Estimated Depth: 8
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_16, BLOCK_17, BLOCK_23, BLOCK_32, BLOCK_37, BLOCK_47, BLOCK_48
  BLOCK_49, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_16, CONTENT_17, CONTENT_23
  CONTENT_32, CONTENT_37, CONTENT_47, CONTENT_48, CONTENT_49, CONTENT_9, CONTENT_ENTRY, FUNC_ADD_ITEM_TO_ARRAY
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_17, INTERLEAVE_32, INTERLEAVE_9, INTERLEAVE_ENTRY, OPT_12, OPT_16
  OPT_17, OPT_23, OPT_32, OPT_37, OPT_47, OPT_48, OPT_49, OPT_9
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_ADD_ITEM_TO_ARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_49
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_48
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_47
BLOCK_47 -> BRANCH
      | CONTENT_47 BLOCK_48
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_49
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_9
 | BLOCK_16 BLOCK_9
      | ... and 12 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 129 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_9
 | BLOCK_16 BLOCK_9
      | ... and 12 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_47 -> BLOCK_47
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_47 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_16
      | BLOCK_16 BLOCK_17
 | BLOCK_17
      | ... and 1 more alternatives
INTERLEAVE_17 -> BLOCK_23
      | BLOCK_23 BLOCK_32
 | BLOCK_32
      | ... and 1 more alternatives
INTERLEAVE_32 -> BLOCK_37
      | BLOCK_37 BLOCK_47
 | BLOCK_47
      | ... and 1 more alternatives
INTERLEAVE_9 -> BLOCK_16
      | BLOCK_16 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 50: suffix_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SUFFIX_OBJECT
Production Rules: 36
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 9.00
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_SUFFIX_OBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, GEP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SUFFIX_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 51: cJSON_AddItemToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDITEMTOOBJECT
Production Rules: 32
Non-terminals: 5
Terminals: 9

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.00
Estimated Depth: 2
Instruction Types: ADD, ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_ADDITEMTOOBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDITEMTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 24 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 52: add_item_to_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_ADD_ITEM_TO_OBJECT
Production Rules: 332
Non-terminals: 57
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 15
Choice Points: 32
Loop Patterns: 0
Path Alternatives: 62
Branching Factor: 6.04
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_19, BLOCK_22, BLOCK_26, BLOCK_27, BLOCK_30, BLOCK_37, BLOCK_43
  BLOCK_44, BLOCK_49, BLOCK_55, BLOCK_60, BLOCK_67, BLOCK_77, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_16, CONTENT_19, CONTENT_22, CONTENT_26, CONTENT_27, CONTENT_30, CONTENT_37, CONTENT_43
  CONTENT_44, CONTENT_49, CONTENT_55, CONTENT_60, CONTENT_67, CONTENT_77, CONTENT_ENTRY, FUNC_ADD_ITEM_TO_OBJECT
  INSTRUCTION_SEQ, INTERLEAVE_16, INTERLEAVE_19, INTERLEAVE_22, INTERLEAVE_27, INTERLEAVE_37, INTERLEAVE_49, INTERLEAVE_55
  INTERLEAVE_ENTRY, OPT_16, OPT_19, OPT_22, OPT_26, OPT_27, OPT_30, OPT_37
  OPT_43, OPT_44, OPT_49, OPT_55, OPT_60, OPT_67, OPT_77, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_ADD_ITEM_TO_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 BLOCK_77
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 BLOCK_49
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 BLOCK_77
BLOCK_44 -> INSTRUCTION_SEQ
      | CONTENT_44 BLOCK_49
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 CHOICE_POINT
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 CHOICE_POINT
BLOCK_60 -> INSTRUCTION_SEQ
      | CONTENT_60 BLOCK_67
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67 BLOCK_77
BLOCK_77 -> INSTRUCTION_SEQ
      | CONTENT_77
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_26
      | BLOCK_16
 | BLOCK_26 BLOCK_16
      | ... and 21 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 198 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_26
      | BLOCK_16
 | BLOCK_26 BLOCK_16
      | ... and 21 more alternatives
OPT_16 -> BLOCK_16
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_60 -> BLOCK_60
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
OPT_77 -> BLOCK_77
      | EPSILON
... and 1 more paths & alternatives rules

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_60 -> INSTRUCTION_SEQ
     CONTENT_67 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_16 -> BLOCK_26
      | BLOCK_26 BLOCK_19
 | BLOCK_19
      | ... and 1 more alternatives
... and 7 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 53: cast_away_const
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CAST_AWAY_CONST
Production Rules: 18
Non-terminals: 5
Terminals: 9

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 4.50
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CAST_AWAY_CONST, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CAST_AWAY_CONST -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 10 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 54: cJSON_AddItemToObjectCS
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDITEMTOOBJECTCS
Production Rules: 32
Non-terminals: 5
Terminals: 9

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.00
Estimated Depth: 2
Instruction Types: ADD, ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_ADDITEMTOOBJECTCS, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDITEMTOOBJECTCS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 24 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 55: cJSON_AddItemReferenceToArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDITEMREFERENCETOARRAY
Production Rules: 71
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_8, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_8, CONTENT_9
  CONTENT_ENTRY, FUNC_CJSON_ADDITEMREFERENCETOARRAY, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_8, OPT_9, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDITEMREFERENCETOARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_14
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9
OPT_14 -> BLOCK_14
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 56: create_reference
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CREATE_REFERENCE
Production Rules: 138
Non-terminals: 24
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.00/10.0
Basic Blocks: 6
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 20
Branching Factor: 6.27
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_15, BLOCK_16, BLOCK_30, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10
  CONTENT_15, CONTENT_16, CONTENT_30, CONTENT_9, CONTENT_ENTRY, FUNC_CREATE_REFERENCE, INSTRUCTION_SEQ, INTERLEAVE_10
  INTERLEAVE_ENTRY, OPT_10, OPT_15, OPT_16, OPT_30, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CREATE_REFERENCE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_30
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_30
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_30
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_10
 | BLOCK_9 BLOCK_10
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 91 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_10
 | BLOCK_9 BLOCK_10
      | ... and 3 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_10 -> BLOCK_15
      | BLOCK_15 BLOCK_16
 | BLOCK_16
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_9
      | BLOCK_9 BLOCK_10
 | BLOCK_10
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 57: cJSON_AddItemReferenceToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDITEMREFERENCETOOBJECT
Production Rules: 96
Non-terminals: 21
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.80/10.0
Basic Blocks: 5
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 18
Branching Factor: 5.05
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_13, BLOCK_14, BLOCK_20, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_13
  CONTENT_14, CONTENT_20, CONTENT_ENTRY, FUNC_CJSON_ADDITEMREFERENCETOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_ENTRY, OPT_10
  OPT_13, OPT_14, OPT_20, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDITEMREFERENCETOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_20
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 54 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 3 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_10 -> BLOCK_13
      | BLOCK_13 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_10
 | BLOCK_10
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 58: cJSON_AddNullToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDNULLTOOBJECT
Production Rules: 81
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_15, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_15, CONTENT_17
  CONTENT_ENTRY, FUNC_CJSON_ADDNULLTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_15, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDNULLTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_17
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15
OPT_13 -> BLOCK_13
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 59: cJSON_CreateNull
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATENULL
Production Rules: 53
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 4.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_5, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_5, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATENULL
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_5, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATENULL -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_8
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8
OPT_5 -> BLOCK_5
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 60: cJSON_AddTrueToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDTRUETOOBJECT
Production Rules: 81
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_15, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_15, CONTENT_17
  CONTENT_ENTRY, FUNC_CJSON_ADDTRUETOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_15, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDTRUETOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_17
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15
OPT_13 -> BLOCK_13
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 61: cJSON_CreateTrue
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATETRUE
Production Rules: 53
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 4.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_5, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_5, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATETRUE
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_5, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATETRUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_8
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8
OPT_5 -> BLOCK_5
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 62: cJSON_AddFalseToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDFALSETOOBJECT
Production Rules: 81
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_15, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_15, CONTENT_17
  CONTENT_ENTRY, FUNC_CJSON_ADDFALSETOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_15, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDFALSETOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_17
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15
OPT_13 -> BLOCK_13
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 63: cJSON_CreateFalse
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEFALSE
Production Rules: 53
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 4.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_5, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_5, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATEFALSE
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_5, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEFALSE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_8
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8
OPT_5 -> BLOCK_5
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 64: cJSON_AddBoolToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDBOOLTOOBJECT
Production Rules: 87
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.80
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_18, BLOCK_20, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_18, CONTENT_20
  CONTENT_ENTRY, FUNC_CJSON_ADDBOOLTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_18, OPT_20, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDBOOLTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_20
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 57 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 65: cJSON_CreateBool
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEBOOL
Production Rules: 65
Non-terminals: 14
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 5.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_CREATEBOOL
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SELECT, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEBOOL -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 40 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14
OPT_14 -> BLOCK_14
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 66: cJSON_AddNumberToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDNUMBERTOOBJECT
Production Rules: 87
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.80
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_18, BLOCK_20, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_18, CONTENT_20
  CONTENT_ENTRY, FUNC_CJSON_ADDNUMBERTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_18, OPT_20, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDNUMBERTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_20
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 57 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 67: cJSON_CreateNumber
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATENUMBER
Production Rules: 151
Non-terminals: 34
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.80/10.0
Basic Blocks: 9
Choice Points: 12
Loop Patterns: 0
Path Alternatives: 30
Branching Factor: 4.72
Estimated Depth: 8
Instruction Types: ALLOCA, BRANCH, CALL, FCMP, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_15, BLOCK_18, BLOCK_21, BLOCK_24, BLOCK_29, BLOCK_30, BLOCK_31, BLOCK_7
  BLOCK_ENTRY, CHOICE_POINT, CONTENT_15, CONTENT_18, CONTENT_21, CONTENT_24, CONTENT_29, CONTENT_30
  CONTENT_31, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_CREATENUMBER, INSTRUCTION_SEQ, INTERLEAVE_18, INTERLEAVE_7, INTERLEAVE_ENTRY
  OPT_15, OPT_18, OPT_21, OPT_24, OPT_29, OPT_30, OPT_31, OPT_7
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FCMP, FPTOSI, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATENUMBER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_30
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_29
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 BLOCK_29
BLOCK_29 -> BRANCH
      | CONTENT_29 BLOCK_30
BLOCK_30 -> BRANCH
      | CONTENT_30 BLOCK_31
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_31
 | BLOCK_7 BLOCK_31
      | ... and 6 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 82 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_31
 | BLOCK_7 BLOCK_31
      | ... and 6 more alternatives
OPT_15 -> BLOCK_15
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_18 -> BLOCK_21
      | BLOCK_21 BLOCK_24
 | BLOCK_24
      | ... and 1 more alternatives
INTERLEAVE_7 -> BLOCK_15
      | BLOCK_15 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 68: cJSON_AddStringToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDSTRINGTOOBJECT
Production Rules: 87
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.80
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_18, BLOCK_20, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_18, CONTENT_20
  CONTENT_ENTRY, FUNC_CJSON_ADDSTRINGTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_18, OPT_20, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDSTRINGTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_20
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 57 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 69: cJSON_CreateString
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATESTRING
Production Rules: 115
Non-terminals: 24
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.00/10.0
Basic Blocks: 6
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 20
Branching Factor: 5.23
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_19, BLOCK_21, BLOCK_22, BLOCK_24, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_19
  CONTENT_21, CONTENT_22, CONTENT_24, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATESTRING, INSTRUCTION_SEQ, INTERLEAVE_8
  INTERLEAVE_ENTRY, OPT_19, OPT_21, OPT_22, OPT_24, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATESTRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 BLOCK_24
BLOCK_21 -> BRANCH
      | CONTENT_21 BLOCK_22
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_24
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_22
 | BLOCK_8 BLOCK_22
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 68 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_22
 | BLOCK_8 BLOCK_22
      | ... and 3 more alternatives
OPT_19 -> BLOCK_19
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_8 -> BLOCK_21
      | BLOCK_21 BLOCK_19
 | BLOCK_19
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_22
 | BLOCK_22
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 70: cJSON_AddRawToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDRAWTOOBJECT
Production Rules: 87
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.80
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_18, BLOCK_20, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_18, CONTENT_20
  CONTENT_ENTRY, FUNC_CJSON_ADDRAWTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_18, OPT_20, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDRAWTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_20
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 57 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_18
 | BLOCK_16 BLOCK_18
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_16
      | BLOCK_16 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 71: cJSON_CreateRaw
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATERAW
Production Rules: 115
Non-terminals: 24
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 7.00/10.0
Basic Blocks: 6
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 20
Branching Factor: 5.23
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_19, BLOCK_21, BLOCK_22, BLOCK_24, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_19
  CONTENT_21, CONTENT_22, CONTENT_24, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATERAW, INSTRUCTION_SEQ, INTERLEAVE_8
  INTERLEAVE_ENTRY, OPT_19, OPT_21, OPT_22, OPT_24, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATERAW -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 BLOCK_24
BLOCK_21 -> BRANCH
      | CONTENT_21 BLOCK_22
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_24
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_22
 | BLOCK_8 BLOCK_22
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 68 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_22
 | BLOCK_8 BLOCK_22
      | ... and 3 more alternatives
OPT_19 -> BLOCK_19
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_8 -> BLOCK_21
      | BLOCK_21 BLOCK_19
 | BLOCK_19
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_22
 | BLOCK_22
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 72: cJSON_AddObjectToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDOBJECTTOOBJECT
Production Rules: 81
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_15, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_15, CONTENT_17
  CONTENT_ENTRY, FUNC_CJSON_ADDOBJECTTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_15, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDOBJECTTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_17
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15
OPT_13 -> BLOCK_13
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 73: cJSON_CreateObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEOBJECT
Production Rules: 53
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 4.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_5, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_5, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATEOBJECT
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_5, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_8
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8
OPT_5 -> BLOCK_5
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 74: cJSON_AddArrayToObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ADDARRAYTOOBJECT
Production Rules: 81
Non-terminals: 17
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_15, BLOCK_17, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_15, CONTENT_17
  CONTENT_ENTRY, FUNC_CJSON_ADDARRAYTOOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_15, OPT_17, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ADDARRAYTOOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_17
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_17
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_15
 | BLOCK_13 BLOCK_15
OPT_13 -> BLOCK_13
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 75: cJSON_CreateArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEARRAY
Production Rules: 53
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 4.42
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_5, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_5, CONTENT_8, CONTENT_ENTRY, FUNC_CJSON_CREATEARRAY
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_5, OPT_8, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 BLOCK_8
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_5
      | BLOCK_8
 | BLOCK_5 BLOCK_8
OPT_5 -> BLOCK_5
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_5
      | BLOCK_5 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 76: cJSON_DetachItemViaPointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DETACHITEMVIAPOINTER
Production Rules: 337
Non-terminals: 60
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 16
Choice Points: 32
Loop Patterns: 0
Path Alternatives: 64
Branching Factor: 5.81
Estimated Depth: 8
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_17, BLOCK_22, BLOCK_23, BLOCK_29, BLOCK_37, BLOCK_42, BLOCK_50
  BLOCK_56, BLOCK_62, BLOCK_67, BLOCK_75, BLOCK_76, BLOCK_8, BLOCK_82, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_11, CONTENT_17, CONTENT_22, CONTENT_23, CONTENT_29, CONTENT_37, CONTENT_42
  CONTENT_50, CONTENT_56, CONTENT_62, CONTENT_67, CONTENT_75, CONTENT_76, CONTENT_8, CONTENT_82
  CONTENT_ENTRY, FUNC_CJSON_DETACHITEMVIAPOINTER, INSTRUCTION_SEQ, INTERLEAVE_11, INTERLEAVE_17, INTERLEAVE_23, INTERLEAVE_37, INTERLEAVE_50
  INTERLEAVE_62, INTERLEAVE_8, INTERLEAVE_ENTRY, OPT_11, OPT_17, OPT_22, OPT_23, OPT_29
  OPT_37, OPT_42, OPT_50, OPT_56, OPT_62, OPT_67, OPT_75, OPT_76
  OPT_8, OPT_82, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DETACHITEMVIAPOINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_82
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_37
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_50
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 CHOICE_POINT
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 BLOCK_76
BLOCK_62 -> INSTRUCTION_SEQ
      | CONTENT_62 CHOICE_POINT
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67 BLOCK_75
BLOCK_75 -> BRANCH
      | CONTENT_75 BLOCK_76
BLOCK_76 -> INSTRUCTION_SEQ
      | CONTENT_76 BLOCK_82
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 CHOICE_POINT
BLOCK_82 -> INSTRUCTION_SEQ
      | CONTENT_82
... and 1 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_22
      | BLOCK_8
 | BLOCK_22 BLOCK_8
      | ... and 21 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 198 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_22
      | BLOCK_8
 | BLOCK_22 BLOCK_8
      | ... and 21 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_62 -> BLOCK_62
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
OPT_75 -> BLOCK_75
      | EPSILON
OPT_76 -> BLOCK_76
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
... and 2 more paths & alternatives rules

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_62 -> INSTRUCTION_SEQ
     CONTENT_67 -> INSTRUCTION_SEQ
     CONTENT_75 -> INSTRUCTION_SEQ
     CONTENT_76 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     ... and 8 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 77: cJSON_DetachItemFromArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DETACHITEMFROMARRAY
Production Rules: 75
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.00
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_8, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_8, CONTENT_9
  CONTENT_ENTRY, FUNC_CJSON_DETACHITEMFROMARRAY, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_8, OPT_9, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DETACHITEMFROMARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_16
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 BLOCK_16
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 45 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_8
      | BLOCK_9
 | BLOCK_8 BLOCK_9
OPT_16 -> BLOCK_16
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_8
      | BLOCK_8 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 78: cJSON_DeleteItemFromArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DELETEITEMFROMARRAY
Production Rules: 28
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 7.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DELETEITEMFROMARRAY, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DELETEITEMFROMARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 20 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 79: cJSON_DetachItemFromObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DETACHITEMFROMOBJECT
Production Rules: 36
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 9.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DETACHITEMFROMOBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DETACHITEMFROMOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 80: cJSON_DetachItemFromObjectCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DETACHITEMFROMOBJECTCASESENSITIVE
Production Rules: 36
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 9.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DETACHITEMFROMOBJECTCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DETACHITEMFROMOBJECTCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 28 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 81: cJSON_DeleteItemFromObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DELETEITEMFROMOBJECT
Production Rules: 28
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 7.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DELETEITEMFROMOBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DELETEITEMFROMOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 20 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 82: cJSON_DeleteItemFromObjectCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DELETEITEMFROMOBJECTCASESENSITIVE
Production Rules: 28
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 7.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DELETEITEMFROMOBJECTCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DELETEITEMFROMOBJECTCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 20 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 83: cJSON_InsertItemInArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_INSERTITEMINARRAY
Production Rules: 282
Non-terminals: 49
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 13
Choice Points: 24
Loop Patterns: 0
Path Alternatives: 50
Branching Factor: 6.00
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_14, BLOCK_15, BLOCK_22, BLOCK_26, BLOCK_32, BLOCK_37, BLOCK_38
  BLOCK_55, BLOCK_59, BLOCK_65, BLOCK_66, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_14
  CONTENT_15, CONTENT_22, CONTENT_26, CONTENT_32, CONTENT_37, CONTENT_38, CONTENT_55, CONTENT_59
  CONTENT_65, CONTENT_66, CONTENT_ENTRY, FUNC_CJSON_INSERTITEMINARRAY, INSTRUCTION_SEQ, INTERLEAVE_11, INTERLEAVE_15, INTERLEAVE_26
  INTERLEAVE_32, INTERLEAVE_38, INTERLEAVE_ENTRY, OPT_11, OPT_14, OPT_15, OPT_22, OPT_26
  OPT_32, OPT_37, OPT_38, OPT_55, OPT_59, OPT_65, OPT_66, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_INSERTITEMINARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_66
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_66
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_66
BLOCK_38 -> INSTRUCTION_SEQ
      | CONTENT_38 CHOICE_POINT
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 BLOCK_65
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59 BLOCK_65
BLOCK_65 -> INSTRUCTION_SEQ
      | CONTENT_65 BLOCK_66
BLOCK_66 -> INSTRUCTION_SEQ
      | CONTENT_66
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_11
 | BLOCK_14 BLOCK_11
      | ... and 15 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 172 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_11
 | BLOCK_14 BLOCK_11
      | ... and 15 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_38 -> BLOCK_38
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
OPT_65 -> BLOCK_65
      | EPSILON
OPT_66 -> BLOCK_66
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_38 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_59 -> INSTRUCTION_SEQ
     CONTENT_65 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_11 -> BLOCK_14
      | BLOCK_14 BLOCK_15
 | BLOCK_15
      | ... and 1 more alternatives
INTERLEAVE_15 -> BLOCK_22
      | BLOCK_22 BLOCK_26
 | BLOCK_26
      | ... and 1 more alternatives
INTERLEAVE_26 -> BLOCK_32
      | BLOCK_32 BLOCK_38
 | BLOCK_38
      | ... and 1 more alternatives
... and 3 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 84: cJSON_ReplaceItemViaPointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_REPLACEITEMVIAPOINTER
Production Rules: 423
Non-terminals: 74
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 20
Choice Points: 40
Loop Patterns: 0
Path Alternatives: 80
Branching Factor: 5.88
Estimated Depth: 8
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_101, BLOCK_15, BLOCK_18, BLOCK_21, BLOCK_22, BLOCK_26, BLOCK_27
  BLOCK_42, BLOCK_48, BLOCK_54, BLOCK_64, BLOCK_68, BLOCK_72, BLOCK_77, BLOCK_83
  BLOCK_88, BLOCK_94, BLOCK_95, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_101, CONTENT_15
  CONTENT_18, CONTENT_21, CONTENT_22, CONTENT_26, CONTENT_27, CONTENT_42, CONTENT_48, CONTENT_54
  CONTENT_64, CONTENT_68, CONTENT_72, CONTENT_77, CONTENT_83, CONTENT_88, CONTENT_94, CONTENT_95
  CONTENT_ENTRY, FUNC_CJSON_REPLACEITEMVIAPOINTER, INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_15, INTERLEAVE_18, INTERLEAVE_22, INTERLEAVE_27
  INTERLEAVE_48, INTERLEAVE_54, INTERLEAVE_72, INTERLEAVE_83, INTERLEAVE_ENTRY, OPT_10, OPT_101, OPT_15
  OPT_18, OPT_21, OPT_22, OPT_26, OPT_27, OPT_42, OPT_48, OPT_54
  OPT_64, OPT_68, OPT_72, OPT_77, OPT_83, OPT_88, OPT_94, OPT_95
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_REPLACEITEMVIAPOINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_101
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 BLOCK_101
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_48
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 CHOICE_POINT
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 CHOICE_POINT
BLOCK_64 -> INSTRUCTION_SEQ
      | CONTENT_64 BLOCK_68
BLOCK_68 -> INSTRUCTION_SEQ
      | CONTENT_68 BLOCK_95
BLOCK_72 -> INSTRUCTION_SEQ
      | CONTENT_72 CHOICE_POINT
BLOCK_77 -> INSTRUCTION_SEQ
      | CONTENT_77 BLOCK_83
... and 5 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_21
      | BLOCK_10
 | BLOCK_21 BLOCK_10
      | ... and 27 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 250 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_21
      | BLOCK_10
 | BLOCK_21 BLOCK_10
      | ... and 27 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_101 -> BLOCK_101
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
OPT_64 -> BLOCK_64
      | EPSILON
OPT_68 -> BLOCK_68
      | EPSILON
OPT_72 -> BLOCK_72
      | EPSILON
... and 6 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_64 -> INSTRUCTION_SEQ
     CONTENT_68 -> INSTRUCTION_SEQ
     CONTENT_72 -> INSTRUCTION_SEQ
     CONTENT_77 -> INSTRUCTION_SEQ
     CONTENT_83 -> INSTRUCTION_SEQ
     ... and 14 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 85: cJSON_ReplaceItemInArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_REPLACEITEMINARRAY
Production Rules: 81
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 5.40
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_11, BLOCK_19, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_11, CONTENT_19
  CONTENT_ENTRY, FUNC_CJSON_REPLACEITEMINARRAY, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_10, OPT_11, OPT_19, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_REPLACEITEMINARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 BLOCK_19
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_19
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_11
 | BLOCK_10 BLOCK_11

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 51 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_10
      | BLOCK_11
 | BLOCK_10 BLOCK_11
OPT_10 -> BLOCK_10
      | EPSILON
OPT_11 -> BLOCK_11
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_10
      | BLOCK_10 BLOCK_11
 | BLOCK_11
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 86: cJSON_ReplaceItemInObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_REPLACEITEMINOBJECT
Production Rules: 32
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_REPLACEITEMINOBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_REPLACEITEMINOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 24 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 87: replace_item_in_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_REPLACE_ITEM_IN_OBJECT
Production Rules: 221
Non-terminals: 39
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 10
Choice Points: 20
Loop Patterns: 0
Path Alternatives: 40
Branching Factor: 5.97
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_16, BLOCK_22, BLOCK_27, BLOCK_31, BLOCK_40, BLOCK_41
  BLOCK_53, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_16, CONTENT_22, CONTENT_27
  CONTENT_31, CONTENT_40, CONTENT_41, CONTENT_53, CONTENT_ENTRY, FUNC_REPLACE_ITEM_IN_OBJECT, INSTRUCTION_SEQ, INTERLEAVE_12
  INTERLEAVE_16, INTERLEAVE_22, INTERLEAVE_31, INTERLEAVE_ENTRY, OPT_12, OPT_15, OPT_16, OPT_22
  OPT_27, OPT_31, OPT_40, OPT_41, OPT_53, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_REPLACE_ITEM_IN_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_53
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 BLOCK_31
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31 CHOICE_POINT
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 BLOCK_53
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_53
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 12 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 133 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 12 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_15
      | BLOCK_15 BLOCK_16
 | BLOCK_16
      | ... and 1 more alternatives
INTERLEAVE_16 -> BLOCK_31
      | BLOCK_31 BLOCK_22
 | BLOCK_22
      | ... and 1 more alternatives
INTERLEAVE_22 -> BLOCK_27
      | BLOCK_27 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_31 -> BLOCK_40
      | BLOCK_40 BLOCK_41
 | BLOCK_41
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_15
      | BLOCK_15 BLOCK_12
 | BLOCK_12
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 88: cJSON_ReplaceItemInObjectCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_REPLACEITEMINOBJECTCASESENSITIVE
Production Rules: 32
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 8.00
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_REPLACEITEMINOBJECTCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_REPLACEITEMINOBJECTCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 24 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 89: cJSON_CreateStringReference
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATESTRINGREFERENCE
Production Rules: 67
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 5.58
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_CREATESTRINGREFERENCE
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATESTRINGREFERENCE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 42 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14
OPT_14 -> BLOCK_14
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 90: cJSON_CreateObjectReference
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEOBJECTREFERENCE
Production Rules: 67
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 5.58
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_CREATEOBJECTREFERENCE
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEOBJECTREFERENCE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 42 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14
OPT_14 -> BLOCK_14
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 91: cJSON_CreateArrayReference
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEARRAYREFERENCE
Production Rules: 67
Non-terminals: 14
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.20/10.0
Basic Blocks: 3
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 10
Branching Factor: 5.58
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_7, CONTENT_ENTRY, FUNC_CJSON_CREATEARRAYREFERENCE
  INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_7, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEARRAYREFERENCE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 42 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_14
 | BLOCK_7 BLOCK_14
OPT_14 -> BLOCK_14
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 92: cJSON_CreateIntArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEINTARRAY
Production Rules: 377
Non-terminals: 78
Terminals: 18

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 27
Path Alternatives: 70
Branching Factor: 4.96
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_16, BLOCK_18, BLOCK_21, BLOCK_26, BLOCK_28, BLOCK_37
  BLOCK_39, BLOCK_42, BLOCK_46, BLOCK_49, BLOCK_51, BLOCK_54, BLOCK_57, BLOCK_62
  BLOCK_68, BLOCK_70, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_16, CONTENT_18
  CONTENT_21, CONTENT_26, CONTENT_28, CONTENT_37, CONTENT_39, CONTENT_42, CONTENT_46, CONTENT_49
  CONTENT_51, CONTENT_54, CONTENT_57, CONTENT_62, CONTENT_68, CONTENT_70, CONTENT_ENTRY, FUNC_CJSON_CREATEINTARRAY
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_28, INTERLEAVE_39, INTERLEAVE_54, INTERLEAVE_57
  INTERLEAVE_ENTRY, LOOP_18, LOOP_21, LOOP_26, LOOP_28, LOOP_39, LOOP_42, LOOP_46
  LOOP_49, LOOP_51, OPT_12, OPT_15, OPT_16, OPT_18, OPT_21, OPT_26
  OPT_28, OPT_37, OPT_39, OPT_42, OPT_46, OPT_49, OPT_51, OPT_54
  OPT_57, OPT_62, OPT_68, OPT_70, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT, SITOFP

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEINTARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_70
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_18
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_26
 | LOOP_21
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
 | LOOP_26
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_70
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 CHOICE_POINT
 | LOOP_39
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_49
 | LOOP_42
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 BLOCK_49
 | LOOP_46
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 BLOCK_51
 | LOOP_49
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51 BLOCK_18
 | LOOP_51
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 CHOICE_POINT
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57 CHOICE_POINT
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 196 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_51 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 93: cJSON_CreateFloatArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEFLOATARRAY
Production Rules: 377
Non-terminals: 78
Terminals: 18

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 27
Path Alternatives: 70
Branching Factor: 4.96
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_16, BLOCK_18, BLOCK_21, BLOCK_26, BLOCK_28, BLOCK_37
  BLOCK_39, BLOCK_42, BLOCK_46, BLOCK_49, BLOCK_51, BLOCK_54, BLOCK_57, BLOCK_62
  BLOCK_68, BLOCK_70, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_16, CONTENT_18
  CONTENT_21, CONTENT_26, CONTENT_28, CONTENT_37, CONTENT_39, CONTENT_42, CONTENT_46, CONTENT_49
  CONTENT_51, CONTENT_54, CONTENT_57, CONTENT_62, CONTENT_68, CONTENT_70, CONTENT_ENTRY, FUNC_CJSON_CREATEFLOATARRAY
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_28, INTERLEAVE_39, INTERLEAVE_54, INTERLEAVE_57
  INTERLEAVE_ENTRY, LOOP_18, LOOP_21, LOOP_26, LOOP_28, LOOP_39, LOOP_42, LOOP_46
  LOOP_49, LOOP_51, OPT_12, OPT_15, OPT_16, OPT_18, OPT_21, OPT_26
  OPT_28, OPT_37, OPT_39, OPT_42, OPT_46, OPT_49, OPT_51, OPT_54
  OPT_57, OPT_62, OPT_68, OPT_70, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, FPEXT, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEFLOATARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_70
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_18
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_26
 | LOOP_21
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
 | LOOP_26
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_70
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 CHOICE_POINT
 | LOOP_39
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_49
 | LOOP_42
BLOCK_46 -> INSTRUCTION_SEQ
      | CONTENT_46 BLOCK_49
 | LOOP_46
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 BLOCK_51
 | LOOP_49
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51 BLOCK_18
 | LOOP_51
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 CHOICE_POINT
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57 CHOICE_POINT
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 196 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_46 -> BLOCK_46
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_46 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_51 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_57 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 94: cJSON_CreateDoubleArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATEDOUBLEARRAY
Production Rules: 375
Non-terminals: 78
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 27
Path Alternatives: 70
Branching Factor: 4.93
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_16, BLOCK_18, BLOCK_21, BLOCK_26, BLOCK_28, BLOCK_36
  BLOCK_38, BLOCK_41, BLOCK_45, BLOCK_48, BLOCK_50, BLOCK_53, BLOCK_56, BLOCK_61
  BLOCK_67, BLOCK_69, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_16, CONTENT_18
  CONTENT_21, CONTENT_26, CONTENT_28, CONTENT_36, CONTENT_38, CONTENT_41, CONTENT_45, CONTENT_48
  CONTENT_50, CONTENT_53, CONTENT_56, CONTENT_61, CONTENT_67, CONTENT_69, CONTENT_ENTRY, FUNC_CJSON_CREATEDOUBLEARRAY
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_28, INTERLEAVE_38, INTERLEAVE_53, INTERLEAVE_56
  INTERLEAVE_ENTRY, LOOP_18, LOOP_21, LOOP_26, LOOP_28, LOOP_38, LOOP_41, LOOP_45
  LOOP_48, LOOP_50, OPT_12, OPT_15, OPT_16, OPT_18, OPT_21, OPT_26
  OPT_28, OPT_36, OPT_38, OPT_41, OPT_45, OPT_48, OPT_50, OPT_53
  OPT_56, OPT_61, OPT_67, OPT_69, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATEDOUBLEARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_69
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_18
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_26
 | LOOP_21
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
 | LOOP_26
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_69
BLOCK_38 -> INSTRUCTION_SEQ
      | CONTENT_38 CHOICE_POINT
 | LOOP_38
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_48
 | LOOP_41
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 BLOCK_48
 | LOOP_45
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_50
 | LOOP_48
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 BLOCK_18
 | LOOP_50
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53 CHOICE_POINT
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 194 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_38 -> BLOCK_38
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_38 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 95: cJSON_CreateStringArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_CREATESTRINGARRAY
Production Rules: 375
Non-terminals: 78
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 27
Path Alternatives: 70
Branching Factor: 4.93
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_16, BLOCK_18, BLOCK_21, BLOCK_26, BLOCK_28, BLOCK_36
  BLOCK_38, BLOCK_41, BLOCK_45, BLOCK_48, BLOCK_50, BLOCK_53, BLOCK_56, BLOCK_61
  BLOCK_67, BLOCK_69, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_15, CONTENT_16, CONTENT_18
  CONTENT_21, CONTENT_26, CONTENT_28, CONTENT_36, CONTENT_38, CONTENT_41, CONTENT_45, CONTENT_48
  CONTENT_50, CONTENT_53, CONTENT_56, CONTENT_61, CONTENT_67, CONTENT_69, CONTENT_ENTRY, FUNC_CJSON_CREATESTRINGARRAY
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_28, INTERLEAVE_38, INTERLEAVE_53, INTERLEAVE_56
  INTERLEAVE_ENTRY, LOOP_18, LOOP_21, LOOP_26, LOOP_28, LOOP_38, LOOP_41, LOOP_45
  LOOP_48, LOOP_50, OPT_12, OPT_15, OPT_16, OPT_18, OPT_21, OPT_26
  OPT_28, OPT_36, OPT_38, OPT_41, OPT_45, OPT_48, OPT_50, OPT_53
  OPT_56, OPT_61, OPT_67, OPT_69, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_CREATESTRINGARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_69
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_18
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_26
 | LOOP_21
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
 | LOOP_26
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_69
BLOCK_38 -> INSTRUCTION_SEQ
      | CONTENT_38 CHOICE_POINT
 | LOOP_38
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_48
 | LOOP_41
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 BLOCK_48
 | LOOP_45
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_50
 | LOOP_48
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 BLOCK_18
 | LOOP_50
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53 CHOICE_POINT
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 194 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_12
 | BLOCK_15 BLOCK_12
      | ... and 21 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_38 -> BLOCK_38
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_38 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 96: cJSON_Duplicate
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DUPLICATE
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_DUPLICATE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DUPLICATE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 97: cJSON_Duplicate_rec
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_DUPLICATE_REC
Production Rules: 666
Non-terminals: 131
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 35
Choice Points: 60
Loop Patterns: 21
Path Alternatives: 130
Branching Factor: 5.16
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_107, BLOCK_108, BLOCK_111, BLOCK_119, BLOCK_124, BLOCK_128, BLOCK_131
  BLOCK_136, BLOCK_14, BLOCK_142, BLOCK_144, BLOCK_147, BLOCK_149, BLOCK_15, BLOCK_150
  BLOCK_19, BLOCK_20, BLOCK_41, BLOCK_52, BLOCK_53, BLOCK_54, BLOCK_59, BLOCK_65
  BLOCK_69, BLOCK_74, BLOCK_82, BLOCK_83, BLOCK_84, BLOCK_87, BLOCK_89, BLOCK_93
  BLOCK_96, BLOCK_99, BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_107, CONTENT_108, CONTENT_111
  CONTENT_119, CONTENT_124, CONTENT_128, CONTENT_131, CONTENT_136, CONTENT_14, CONTENT_142, CONTENT_144
  CONTENT_147, CONTENT_149, CONTENT_15, CONTENT_150, CONTENT_19, CONTENT_20, CONTENT_41, CONTENT_52
  CONTENT_53, CONTENT_54, CONTENT_59, CONTENT_65, CONTENT_69, CONTENT_74, CONTENT_82, CONTENT_83
  CONTENT_84, CONTENT_87, CONTENT_89, CONTENT_93, CONTENT_96, CONTENT_99, CONTENT_ENTRY, FUNC_CJSON_DUPLICATE_REC
  INSTRUCTION_SEQ, INTERLEAVE_100, INTERLEAVE_108, INTERLEAVE_128, INTERLEAVE_131, INTERLEAVE_144, INTERLEAVE_15, INTERLEAVE_20
  INTERLEAVE_41, INTERLEAVE_54, INTERLEAVE_59, INTERLEAVE_74, INTERLEAVE_84, INTERLEAVE_93, INTERLEAVE_96, INTERLEAVE_ENTRY
  LOOP_100, LOOP_108, LOOP_111, LOOP_119, LOOP_124, LOOP_93, LOOP_96, OPT_100
  OPT_107, OPT_108, OPT_111, OPT_119, OPT_124, OPT_128, OPT_131, OPT_136
  OPT_14, OPT_142, OPT_144, OPT_147, OPT_149, OPT_15, OPT_150, OPT_19
  OPT_20, OPT_41, OPT_52, OPT_53, OPT_54, OPT_59, OPT_65, OPT_69
  OPT_74, OPT_82, OPT_83, OPT_84, OPT_87, OPT_89, OPT_93, OPT_96
  OPT_99, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_DUPLICATE_REC -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 CHOICE_POINT
 | LOOP_100
BLOCK_107 -> BRANCH
      | CONTENT_107 BLOCK_144
BLOCK_108 -> INSTRUCTION_SEQ
      | CONTENT_108 CHOICE_POINT
 | LOOP_108
BLOCK_111 -> INSTRUCTION_SEQ
      | CONTENT_111 BLOCK_124
 | LOOP_111
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 BLOCK_124
 | LOOP_119
BLOCK_124 -> INSTRUCTION_SEQ
      | CONTENT_124 BLOCK_93
 | LOOP_124
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128 CHOICE_POINT
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 CHOICE_POINT
BLOCK_136 -> INSTRUCTION_SEQ
      | CONTENT_136 BLOCK_142
BLOCK_14 -> BRANCH
      | CONTENT_14 BLOCK_144
BLOCK_142 -> INSTRUCTION_SEQ
      | CONTENT_142 BLOCK_150
BLOCK_144 -> INSTRUCTION_SEQ
      | CONTENT_144 CHOICE_POINT
BLOCK_147 -> INSTRUCTION_SEQ
      | CONTENT_147 BLOCK_149
BLOCK_149 -> INSTRUCTION_SEQ
      | CONTENT_149 BLOCK_150
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
... and 20 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_14
 | BLOCK_15 BLOCK_14
      | ... and 42 more alternatives

Loops Rules:
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_108 -> BLOCK_108
      | BLOCK_108 LOOP_108
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_124 -> BLOCK_124
      | BLOCK_124 LOOP_124
LOOP_93 -> BLOCK_93
      | BLOCK_93 LOOP_93
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 362 more alternatives
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_108 -> BLOCK_108
      | BLOCK_108 LOOP_108
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_124 -> BLOCK_124
      | BLOCK_124 LOOP_124
LOOP_93 -> BLOCK_93
      | BLOCK_93 LOOP_93
LOOP_96 -> BLOCK_96
      | BLOCK_96 LOOP_96

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_14
 | BLOCK_15 BLOCK_14
      | ... and 42 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_107 -> BLOCK_107
      | EPSILON
OPT_108 -> BLOCK_108
      | EPSILON
OPT_111 -> BLOCK_111
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_124 -> BLOCK_124
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_136 -> BLOCK_136
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_142 -> BLOCK_142
      | EPSILON
OPT_144 -> BLOCK_144
      | EPSILON
OPT_147 -> BLOCK_147
      | EPSILON
OPT_149 -> BLOCK_149
      | EPSILON
... and 21 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_107 -> INSTRUCTION_SEQ
     CONTENT_108 -> INSTRUCTION_SEQ
     CONTENT_111 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_124 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_136 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_142 -> INSTRUCTION_SEQ
     CONTENT_144 -> INSTRUCTION_SEQ
     CONTENT_147 -> INSTRUCTION_SEQ
     CONTENT_149 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     ... and 34 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 98: cJSON_Minify
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_MINIFY
Production Rules: 272
Non-terminals: 64
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 18
Choice Points: 16
Loop Patterns: 0
Path Alternatives: 52
Branching Factor: 4.61
Estimated Depth: 10
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, MUL, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_15, BLOCK_20, BLOCK_23, BLOCK_29, BLOCK_30, BLOCK_36, BLOCK_37, BLOCK_40
  BLOCK_41, BLOCK_42, BLOCK_43, BLOCK_53, BLOCK_54, BLOCK_56, BLOCK_7, BLOCK_8
  BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_15, CONTENT_20, CONTENT_23, CONTENT_29, CONTENT_30
  CONTENT_36, CONTENT_37, CONTENT_40, CONTENT_41, CONTENT_42, CONTENT_43, CONTENT_53, CONTENT_54
  CONTENT_56, CONTENT_7, CONTENT_8, CONTENT_9, CONTENT_ENTRY, FUNC_CJSON_MINIFY, INSTRUCTION_SEQ, INTERLEAVE_23
  INTERLEAVE_30, INTERLEAVE_9, INTERLEAVE_ENTRY, OPT_15, OPT_20, OPT_23, OPT_29, OPT_30
  OPT_36, OPT_37, OPT_40, OPT_41, OPT_42, OPT_43, OPT_53, OPT_54
  OPT_56, OPT_7, OPT_8, OPT_9, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, MUL, OP_DEFINE, OR, RETURN, SEXT, SWITCH

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_MINIFY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_53
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_41
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_40
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_40
BLOCK_40 -> BRANCH
      | CONTENT_40 BLOCK_41
BLOCK_41 -> BRANCH
      | CONTENT_41 BLOCK_53
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_53
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 BLOCK_53
BLOCK_53 -> BRANCH
      | CONTENT_53 BLOCK_9
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 BLOCK_56
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56
BLOCK_7 -> BRANCH
      | CONTENT_7 BLOCK_56
... and 3 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8
      | ... and 9 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 152 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8
      | ... and 9 more alternatives
OPT_15 -> BLOCK_15
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
... and 4 more paths & alternatives rules

Other Rules:
CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     ... and 5 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 99: skip_oneline_comment
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SKIP_ONELINE_COMMENT
Production Rules: 135
Non-terminals: 31
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 9.20/10.0
Basic Blocks: 7
Choice Points: 8
Loop Patterns: 12
Path Alternatives: 22
Branching Factor: 4.66
Estimated Depth: 4
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_20, BLOCK_24, BLOCK_25, BLOCK_29, BLOCK_6, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_13, CONTENT_20, CONTENT_24, CONTENT_25, CONTENT_29, CONTENT_6, CONTENT_ENTRY, FUNC_SKIP_ONELINE_COMMENT
  INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_6, LOOP_13, LOOP_24, LOOP_25, LOOP_6, OPT_13
  OPT_20, OPT_24, OPT_25, OPT_29, OPT_6, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SKIP_ONELINE_COMMENT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
 | LOOP_13
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_29
BLOCK_24 -> BRANCH
      | CONTENT_24 BLOCK_25
 | LOOP_24
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_6
 | LOOP_25
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
 | LOOP_6
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_6

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_29
 | BLOCK_13 BLOCK_29
      | ... and 3 more alternatives

Loops Rules:
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 71 more alternatives
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_29
 | BLOCK_13 BLOCK_29
      | ... and 3 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_20
      | BLOCK_20 BLOCK_24
 | BLOCK_24
      | ... and 1 more alternatives
INTERLEAVE_6 -> BLOCK_13
      | BLOCK_13 BLOCK_29
 | BLOCK_29
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 100: skip_multiline_comment
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SKIP_MULTILINE_COMMENT
Production Rules: 165
Non-terminals: 36
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 9.60/10.0
Basic Blocks: 8
Choice Points: 12
Loop Patterns: 15
Path Alternatives: 28
Branching Factor: 4.85
Estimated Depth: 4
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, MUL, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_20, BLOCK_27, BLOCK_31, BLOCK_32, BLOCK_36, BLOCK_6, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_13, CONTENT_20, CONTENT_27, CONTENT_31, CONTENT_32, CONTENT_36, CONTENT_6
  CONTENT_ENTRY, FUNC_SKIP_MULTILINE_COMMENT, INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_20, INTERLEAVE_6, LOOP_13, LOOP_20
  LOOP_31, LOOP_32, LOOP_6, OPT_13, OPT_20, OPT_27, OPT_31, OPT_32
  OPT_36, OPT_6, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  MUL, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SKIP_MULTILINE_COMMENT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
 | LOOP_13
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
 | LOOP_20
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 BLOCK_36
BLOCK_31 -> BRANCH
      | CONTENT_31 BLOCK_32
 | LOOP_31
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 BLOCK_6
 | LOOP_32
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 CHOICE_POINT
 | LOOP_6
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_6

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_36
 | BLOCK_13 BLOCK_36
      | ... and 6 more alternatives

Loops Rules:
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6

Instructions Rules:
INSTRUCTION_SEQ -> MUL
      | INSTRUCTION_SEQ MUL
 | INSTRUCTION_SEQ ALLOCA
      | ... and 86 more alternatives
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_6 -> BLOCK_6
      | BLOCK_6 LOOP_6

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_36
 | BLOCK_13 BLOCK_36
      | ... and 6 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_20
      | BLOCK_20 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_27
      | BLOCK_27 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_6 -> BLOCK_13
      | BLOCK_13 BLOCK_36
 | BLOCK_36
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 101: minify_string
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_MINIFY_STRING
Production Rules: 314
Non-terminals: 49
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 11
Choice Points: 16
Loop Patterns: 24
Path Alternatives: 38
Branching Factor: 6.68
Estimated Depth: 4
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_18, BLOCK_25, BLOCK_39, BLOCK_49, BLOCK_56, BLOCK_63, BLOCK_77, BLOCK_78
  BLOCK_79, BLOCK_86, BLOCK_ENTRY, CHOICE_POINT, CONTENT_18, CONTENT_25, CONTENT_39, CONTENT_49
  CONTENT_56, CONTENT_63, CONTENT_77, CONTENT_78, CONTENT_79, CONTENT_86, CONTENT_ENTRY, FUNC_MINIFY_STRING
  INSTRUCTION_SEQ, INTERLEAVE_18, INTERLEAVE_25, INTERLEAVE_49, INTERLEAVE_56, LOOP_18, LOOP_25, LOOP_49
  LOOP_56, LOOP_63, LOOP_77, LOOP_78, LOOP_79, OPT_18, OPT_25, OPT_39
  OPT_49, OPT_56, OPT_63, OPT_77, OPT_78, OPT_79, OPT_86, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_MINIFY_STRING -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 CHOICE_POINT
 | LOOP_25
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_86
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 CHOICE_POINT
 | LOOP_49
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
 | LOOP_56
BLOCK_63 -> INSTRUCTION_SEQ
      | CONTENT_63 BLOCK_77
 | LOOP_63
BLOCK_77 -> BRANCH
      | CONTENT_77 BLOCK_78
 | LOOP_77
BLOCK_78 -> BRANCH
      | CONTENT_78 BLOCK_79
 | LOOP_78
BLOCK_79 -> INSTRUCTION_SEQ
      | CONTENT_79 BLOCK_18
 | LOOP_79
BLOCK_86 -> INSTRUCTION_SEQ
      | CONTENT_86
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_18

Control Flow Rules:
CHOICE_POINT -> BLOCK_25
      | BLOCK_86
 | BLOCK_25 BLOCK_86
      | ... and 9 more alternatives

Loops Rules:
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_56 -> BLOCK_56
      | BLOCK_56 LOOP_56
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_77 -> BLOCK_77
      | BLOCK_77 LOOP_77
LOOP_78 -> BLOCK_78
      | BLOCK_78 LOOP_78
LOOP_79 -> BLOCK_79
      | BLOCK_79 LOOP_79

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 204 more alternatives
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_56 -> BLOCK_56
      | BLOCK_56 LOOP_56
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_77 -> BLOCK_77
      | BLOCK_77 LOOP_77
LOOP_78 -> BLOCK_78
      | BLOCK_78 LOOP_78
LOOP_79 -> BLOCK_79
      | BLOCK_79 LOOP_79

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_25
      | BLOCK_86
 | BLOCK_25 BLOCK_86
      | ... and 9 more alternatives
OPT_18 -> BLOCK_18
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_63 -> BLOCK_63
      | EPSILON
OPT_77 -> BLOCK_77
      | EPSILON
OPT_78 -> BLOCK_78
      | EPSILON
OPT_79 -> BLOCK_79
      | EPSILON
OPT_86 -> BLOCK_86
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_63 -> INSTRUCTION_SEQ
     CONTENT_77 -> INSTRUCTION_SEQ
     CONTENT_78 -> INSTRUCTION_SEQ
     CONTENT_79 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_18 -> BLOCK_25
      | BLOCK_25 BLOCK_86
 | BLOCK_86
      | ... and 1 more alternatives
INTERLEAVE_25 -> BLOCK_39
      | BLOCK_39 BLOCK_49
 | BLOCK_49
      | ... and 1 more alternatives
INTERLEAVE_49 -> BLOCK_56
      | BLOCK_56 BLOCK_77
 | BLOCK_77
      | ... and 1 more alternatives
INTERLEAVE_56 -> BLOCK_63
      | BLOCK_63 BLOCK_77
 | BLOCK_77
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 102: cJSON_IsInvalid
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISINVALID
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISINVALID, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISINVALID -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 103: cJSON_IsFalse
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISFALSE
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISFALSE, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISFALSE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 104: cJSON_IsTrue
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISTRUE
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISTRUE, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISTRUE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 105: cJSON_IsBool
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISBOOL
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISBOOL, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISBOOL -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 106: cJSON_IsNull
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISNULL
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISNULL, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISNULL -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 107: cJSON_IsArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISARRAY
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISARRAY, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 108: cJSON_IsObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISOBJECT
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISOBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 109: cJSON_IsRaw
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_ISRAW
Production Rules: 71
Non-terminals: 17
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.73
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_6, BLOCK_7, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_6, CONTENT_7
  CONTENT_ENTRY, FUNC_CJSON_ISRAW, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_14, OPT_6, OPT_7, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_ISRAW -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14
BLOCK_6 -> INSTRUCTION_SEQ
      | CONTENT_6 BLOCK_14
BLOCK_7 -> INSTRUCTION_SEQ
      | CONTENT_7 BLOCK_14
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 41 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_6
      | BLOCK_7
 | BLOCK_6 BLOCK_7
OPT_14 -> BLOCK_14
      | EPSILON
OPT_6 -> BLOCK_6
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_6 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_6
      | BLOCK_6 BLOCK_7
 | BLOCK_7
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 110: cJSON_Compare
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_COMPARE
Production Rules: 974
Non-terminals: 206
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 55
Choice Points: 80
Loop Patterns: 45
Path Alternatives: 190
Branching Factor: 4.87
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_101, BLOCK_108, BLOCK_112, BLOCK_113, BLOCK_114, BLOCK_117, BLOCK_121
  BLOCK_122, BLOCK_124, BLOCK_127, BLOCK_136, BLOCK_137, BLOCK_14, BLOCK_143, BLOCK_144
  BLOCK_145, BLOCK_149, BLOCK_152, BLOCK_156, BLOCK_157, BLOCK_159, BLOCK_162, BLOCK_17
  BLOCK_171, BLOCK_172, BLOCK_178, BLOCK_179, BLOCK_180, BLOCK_184, BLOCK_185, BLOCK_186
  BLOCK_27, BLOCK_28, BLOCK_33, BLOCK_34, BLOCK_35, BLOCK_39, BLOCK_40, BLOCK_45
  BLOCK_46, BLOCK_55, BLOCK_56, BLOCK_57, BLOCK_62, BLOCK_67, BLOCK_68, BLOCK_77
  BLOCK_78, BLOCK_79, BLOCK_86, BLOCK_89, BLOCK_92, BLOCK_94, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_100, CONTENT_101, CONTENT_108, CONTENT_112, CONTENT_113, CONTENT_114, CONTENT_117, CONTENT_121
  CONTENT_122, CONTENT_124, CONTENT_127, CONTENT_136, CONTENT_137, CONTENT_14, CONTENT_143, CONTENT_144
  CONTENT_145, CONTENT_149, CONTENT_152, CONTENT_156, CONTENT_157, CONTENT_159, CONTENT_162, CONTENT_17
  CONTENT_171, CONTENT_172, CONTENT_178, CONTENT_179, CONTENT_180, CONTENT_184, CONTENT_185, CONTENT_186
  CONTENT_27, CONTENT_28, CONTENT_33, CONTENT_34, CONTENT_35, CONTENT_39, CONTENT_40, CONTENT_45
  CONTENT_46, CONTENT_55, CONTENT_56, CONTENT_57, CONTENT_62, CONTENT_67, CONTENT_68, CONTENT_77
  CONTENT_78, CONTENT_79, CONTENT_86, CONTENT_89, CONTENT_92, CONTENT_94, CONTENT_ENTRY, FUNC_CJSON_COMPARE
  INSTRUCTION_SEQ, INTERLEAVE_108, INTERLEAVE_114, INTERLEAVE_124, INTERLEAVE_127, INTERLEAVE_137, INTERLEAVE_14, INTERLEAVE_149
  INTERLEAVE_159, INTERLEAVE_162, INTERLEAVE_17, INTERLEAVE_172, INTERLEAVE_35, INTERLEAVE_46, INTERLEAVE_57, INTERLEAVE_62
  INTERLEAVE_68, INTERLEAVE_86, INTERLEAVE_92, INTERLEAVE_94, INTERLEAVE_ENTRY, LOOP_101, LOOP_124, LOOP_127
  LOOP_137, LOOP_144, LOOP_145, LOOP_159, LOOP_162, LOOP_172, LOOP_179, LOOP_180
  LOOP_86, LOOP_89, LOOP_92, LOOP_94, OPT_100, OPT_101, OPT_108, OPT_112
  OPT_113, OPT_114, OPT_117, OPT_121, OPT_122, OPT_124, OPT_127, OPT_136
  OPT_137, OPT_14, OPT_143, OPT_144, OPT_145, OPT_149, OPT_152, OPT_156
  OPT_157, OPT_159, OPT_162, OPT_17, OPT_171, OPT_172, OPT_178, OPT_179
  OPT_180, OPT_184, OPT_185, OPT_186, OPT_27, OPT_28, OPT_33, OPT_34
  OPT_35, OPT_39, OPT_40, OPT_45, OPT_46, OPT_55, OPT_56, OPT_57
  OPT_62, OPT_67, OPT_68, OPT_77, OPT_78, OPT_79, OPT_86, OPT_89
  OPT_92, OPT_94, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SWITCH

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_COMPARE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 BLOCK_186
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 BLOCK_86
 | LOOP_101
BLOCK_108 -> INSTRUCTION_SEQ
      | CONTENT_108 CHOICE_POINT
BLOCK_112 -> INSTRUCTION_SEQ
      | CONTENT_112 BLOCK_186
BLOCK_113 -> INSTRUCTION_SEQ
      | CONTENT_113 BLOCK_186
BLOCK_114 -> INSTRUCTION_SEQ
      | CONTENT_114 CHOICE_POINT
BLOCK_117 -> INSTRUCTION_SEQ
      | CONTENT_117 BLOCK_122
BLOCK_121 -> BRANCH
      | CONTENT_121 BLOCK_122
BLOCK_122 -> INSTRUCTION_SEQ
      | CONTENT_122 BLOCK_124
BLOCK_124 -> INSTRUCTION_SEQ
      | CONTENT_124 CHOICE_POINT
 | LOOP_124
BLOCK_127 -> INSTRUCTION_SEQ
      | CONTENT_127 CHOICE_POINT
 | LOOP_127
BLOCK_136 -> INSTRUCTION_SEQ
      | CONTENT_136 BLOCK_186
BLOCK_137 -> INSTRUCTION_SEQ
      | CONTENT_137 CHOICE_POINT
 | LOOP_137
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 BLOCK_186
... and 40 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_27
      | BLOCK_14
 | BLOCK_27 BLOCK_14
      | ... and 57 more alternatives

Loops Rules:
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_124 -> BLOCK_124
      | BLOCK_124 LOOP_124
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_137 -> BLOCK_137
      | BLOCK_137 LOOP_137
LOOP_144 -> BLOCK_144
      | BLOCK_144 LOOP_144
LOOP_145 -> BLOCK_145
      | BLOCK_145 LOOP_145
LOOP_159 -> BLOCK_159
      | BLOCK_159 LOOP_159
LOOP_162 -> BLOCK_162
      | BLOCK_162 LOOP_162
LOOP_172 -> BLOCK_172
      | BLOCK_172 LOOP_172
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
LOOP_180 -> BLOCK_180
      | BLOCK_180 LOOP_180
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
LOOP_92 -> BLOCK_92
      | BLOCK_92 LOOP_92
LOOP_94 -> BLOCK_94
      | BLOCK_94 LOOP_94

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 513 more alternatives
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_124 -> BLOCK_124
      | BLOCK_124 LOOP_124
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_137 -> BLOCK_137
      | BLOCK_137 LOOP_137
LOOP_144 -> BLOCK_144
      | BLOCK_144 LOOP_144
LOOP_145 -> BLOCK_145
      | BLOCK_145 LOOP_145
LOOP_159 -> BLOCK_159
      | BLOCK_159 LOOP_159
LOOP_162 -> BLOCK_162
      | BLOCK_162 LOOP_162
LOOP_172 -> BLOCK_172
      | BLOCK_172 LOOP_172
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
LOOP_180 -> BLOCK_180
      | BLOCK_180 LOOP_180
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_89 -> BLOCK_89
      | BLOCK_89 LOOP_89
LOOP_92 -> BLOCK_92
      | BLOCK_92 LOOP_92
... and 1 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_27
      | BLOCK_14
 | BLOCK_27 BLOCK_14
      | ... and 57 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_101 -> BLOCK_101
      | EPSILON
OPT_108 -> BLOCK_108
      | EPSILON
OPT_112 -> BLOCK_112
      | EPSILON
OPT_113 -> BLOCK_113
      | EPSILON
OPT_114 -> BLOCK_114
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_121 -> BLOCK_121
      | EPSILON
OPT_122 -> BLOCK_122
      | EPSILON
OPT_124 -> BLOCK_124
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_136 -> BLOCK_136
      | EPSILON
OPT_137 -> BLOCK_137
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
... and 41 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_108 -> INSTRUCTION_SEQ
     CONTENT_112 -> INSTRUCTION_SEQ
     CONTENT_113 -> INSTRUCTION_SEQ
     CONTENT_114 -> INSTRUCTION_SEQ
     CONTENT_117 -> INSTRUCTION_SEQ
     CONTENT_121 -> INSTRUCTION_SEQ
     CONTENT_122 -> INSTRUCTION_SEQ
     CONTENT_124 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_136 -> INSTRUCTION_SEQ
     CONTENT_137 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     ... and 57 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 111: cJSON_malloc
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSON_MALLOC
Production Rules: 22
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSON_MALLOC, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSON_MALLOC -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 14 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 112: cJSONUtils_FindPointerFromObjectTo
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_FINDPOINTERFROMOBJECTTO
Production Rules: 419
Non-terminals: 73
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 19
Choice Points: 32
Loop Patterns: 12
Path Alternatives: 70
Branching Factor: 5.90
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_16, BLOCK_17, BLOCK_21, BLOCK_23, BLOCK_27, BLOCK_30, BLOCK_36
  BLOCK_40, BLOCK_48, BLOCK_51, BLOCK_58, BLOCK_62, BLOCK_84, BLOCK_86, BLOCK_87
  BLOCK_93, BLOCK_94, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_16, CONTENT_17, CONTENT_21
  CONTENT_23, CONTENT_27, CONTENT_30, CONTENT_36, CONTENT_40, CONTENT_48, CONTENT_51, CONTENT_58
  CONTENT_62, CONTENT_84, CONTENT_86, CONTENT_87, CONTENT_93, CONTENT_94, CONTENT_ENTRY, FUNC_CJSONUTILS_FINDPOINTERFROMOBJECTTO
  INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_17, INTERLEAVE_27, INTERLEAVE_30, INTERLEAVE_36, INTERLEAVE_40, INTERLEAVE_58
  INTERLEAVE_ENTRY, LOOP_27, LOOP_30, LOOP_86, LOOP_87, OPT_13, OPT_16, OPT_17
  OPT_21, OPT_23, OPT_27, OPT_30, OPT_36, OPT_40, OPT_48, OPT_51
  OPT_58, OPT_62, OPT_84, OPT_86, OPT_87, OPT_93, OPT_94, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_FINDPOINTERFROMOBJECTTO -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 BLOCK_94
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_94
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_27
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
 | LOOP_27
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
 | LOOP_30
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 CHOICE_POINT
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 CHOICE_POINT
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_94
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51 BLOCK_94
BLOCK_58 -> INSTRUCTION_SEQ
      | CONTENT_58 CHOICE_POINT
BLOCK_62 -> INSTRUCTION_SEQ
      | CONTENT_62 BLOCK_94
BLOCK_84 -> INSTRUCTION_SEQ
      | CONTENT_84 BLOCK_94
BLOCK_86 -> BRANCH
      | CONTENT_86 BLOCK_87
 | LOOP_86
... and 4 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_13
 | BLOCK_16 BLOCK_13
      | ... and 21 more alternatives

Loops Rules:
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_87 -> BLOCK_87
      | BLOCK_87 LOOP_87

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 253 more alternatives
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_86 -> BLOCK_86
      | BLOCK_86 LOOP_86
LOOP_87 -> BLOCK_87
      | BLOCK_87 LOOP_87

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_13
 | BLOCK_16 BLOCK_13
      | ... and 21 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_58 -> BLOCK_58
      | EPSILON
OPT_62 -> BLOCK_62
      | EPSILON
OPT_84 -> BLOCK_84
      | EPSILON
... and 5 more paths & alternatives rules

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_51 -> INSTRUCTION_SEQ
     CONTENT_58 -> INSTRUCTION_SEQ
     CONTENT_62 -> INSTRUCTION_SEQ
     CONTENT_84 -> INSTRUCTION_SEQ
     CONTENT_86 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 113: cJSONUtils_strdup
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_STRDUP
Production Rules: 91
Non-terminals: 17
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 6.07
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_14, BLOCK_19, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_14, CONTENT_19
  CONTENT_ENTRY, FUNC_CJSONUTILS_STRDUP, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_13, OPT_14, OPT_19, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_STRDUP -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_19
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_19
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 61 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_13
      | BLOCK_13 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 114: pointer_encoded_length
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_POINTER_ENCODED_LENGTH
Production Rules: 156
Non-terminals: 37
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 9.60/10.0
Basic Blocks: 8
Choice Points: 12
Loop Patterns: 18
Path Alternatives: 28
Branching Factor: 4.46
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_19, BLOCK_22, BLOCK_23, BLOCK_28, BLOCK_4, BLOCK_9, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_14, CONTENT_19, CONTENT_22, CONTENT_23, CONTENT_28, CONTENT_4, CONTENT_9
  CONTENT_ENTRY, FUNC_POINTER_ENCODED_LENGTH, INSTRUCTION_SEQ, INTERLEAVE_14, INTERLEAVE_4, INTERLEAVE_9, LOOP_14, LOOP_19
  LOOP_22, LOOP_23, LOOP_4, LOOP_9, OPT_14, OPT_19, OPT_22, OPT_23
  OPT_28, OPT_4, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_POINTER_ENCODED_LENGTH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
 | LOOP_14
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 BLOCK_22
 | LOOP_19
BLOCK_22 -> BRANCH
      | CONTENT_22 BLOCK_23
 | LOOP_22
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 BLOCK_4
 | LOOP_23
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28
BLOCK_4 -> INSTRUCTION_SEQ
      | CONTENT_4 CHOICE_POINT
 | LOOP_4
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 CHOICE_POINT
 | LOOP_9
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_4

Control Flow Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_28
 | BLOCK_9 BLOCK_28
      | ... and 6 more alternatives

Loops Rules:
LOOP_14 -> BLOCK_14
      | BLOCK_14 LOOP_14
LOOP_19 -> BLOCK_19
      | BLOCK_19 LOOP_19
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4
LOOP_9 -> BLOCK_9
      | BLOCK_9 LOOP_9

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 74 more alternatives
LOOP_14 -> BLOCK_14
      | BLOCK_14 LOOP_14
LOOP_19 -> BLOCK_19
      | BLOCK_19 LOOP_19
LOOP_22 -> BLOCK_22
      | BLOCK_22 LOOP_22
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_4 -> BLOCK_4
      | BLOCK_4 LOOP_4
LOOP_9 -> BLOCK_9
      | BLOCK_9 LOOP_9

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_9
      | BLOCK_28
 | BLOCK_9 BLOCK_28
      | ... and 6 more alternatives
OPT_14 -> BLOCK_14
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_4 -> BLOCK_4
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_4 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_14 -> BLOCK_19
      | BLOCK_19 BLOCK_22
 | BLOCK_22
      | ... and 1 more alternatives
INTERLEAVE_4 -> BLOCK_9
      | BLOCK_9 BLOCK_28
 | BLOCK_28
      | ... and 1 more alternatives
INTERLEAVE_9 -> BLOCK_19
      | BLOCK_19 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 115: encode_string_as_pointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_ENCODE_STRING_AS_POINTER
Production Rules: 238
Non-terminals: 49
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 11
Choice Points: 12
Loop Patterns: 27
Path Alternatives: 34
Branching Factor: 5.06
Estimated Depth: 4
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_17, BLOCK_24, BLOCK_30, BLOCK_37, BLOCK_43, BLOCK_44, BLOCK_45
  BLOCK_5, BLOCK_50, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_17, CONTENT_24, CONTENT_30
  CONTENT_37, CONTENT_43, CONTENT_44, CONTENT_45, CONTENT_5, CONTENT_50, CONTENT_ENTRY, FUNC_ENCODE_STRING_AS_POINTER
  INSTRUCTION_SEQ, INTERLEAVE_11, INTERLEAVE_24, INTERLEAVE_5, LOOP_11, LOOP_17, LOOP_24, LOOP_30
  LOOP_37, LOOP_43, LOOP_44, LOOP_45, LOOP_5, OPT_11, OPT_17, OPT_24
  OPT_30, OPT_37, OPT_43, OPT_44, OPT_45, OPT_5, OPT_50, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_ENCODE_STRING_AS_POINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 CHOICE_POINT
 | LOOP_11
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 BLOCK_44
 | LOOP_17
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
 | LOOP_24
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 BLOCK_43
 | LOOP_30
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_43
 | LOOP_37
BLOCK_43 -> BRANCH
      | CONTENT_43 BLOCK_44
 | LOOP_43
BLOCK_44 -> BRANCH
      | CONTENT_44 BLOCK_45
 | LOOP_44
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 BLOCK_5
 | LOOP_45
BLOCK_5 -> INSTRUCTION_SEQ
      | CONTENT_5 CHOICE_POINT
 | LOOP_5
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_5

Control Flow Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_50
 | BLOCK_11 BLOCK_50
      | ... and 6 more alternatives

Loops Rules:
LOOP_11 -> BLOCK_11
      | BLOCK_11 LOOP_11
LOOP_17 -> BLOCK_17
      | BLOCK_17 LOOP_17
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_5 -> BLOCK_5
      | BLOCK_5 LOOP_5

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 132 more alternatives
LOOP_11 -> BLOCK_11
      | BLOCK_11 LOOP_11
LOOP_17 -> BLOCK_17
      | BLOCK_17 LOOP_17
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_5 -> BLOCK_5
      | BLOCK_5 LOOP_5

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_11
      | BLOCK_50
 | BLOCK_11 BLOCK_50
      | ... and 6 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_5 -> BLOCK_5
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_5 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_11 -> BLOCK_17
      | BLOCK_17 BLOCK_24
 | BLOCK_24
      | ... and 1 more alternatives
INTERLEAVE_24 -> BLOCK_30
      | BLOCK_30 BLOCK_37
 | BLOCK_37
      | ... and 1 more alternatives
INTERLEAVE_5 -> BLOCK_11
      | BLOCK_11 BLOCK_50
 | BLOCK_50
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 116: cJSONUtils_GetPointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GETPOINTER
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_GETPOINTER, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GETPOINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 117: get_item_from_pointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_GET_ITEM_FROM_POINTER
Production Rules: 489
Non-terminals: 115
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 27
Choice Points: 40
Loop Patterns: 60
Path Alternatives: 94
Branching Factor: 4.33
Estimated Depth: 5
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_14, BLOCK_15, BLOCK_21, BLOCK_24, BLOCK_26, BLOCK_32, BLOCK_36
  BLOCK_37, BLOCK_41, BLOCK_45, BLOCK_49, BLOCK_52, BLOCK_61, BLOCK_63, BLOCK_67
  BLOCK_68, BLOCK_69, BLOCK_70, BLOCK_71, BLOCK_77, BLOCK_83, BLOCK_85, BLOCK_88
  BLOCK_89, BLOCK_91, BLOCK_ENTRY, CHOICE_POINT, CONTENT_13, CONTENT_14, CONTENT_15, CONTENT_21
  CONTENT_24, CONTENT_26, CONTENT_32, CONTENT_36, CONTENT_37, CONTENT_41, CONTENT_45, CONTENT_49
  CONTENT_52, CONTENT_61, CONTENT_63, CONTENT_67, CONTENT_68, CONTENT_69, CONTENT_70, CONTENT_71
  CONTENT_77, CONTENT_83, CONTENT_85, CONTENT_88, CONTENT_89, CONTENT_91, CONTENT_ENTRY, FUNC_GET_ITEM_FROM_POINTER
  INSTRUCTION_SEQ, INTERLEAVE_15, INTERLEAVE_24, INTERLEAVE_26, INTERLEAVE_32, INTERLEAVE_41, INTERLEAVE_49, INTERLEAVE_61
  INTERLEAVE_71, INTERLEAVE_83, INTERLEAVE_ENTRY, LOOP_15, LOOP_21, LOOP_24, LOOP_26, LOOP_32
  LOOP_37, LOOP_41, LOOP_45, LOOP_49, LOOP_52, LOOP_61, LOOP_63, LOOP_67
  LOOP_69, LOOP_70, LOOP_71, LOOP_77, LOOP_83, LOOP_85, LOOP_88, OPT_13
  OPT_14, OPT_15, OPT_21, OPT_24, OPT_26, OPT_32, OPT_36, OPT_37
  OPT_41, OPT_45, OPT_49, OPT_52, OPT_61, OPT_63, OPT_67, OPT_68
  OPT_69, OPT_70, OPT_71, OPT_77, OPT_83, OPT_85, OPT_88, OPT_89
  OPT_91, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN, SEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_GET_ITEM_FROM_POINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_91
BLOCK_14 -> BRANCH
      | CONTENT_14 BLOCK_15
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
 | LOOP_15
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 BLOCK_24
 | LOOP_21
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
 | LOOP_24
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
 | LOOP_26
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
 | LOOP_32
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_91
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 BLOCK_70
 | LOOP_37
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 CHOICE_POINT
 | LOOP_41
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 BLOCK_49
 | LOOP_45
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 CHOICE_POINT
 | LOOP_49
BLOCK_52 -> INSTRUCTION_SEQ
      | CONTENT_52 BLOCK_61
 | LOOP_52
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61 CHOICE_POINT
 | LOOP_61
BLOCK_63 -> INSTRUCTION_SEQ
      | CONTENT_63 BLOCK_49
 | LOOP_63
... and 12 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 27 more alternatives

Loops Rules:
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_52 -> BLOCK_52
      | BLOCK_52 LOOP_52
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_69 -> BLOCK_69
      | BLOCK_69 LOOP_69
LOOP_70 -> BLOCK_70
      | BLOCK_70 LOOP_70
... and 5 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 221 more alternatives
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_21 -> BLOCK_21
      | BLOCK_21 LOOP_21
LOOP_24 -> BLOCK_24
      | BLOCK_24 LOOP_24
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_41 -> BLOCK_41
      | BLOCK_41 LOOP_41
LOOP_45 -> BLOCK_45
      | BLOCK_45 LOOP_45
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_52 -> BLOCK_52
      | BLOCK_52 LOOP_52
LOOP_61 -> BLOCK_61
      | BLOCK_61 LOOP_61
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_69 -> BLOCK_69
      | BLOCK_69 LOOP_69
... and 6 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_14
 | BLOCK_13 BLOCK_14
      | ... and 27 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_52 -> BLOCK_52
      | EPSILON
OPT_61 -> BLOCK_61
      | EPSILON
... and 13 more paths & alternatives rules

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_52 -> INSTRUCTION_SEQ
     CONTENT_61 -> INSTRUCTION_SEQ
     CONTENT_63 -> INSTRUCTION_SEQ
     ... and 21 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 118: decode_array_index_from_pointer
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_DECODE_ARRAY_INDEX_FROM_POINTER
Production Rules: 328
Non-terminals: 61
Terminals: 19

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 15
Choice Points: 28
Loop Patterns: 15
Path Alternatives: 58
Branching Factor: 5.56
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, MUL, PHI, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_19, BLOCK_25, BLOCK_26, BLOCK_27, BLOCK_34, BLOCK_40, BLOCK_42
  BLOCK_53, BLOCK_56, BLOCK_63, BLOCK_70, BLOCK_71, BLOCK_74, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_13, CONTENT_19, CONTENT_25, CONTENT_26, CONTENT_27, CONTENT_34, CONTENT_40, CONTENT_42
  CONTENT_53, CONTENT_56, CONTENT_63, CONTENT_70, CONTENT_71, CONTENT_74, CONTENT_ENTRY, FUNC_DECODE_ARRAY_INDEX_FROM_POINTER
  INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_19, INTERLEAVE_27, INTERLEAVE_40, INTERLEAVE_56, INTERLEAVE_63, INTERLEAVE_ENTRY
  LOOP_27, LOOP_34, LOOP_40, LOOP_42, LOOP_53, OPT_13, OPT_19, OPT_25
  OPT_26, OPT_27, OPT_34, OPT_40, OPT_42, OPT_53, OPT_56, OPT_63
  OPT_70, OPT_71, OPT_74, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, MUL, OP_DEFINE, OR, PHI, RETURN, SEXT, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_DECODE_ARRAY_INDEX_FROM_POINTER -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_74
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 BLOCK_27
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
 | LOOP_27
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_40
 | LOOP_34
BLOCK_40 -> INSTRUCTION_SEQ
      | CONTENT_40 CHOICE_POINT
 | LOOP_40
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_53
 | LOOP_42
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53 BLOCK_27
 | LOOP_53
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
BLOCK_63 -> INSTRUCTION_SEQ
      | CONTENT_63 CHOICE_POINT
BLOCK_70 -> INSTRUCTION_SEQ
      | CONTENT_70 BLOCK_74
BLOCK_71 -> INSTRUCTION_SEQ
      | CONTENT_71 BLOCK_74
BLOCK_74 -> INSTRUCTION_SEQ
      | CONTENT_74
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_26
 | BLOCK_13 BLOCK_26
      | ... and 18 more alternatives

Loops Rules:
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_40 -> BLOCK_40
      | BLOCK_40 LOOP_40
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 186 more alternatives
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_40 -> BLOCK_40
      | BLOCK_40 LOOP_40
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_26
 | BLOCK_13 BLOCK_26
      | ... and 18 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_63 -> BLOCK_63
      | EPSILON
OPT_70 -> BLOCK_70
      | EPSILON
OPT_71 -> BLOCK_71
      | EPSILON
OPT_74 -> BLOCK_74
      | EPSILON
... and 1 more paths & alternatives rules

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_63 -> INSTRUCTION_SEQ
     CONTENT_70 -> INSTRUCTION_SEQ
     CONTENT_71 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_19
      | BLOCK_19 BLOCK_26
 | BLOCK_26
      | ... and 1 more alternatives
... and 6 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 119: compare_pointers
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_COMPARE_POINTERS
Production Rules: 592
Non-terminals: 128
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 30
Choice Points: 64
Loop Patterns: 54
Path Alternatives: 124
Branching Factor: 4.70
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_101, BLOCK_106, BLOCK_115, BLOCK_116, BLOCK_117, BLOCK_13, BLOCK_14
  BLOCK_15, BLOCK_20, BLOCK_25, BLOCK_30, BLOCK_32, BLOCK_37, BLOCK_43, BLOCK_48
  BLOCK_54, BLOCK_59, BLOCK_60, BLOCK_63, BLOCK_64, BLOCK_67, BLOCK_77, BLOCK_80
  BLOCK_88, BLOCK_89, BLOCK_90, BLOCK_91, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10
  CONTENT_101, CONTENT_106, CONTENT_115, CONTENT_116, CONTENT_117, CONTENT_13, CONTENT_14, CONTENT_15
  CONTENT_20, CONTENT_25, CONTENT_30, CONTENT_32, CONTENT_37, CONTENT_43, CONTENT_48, CONTENT_54
  CONTENT_59, CONTENT_60, CONTENT_63, CONTENT_64, CONTENT_67, CONTENT_77, CONTENT_80, CONTENT_88
  CONTENT_89, CONTENT_90, CONTENT_91, CONTENT_96, CONTENT_ENTRY, FUNC_COMPARE_POINTERS, INSTRUCTION_SEQ, INTERLEAVE_10
  INTERLEAVE_106, INTERLEAVE_15, INTERLEAVE_20, INTERLEAVE_30, INTERLEAVE_32, INTERLEAVE_37, INTERLEAVE_43, INTERLEAVE_48
  INTERLEAVE_54, INTERLEAVE_64, INTERLEAVE_67, INTERLEAVE_77, INTERLEAVE_80, INTERLEAVE_96, INTERLEAVE_ENTRY, LOOP_15
  LOOP_20, LOOP_25, LOOP_30, LOOP_32, LOOP_37, LOOP_43, LOOP_48, LOOP_54
  LOOP_60, LOOP_63, LOOP_64, LOOP_67, LOOP_77, LOOP_80, LOOP_89, LOOP_90
  LOOP_91, OPT_10, OPT_101, OPT_106, OPT_115, OPT_116, OPT_117, OPT_13
  OPT_14, OPT_15, OPT_20, OPT_25, OPT_30, OPT_32, OPT_37, OPT_43
  OPT_48, OPT_54, OPT_59, OPT_60, OPT_63, OPT_64, OPT_67, OPT_77
  OPT_80, OPT_88, OPT_89, OPT_90, OPT_91, OPT_96, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_COMPARE_POINTERS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 BLOCK_106
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 CHOICE_POINT
BLOCK_115 -> INSTRUCTION_SEQ
      | CONTENT_115 BLOCK_117
BLOCK_116 -> INSTRUCTION_SEQ
      | CONTENT_116 BLOCK_117
BLOCK_117 -> INSTRUCTION_SEQ
      | CONTENT_117
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_117
BLOCK_14 -> BRANCH
      | CONTENT_14 BLOCK_15
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
 | LOOP_15
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
 | LOOP_20
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_30
 | LOOP_25
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
 | LOOP_30
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
 | LOOP_32
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
 | LOOP_37
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 CHOICE_POINT
 | LOOP_43
... and 15 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 45 more alternatives

Loops Rules:
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_60 -> BLOCK_60
      | BLOCK_60 LOOP_60
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_64 -> BLOCK_64
      | BLOCK_64 LOOP_64
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_77 -> BLOCK_77
      | BLOCK_77 LOOP_77
LOOP_80 -> BLOCK_80
      | BLOCK_80 LOOP_80
... and 3 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 273 more alternatives
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_30 -> BLOCK_30
      | BLOCK_30 LOOP_30
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_48 -> BLOCK_48
      | BLOCK_48 LOOP_48
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_60 -> BLOCK_60
      | BLOCK_60 LOOP_60
LOOP_63 -> BLOCK_63
      | BLOCK_63 LOOP_63
LOOP_64 -> BLOCK_64
      | BLOCK_64 LOOP_64
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_77 -> BLOCK_77
      | BLOCK_77 LOOP_77
... and 4 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 45 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_101 -> BLOCK_101
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_115 -> BLOCK_115
      | EPSILON
OPT_116 -> BLOCK_116
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
... and 16 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_115 -> INSTRUCTION_SEQ
     CONTENT_116 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     ... and 30 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 120: cJSONUtils_GetPointerCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GETPOINTERCASESENSITIVE
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_GETPOINTERCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GETPOINTERCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 121: cJSONUtils_ApplyPatches
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_APPLYPATCHES
Production Rules: 196
Non-terminals: 44
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 11
Choice Points: 16
Loop Patterns: 9
Path Alternatives: 38
Branching Factor: 4.67
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_15, BLOCK_19, BLOCK_20, BLOCK_23, BLOCK_29, BLOCK_31
  BLOCK_35, BLOCK_36, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_12, CONTENT_15, CONTENT_19
  CONTENT_20, CONTENT_23, CONTENT_29, CONTENT_31, CONTENT_35, CONTENT_36, CONTENT_ENTRY, FUNC_CJSONUTILS_APPLYPATCHES
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_20, INTERLEAVE_23, INTERLEAVE_ENTRY, LOOP_20, LOOP_23, LOOP_31
  OPT_11, OPT_12, OPT_15, OPT_19, OPT_20, OPT_23, OPT_29, OPT_31
  OPT_35, OPT_36, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_APPLYPATCHES -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_36
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_19
BLOCK_19 -> BRANCH
      | CONTENT_19 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
 | LOOP_20
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
 | LOOP_23
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_36
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31 BLOCK_20
 | LOOP_31
BLOCK_35 -> INSTRUCTION_SEQ
      | CONTENT_35 BLOCK_36
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_11
 | BLOCK_12 BLOCK_11
      | ... and 9 more alternatives

Loops Rules:
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 101 more alternatives
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_11
 | BLOCK_12 BLOCK_11
      | ... and 9 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_15
      | BLOCK_15 BLOCK_19
 | BLOCK_19
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_23
      | BLOCK_23 BLOCK_35
 | BLOCK_35
      | ... and 1 more alternatives
INTERLEAVE_23 -> BLOCK_29
      | BLOCK_29 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_12
      | BLOCK_12 BLOCK_11
 | BLOCK_11
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 122: apply_patch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_APPLY_PATCH
Production Rules: 1349
Non-terminals: 271
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 77
Choice Points: 144
Loop Patterns: 0
Path Alternatives: 298
Branching Factor: 5.01
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_104, BLOCK_113, BLOCK_114, BLOCK_118, BLOCK_119, BLOCK_120, BLOCK_123
  BLOCK_126, BLOCK_132, BLOCK_133, BLOCK_136, BLOCK_143, BLOCK_146, BLOCK_153, BLOCK_156
  BLOCK_157, BLOCK_160, BLOCK_163, BLOCK_166, BLOCK_167, BLOCK_168, BLOCK_174, BLOCK_175
  BLOCK_180, BLOCK_181, BLOCK_182, BLOCK_189, BLOCK_192, BLOCK_195, BLOCK_200, BLOCK_208
  BLOCK_211, BLOCK_212, BLOCK_216, BLOCK_220, BLOCK_224, BLOCK_228, BLOCK_229, BLOCK_23
  BLOCK_235, BLOCK_236, BLOCK_237, BLOCK_238, BLOCK_24, BLOCK_242, BLOCK_245, BLOCK_248
  BLOCK_251, BLOCK_256, BLOCK_257, BLOCK_258, BLOCK_259, BLOCK_260, BLOCK_263, BLOCK_265
  BLOCK_268, BLOCK_270, BLOCK_30, BLOCK_31, BLOCK_34, BLOCK_49, BLOCK_50, BLOCK_58
  BLOCK_61, BLOCK_63, BLOCK_66, BLOCK_69, BLOCK_75, BLOCK_76, BLOCK_81, BLOCK_82
  BLOCK_90, BLOCK_96, BLOCK_97, BLOCK_98, BLOCK_ENTRY, CHOICE_POINT, CONTENT_101, CONTENT_104
  CONTENT_113, CONTENT_114, CONTENT_118, CONTENT_119, CONTENT_120, CONTENT_123, CONTENT_126, CONTENT_132
  CONTENT_133, CONTENT_136, CONTENT_143, CONTENT_146, CONTENT_153, CONTENT_156, CONTENT_157, CONTENT_160
  CONTENT_163, CONTENT_166, CONTENT_167, CONTENT_168, CONTENT_174, CONTENT_175, CONTENT_180, CONTENT_181
  CONTENT_182, CONTENT_189, CONTENT_192, CONTENT_195, CONTENT_200, CONTENT_208, CONTENT_211, CONTENT_212
  CONTENT_216, CONTENT_220, CONTENT_224, CONTENT_228, CONTENT_229, CONTENT_23, CONTENT_235, CONTENT_236
  CONTENT_237, CONTENT_238, CONTENT_24, CONTENT_242, CONTENT_245, CONTENT_248, CONTENT_251, CONTENT_256
  CONTENT_257, CONTENT_258, CONTENT_259, CONTENT_260, CONTENT_263, CONTENT_265, CONTENT_268, CONTENT_270
  CONTENT_30, CONTENT_31, CONTENT_34, CONTENT_49, CONTENT_50, CONTENT_58, CONTENT_61, CONTENT_63
  CONTENT_66, CONTENT_69, CONTENT_75, CONTENT_76, CONTENT_81, CONTENT_82, CONTENT_90, CONTENT_96
  CONTENT_97, CONTENT_98, CONTENT_ENTRY, FUNC_APPLY_PATCH, INSTRUCTION_SEQ, INTERLEAVE_101, INTERLEAVE_104, INTERLEAVE_114
  INTERLEAVE_120, INTERLEAVE_123, INTERLEAVE_126, INTERLEAVE_133, INTERLEAVE_143, INTERLEAVE_153, INTERLEAVE_157, INTERLEAVE_163
  INTERLEAVE_168, INTERLEAVE_175, INTERLEAVE_182, INTERLEAVE_192, INTERLEAVE_200, INTERLEAVE_208, INTERLEAVE_212, INTERLEAVE_216
  INTERLEAVE_224, INTERLEAVE_229, INTERLEAVE_238, INTERLEAVE_24, INTERLEAVE_242, INTERLEAVE_260, INTERLEAVE_265, INTERLEAVE_31
  INTERLEAVE_50, INTERLEAVE_58, INTERLEAVE_63, INTERLEAVE_66, INTERLEAVE_69, INTERLEAVE_76, INTERLEAVE_82, INTERLEAVE_98
  INTERLEAVE_ENTRY, OPT_101, OPT_104, OPT_113, OPT_114, OPT_118, OPT_119, OPT_120
  OPT_123, OPT_126, OPT_132, OPT_133, OPT_136, OPT_143, OPT_146, OPT_153
  OPT_156, OPT_157, OPT_160, OPT_163, OPT_166, OPT_167, OPT_168, OPT_174
  OPT_175, OPT_180, OPT_181, OPT_182, OPT_189, OPT_192, OPT_195, OPT_200
  OPT_208, OPT_211, OPT_212, OPT_216, OPT_220, OPT_224, OPT_228, OPT_229
  OPT_23, OPT_235, OPT_236, OPT_237, OPT_238, OPT_24, OPT_242, OPT_245
  OPT_248, OPT_251, OPT_256, OPT_257, OPT_258, OPT_259, OPT_260, OPT_263
  OPT_265, OPT_268, OPT_270, OPT_30, OPT_31, OPT_34, OPT_49, OPT_50
  OPT_58, OPT_61, OPT_63, OPT_66, OPT_69, OPT_75, OPT_76, OPT_81
  OPT_82, OPT_90, OPT_96, OPT_97, OPT_98, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN, SEXT, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_APPLY_PATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 CHOICE_POINT
BLOCK_104 -> INSTRUCTION_SEQ
      | CONTENT_104 CHOICE_POINT
BLOCK_113 -> INSTRUCTION_SEQ
      | CONTENT_113 BLOCK_260
BLOCK_114 -> INSTRUCTION_SEQ
      | CONTENT_114 CHOICE_POINT
BLOCK_118 -> INSTRUCTION_SEQ
      | CONTENT_118 BLOCK_260
BLOCK_119 -> BRANCH
      | CONTENT_119 BLOCK_120
BLOCK_120 -> INSTRUCTION_SEQ
      | CONTENT_120 CHOICE_POINT
BLOCK_123 -> INSTRUCTION_SEQ
      | CONTENT_123 CHOICE_POINT
BLOCK_126 -> INSTRUCTION_SEQ
      | CONTENT_126 CHOICE_POINT
BLOCK_132 -> INSTRUCTION_SEQ
      | CONTENT_132 BLOCK_260
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 CHOICE_POINT
BLOCK_136 -> INSTRUCTION_SEQ
      | CONTENT_136 BLOCK_143
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 CHOICE_POINT
BLOCK_146 -> INSTRUCTION_SEQ
      | CONTENT_146 BLOCK_153
BLOCK_153 -> INSTRUCTION_SEQ
      | CONTENT_153 CHOICE_POINT
... and 62 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_24
      | BLOCK_23
 | BLOCK_24 BLOCK_23
      | ... and 105 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 709 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_24
      | BLOCK_23
 | BLOCK_24 BLOCK_23
      | ... and 105 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_104 -> BLOCK_104
      | EPSILON
OPT_113 -> BLOCK_113
      | EPSILON
OPT_114 -> BLOCK_114
      | EPSILON
OPT_118 -> BLOCK_118
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_120 -> BLOCK_120
      | EPSILON
OPT_123 -> BLOCK_123
      | EPSILON
OPT_126 -> BLOCK_126
      | EPSILON
OPT_132 -> BLOCK_132
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_136 -> BLOCK_136
      | EPSILON
OPT_143 -> BLOCK_143
      | EPSILON
OPT_146 -> BLOCK_146
      | EPSILON
... and 63 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_104 -> INSTRUCTION_SEQ
     CONTENT_113 -> INSTRUCTION_SEQ
     CONTENT_114 -> INSTRUCTION_SEQ
     CONTENT_118 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_120 -> INSTRUCTION_SEQ
     CONTENT_123 -> INSTRUCTION_SEQ
     CONTENT_126 -> INSTRUCTION_SEQ
     CONTENT_132 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_136 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_146 -> INSTRUCTION_SEQ
     CONTENT_153 -> INSTRUCTION_SEQ
     ... and 97 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 123: decode_patch_operation
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_DECODE_PATCH_OPERATION
Production Rules: 285
Non-terminals: 59
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 16
Choice Points: 28
Loop Patterns: 0
Path Alternatives: 60
Branching Factor: 5.00
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_14, BLOCK_20, BLOCK_21, BLOCK_27, BLOCK_28, BLOCK_34, BLOCK_35
  BLOCK_41, BLOCK_42, BLOCK_48, BLOCK_49, BLOCK_55, BLOCK_56, BLOCK_57, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_13, CONTENT_14, CONTENT_20, CONTENT_21, CONTENT_27, CONTENT_28, CONTENT_34
  CONTENT_35, CONTENT_41, CONTENT_42, CONTENT_48, CONTENT_49, CONTENT_55, CONTENT_56, CONTENT_57
  CONTENT_ENTRY, FUNC_DECODE_PATCH_OPERATION, INSTRUCTION_SEQ, INTERLEAVE_14, INTERLEAVE_21, INTERLEAVE_28, INTERLEAVE_35, INTERLEAVE_42
  INTERLEAVE_49, INTERLEAVE_ENTRY, OPT_13, OPT_14, OPT_20, OPT_21, OPT_27, OPT_28
  OPT_34, OPT_35, OPT_41, OPT_42, OPT_48, OPT_49, OPT_55, OPT_56
  OPT_57, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_DECODE_PATCH_OPERATION -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_57
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_57
BLOCK_21 -> INSTRUCTION_SEQ
      | CONTENT_21 CHOICE_POINT
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 BLOCK_57
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_57
BLOCK_35 -> INSTRUCTION_SEQ
      | CONTENT_35 CHOICE_POINT
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_57
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 CHOICE_POINT
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_57
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 CHOICE_POINT
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 BLOCK_57
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 BLOCK_57
BLOCK_57 -> INSTRUCTION_SEQ
      | CONTENT_57
... and 1 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_13
 | BLOCK_14 BLOCK_13
      | ... and 18 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 153 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_13
 | BLOCK_14 BLOCK_13
      | ... and 18 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_21 -> BLOCK_21
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
... and 2 more paths & alternatives rules

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_21 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     ... and 7 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 124: compare_json
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_COMPARE_JSON
Production Rules: 776
Non-terminals: 159
Terminals: 17

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 41
Choice Points: 68
Loop Patterns: 39
Path Alternatives: 150
Branching Factor: 5.04
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_111, BLOCK_114, BLOCK_117, BLOCK_119, BLOCK_12, BLOCK_129, BLOCK_130
  BLOCK_137, BLOCK_138, BLOCK_139, BLOCK_146, BLOCK_149, BLOCK_15, BLOCK_152, BLOCK_153
  BLOCK_154, BLOCK_155, BLOCK_156, BLOCK_25, BLOCK_26, BLOCK_31, BLOCK_39, BLOCK_48
  BLOCK_49, BLOCK_50, BLOCK_59, BLOCK_60, BLOCK_61, BLOCK_68, BLOCK_71, BLOCK_74
  BLOCK_76, BLOCK_83, BLOCK_84, BLOCK_85, BLOCK_92, BLOCK_95, BLOCK_98, BLOCK_99
  BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_111, CONTENT_114, CONTENT_117, CONTENT_119, CONTENT_12
  CONTENT_129, CONTENT_130, CONTENT_137, CONTENT_138, CONTENT_139, CONTENT_146, CONTENT_149, CONTENT_15
  CONTENT_152, CONTENT_153, CONTENT_154, CONTENT_155, CONTENT_156, CONTENT_25, CONTENT_26, CONTENT_31
  CONTENT_39, CONTENT_48, CONTENT_49, CONTENT_50, CONTENT_59, CONTENT_60, CONTENT_61, CONTENT_68
  CONTENT_71, CONTENT_74, CONTENT_76, CONTENT_83, CONTENT_84, CONTENT_85, CONTENT_92, CONTENT_95
  CONTENT_98, CONTENT_99, CONTENT_ENTRY, FUNC_COMPARE_JSON, INSTRUCTION_SEQ, INTERLEAVE_111, INTERLEAVE_117, INTERLEAVE_119
  INTERLEAVE_12, INTERLEAVE_130, INTERLEAVE_146, INTERLEAVE_149, INTERLEAVE_15, INTERLEAVE_31, INTERLEAVE_39, INTERLEAVE_50
  INTERLEAVE_68, INTERLEAVE_74, INTERLEAVE_76, INTERLEAVE_92, INTERLEAVE_95, INTERLEAVE_ENTRY, LOOP_111, LOOP_114
  LOOP_117, LOOP_119, LOOP_130, LOOP_138, LOOP_139, LOOP_68, LOOP_71, LOOP_74
  LOOP_76, LOOP_84, LOOP_85, OPT_100, OPT_111, OPT_114, OPT_117, OPT_119
  OPT_12, OPT_129, OPT_130, OPT_137, OPT_138, OPT_139, OPT_146, OPT_149
  OPT_15, OPT_152, OPT_153, OPT_154, OPT_155, OPT_156, OPT_25, OPT_26
  OPT_31, OPT_39, OPT_48, OPT_49, OPT_50, OPT_59, OPT_60, OPT_61
  OPT_68, OPT_71, OPT_74, OPT_76, OPT_83, OPT_84, OPT_85, OPT_92
  OPT_95, OPT_98, OPT_99, OPT_ENTRY, OP_I32, OP_], OP_}

TERMINALS
----------------------------------------
  ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SWITCH

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_COMPARE_JSON -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 BLOCK_111
BLOCK_111 -> INSTRUCTION_SEQ
      | CONTENT_111 CHOICE_POINT
 | LOOP_111
BLOCK_114 -> INSTRUCTION_SEQ
      | CONTENT_114 BLOCK_117
 | LOOP_114
BLOCK_117 -> INSTRUCTION_SEQ
      | CONTENT_117 CHOICE_POINT
 | LOOP_117
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 CHOICE_POINT
 | LOOP_119
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_129 -> INSTRUCTION_SEQ
      | CONTENT_129 BLOCK_156
BLOCK_130 -> INSTRUCTION_SEQ
      | CONTENT_130 CHOICE_POINT
 | LOOP_130
BLOCK_137 -> INSTRUCTION_SEQ
      | CONTENT_137 BLOCK_156
BLOCK_138 -> BRANCH
      | CONTENT_138 BLOCK_139
 | LOOP_138
BLOCK_139 -> INSTRUCTION_SEQ
      | CONTENT_139 BLOCK_111
 | LOOP_139
BLOCK_146 -> INSTRUCTION_SEQ
      | CONTENT_146 CHOICE_POINT
BLOCK_149 -> INSTRUCTION_SEQ
      | CONTENT_149 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 CHOICE_POINT
BLOCK_152 -> INSTRUCTION_SEQ
      | CONTENT_152 BLOCK_156
... and 26 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_25
      | BLOCK_12
 | BLOCK_25 BLOCK_12
      | ... and 48 more alternatives

Loops Rules:
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_114 -> BLOCK_114
      | BLOCK_114 LOOP_114
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_130 -> BLOCK_130
      | BLOCK_130 LOOP_130
LOOP_138 -> BLOCK_138
      | BLOCK_138 LOOP_138
LOOP_139 -> BLOCK_139
      | BLOCK_139 LOOP_139
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
LOOP_71 -> BLOCK_71
      | BLOCK_71 LOOP_71
LOOP_74 -> BLOCK_74
      | BLOCK_74 LOOP_74
LOOP_76 -> BLOCK_76
      | BLOCK_76 LOOP_76
LOOP_84 -> BLOCK_84
      | BLOCK_84 LOOP_84
LOOP_85 -> BLOCK_85
      | BLOCK_85 LOOP_85

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 411 more alternatives
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_114 -> BLOCK_114
      | BLOCK_114 LOOP_114
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_119 -> BLOCK_119
      | BLOCK_119 LOOP_119
LOOP_130 -> BLOCK_130
      | BLOCK_130 LOOP_130
LOOP_138 -> BLOCK_138
      | BLOCK_138 LOOP_138
LOOP_139 -> BLOCK_139
      | BLOCK_139 LOOP_139
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
LOOP_71 -> BLOCK_71
      | BLOCK_71 LOOP_71
LOOP_74 -> BLOCK_74
      | BLOCK_74 LOOP_74
LOOP_76 -> BLOCK_76
      | BLOCK_76 LOOP_76
LOOP_84 -> BLOCK_84
      | BLOCK_84 LOOP_84
LOOP_85 -> BLOCK_85
      | BLOCK_85 LOOP_85

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_25
      | BLOCK_12
 | BLOCK_25 BLOCK_12
      | ... and 48 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_111 -> BLOCK_111
      | EPSILON
OPT_114 -> BLOCK_114
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_129 -> BLOCK_129
      | EPSILON
OPT_130 -> BLOCK_130
      | EPSILON
OPT_137 -> BLOCK_137
      | EPSILON
OPT_138 -> BLOCK_138
      | EPSILON
OPT_139 -> BLOCK_139
      | EPSILON
OPT_146 -> BLOCK_146
      | EPSILON
OPT_149 -> BLOCK_149
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
... and 27 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_111 -> INSTRUCTION_SEQ
     CONTENT_114 -> INSTRUCTION_SEQ
     CONTENT_117 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_129 -> INSTRUCTION_SEQ
     CONTENT_130 -> INSTRUCTION_SEQ
     CONTENT_137 -> INSTRUCTION_SEQ
     CONTENT_138 -> INSTRUCTION_SEQ
     CONTENT_139 -> INSTRUCTION_SEQ
     CONTENT_146 -> INSTRUCTION_SEQ
     CONTENT_149 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_152 -> INSTRUCTION_SEQ
     ... and 41 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 125: detach_path
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_DETACH_PATH
Production Rules: 278
Non-terminals: 58
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 16
Choice Points: 24
Loop Patterns: 0
Path Alternatives: 56
Branching Factor: 4.96
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_17, BLOCK_22, BLOCK_23, BLOCK_36, BLOCK_40, BLOCK_41, BLOCK_45
  BLOCK_49, BLOCK_53, BLOCK_54, BLOCK_55, BLOCK_56, BLOCK_59, BLOCK_61, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_16, CONTENT_17, CONTENT_22, CONTENT_23, CONTENT_36, CONTENT_40, CONTENT_41
  CONTENT_45, CONTENT_49, CONTENT_53, CONTENT_54, CONTENT_55, CONTENT_56, CONTENT_59, CONTENT_61
  CONTENT_ENTRY, FUNC_DETACH_PATH, INSTRUCTION_SEQ, INTERLEAVE_17, INTERLEAVE_23, INTERLEAVE_36, INTERLEAVE_45, INTERLEAVE_56
  INTERLEAVE_ENTRY, OPT_16, OPT_17, OPT_22, OPT_23, OPT_36, OPT_40, OPT_41
  OPT_45, OPT_49, OPT_53, OPT_54, OPT_55, OPT_56, OPT_59, OPT_61
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_DETACH_PATH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> BRANCH
      | CONTENT_16 BLOCK_56
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_22 -> BRANCH
      | CONTENT_22 BLOCK_56
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 CHOICE_POINT
BLOCK_40 -> BRANCH
      | CONTENT_40 BLOCK_56
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_55
BLOCK_45 -> INSTRUCTION_SEQ
      | CONTENT_45 CHOICE_POINT
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 BLOCK_54
BLOCK_53 -> BRANCH
      | CONTENT_53 BLOCK_56
BLOCK_54 -> BRANCH
      | CONTENT_54 BLOCK_55
BLOCK_55 -> BRANCH
      | CONTENT_55 BLOCK_56
BLOCK_56 -> INSTRUCTION_SEQ
      | CONTENT_56 CHOICE_POINT
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59 BLOCK_61
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61
... and 1 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_17
 | BLOCK_16 BLOCK_17
      | ... and 15 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 153 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_16
      | BLOCK_17
 | BLOCK_16 BLOCK_17
      | ... and 15 more alternatives
OPT_16 -> BLOCK_16
      | EPSILON
OPT_17 -> BLOCK_17
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_40 -> BLOCK_40
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_45 -> BLOCK_45
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_56 -> BLOCK_56
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
... and 2 more paths & alternatives rules

Other Rules:
CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_40 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_45 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_56 -> INSTRUCTION_SEQ
     CONTENT_59 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     ... and 6 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 126: decode_pointer_inplace
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_DECODE_POINTER_INPLACE
Production Rules: 268
Non-terminals: 67
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 16
Choice Points: 20
Loop Patterns: 30
Path Alternatives: 52
Branching Factor: 4.12
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_13, BLOCK_19, BLOCK_25, BLOCK_28, BLOCK_34, BLOCK_37, BLOCK_38, BLOCK_39
  BLOCK_42, BLOCK_43, BLOCK_48, BLOCK_51, BLOCK_7, BLOCK_8, BLOCK_9, BLOCK_ENTRY
  CHOICE_POINT, CONTENT_13, CONTENT_19, CONTENT_25, CONTENT_28, CONTENT_34, CONTENT_37, CONTENT_38
  CONTENT_39, CONTENT_42, CONTENT_43, CONTENT_48, CONTENT_51, CONTENT_7, CONTENT_8, CONTENT_9
  CONTENT_ENTRY, FUNC_DECODE_POINTER_INPLACE, INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_19, INTERLEAVE_28, INTERLEAVE_9, INTERLEAVE_ENTRY
  LOOP_13, LOOP_19, LOOP_25, LOOP_28, LOOP_34, LOOP_38, LOOP_39, LOOP_42
  LOOP_43, LOOP_9, OPT_13, OPT_19, OPT_25, OPT_28, OPT_34, OPT_37
  OPT_38, OPT_39, OPT_42, OPT_43, OPT_48, OPT_51, OPT_7, OPT_8
  OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_DECODE_POINTER_INPLACE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
 | LOOP_13
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
 | LOOP_19
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_39
 | LOOP_25
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
 | LOOP_28
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_38
 | LOOP_34
BLOCK_37 -> BRANCH
      | CONTENT_37 BLOCK_51
BLOCK_38 -> BRANCH
      | CONTENT_38 BLOCK_39
 | LOOP_38
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_42
 | LOOP_39
BLOCK_42 -> BRANCH
      | CONTENT_42 BLOCK_43
 | LOOP_42
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 BLOCK_9
 | LOOP_43
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_51
BLOCK_51 -> INSTRUCTION_SEQ
      | CONTENT_51
BLOCK_7 -> BRANCH
      | CONTENT_7 BLOCK_51
BLOCK_8 -> BRANCH
      | CONTENT_8 BLOCK_9
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 CHOICE_POINT
 | LOOP_9
... and 1 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8
      | ... and 12 more alternatives

Loops Rules:
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_19 -> BLOCK_19
      | BLOCK_19 LOOP_19
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_9 -> BLOCK_9
      | BLOCK_9 LOOP_9

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 120 more alternatives
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_19 -> BLOCK_19
      | BLOCK_19 LOOP_19
LOOP_25 -> BLOCK_25
      | BLOCK_25 LOOP_25
LOOP_28 -> BLOCK_28
      | BLOCK_28 LOOP_28
LOOP_34 -> BLOCK_34
      | BLOCK_34 LOOP_34
LOOP_38 -> BLOCK_38
      | BLOCK_38 LOOP_38
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_42 -> BLOCK_42
      | BLOCK_42 LOOP_42
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_9 -> BLOCK_9
      | BLOCK_9 LOOP_9

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8
      | ... and 12 more alternatives
OPT_13 -> BLOCK_13
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_38 -> BLOCK_38
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_51 -> BLOCK_51
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
... and 2 more paths & alternatives rules

Other Rules:
CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_38 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     ... and 5 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 127: insert_item_in_array
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_INSERT_ITEM_IN_ARRAY
Production Rules: 291
Non-terminals: 55
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 14
Choice Points: 20
Loop Patterns: 12
Path Alternatives: 48
Branching Factor: 5.49
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_15, BLOCK_18, BLOCK_20, BLOCK_26, BLOCK_29, BLOCK_30, BLOCK_33
  BLOCK_37, BLOCK_54, BLOCK_58, BLOCK_64, BLOCK_65, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12
  CONTENT_15, CONTENT_18, CONTENT_20, CONTENT_26, CONTENT_29, CONTENT_30, CONTENT_33, CONTENT_37
  CONTENT_54, CONTENT_58, CONTENT_64, CONTENT_65, CONTENT_ENTRY, FUNC_INSERT_ITEM_IN_ARRAY, INSTRUCTION_SEQ, INTERLEAVE_12
  INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_30, INTERLEAVE_37, LOOP_12, LOOP_15, LOOP_18, LOOP_20
  OPT_12, OPT_15, OPT_18, OPT_20, OPT_26, OPT_29, OPT_30, OPT_33
  OPT_37, OPT_54, OPT_58, OPT_64, OPT_65, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_INSERT_ITEM_IN_ARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
 | LOOP_12
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_18
 | LOOP_15
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
 | LOOP_18
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 BLOCK_12
 | LOOP_20
BLOCK_26 -> INSTRUCTION_SEQ
      | CONTENT_26 CHOICE_POINT
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_65
BLOCK_30 -> INSTRUCTION_SEQ
      | CONTENT_30 CHOICE_POINT
BLOCK_33 -> INSTRUCTION_SEQ
      | CONTENT_33 BLOCK_65
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_54 -> INSTRUCTION_SEQ
      | CONTENT_54 BLOCK_64
BLOCK_58 -> INSTRUCTION_SEQ
      | CONTENT_58 BLOCK_64
BLOCK_64 -> INSTRUCTION_SEQ
      | CONTENT_64 BLOCK_65
BLOCK_65 -> INSTRUCTION_SEQ
      | CONTENT_65
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY BLOCK_12

Control Flow Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_18
 | BLOCK_15 BLOCK_18
      | ... and 12 more alternatives

Loops Rules:
LOOP_12 -> BLOCK_12
      | BLOCK_12 LOOP_12
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 171 more alternatives
LOOP_12 -> BLOCK_12
      | BLOCK_12 LOOP_12
LOOP_15 -> BLOCK_15
      | BLOCK_15 LOOP_15
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_15
      | BLOCK_18
 | BLOCK_15 BLOCK_18
      | ... and 12 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_30 -> BLOCK_30
      | EPSILON
OPT_33 -> BLOCK_33
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_54 -> BLOCK_54
      | EPSILON
OPT_58 -> BLOCK_58
      | EPSILON
OPT_64 -> BLOCK_64
      | EPSILON
OPT_65 -> BLOCK_65
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_30 -> INSTRUCTION_SEQ
     CONTENT_33 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_54 -> INSTRUCTION_SEQ
     CONTENT_58 -> INSTRUCTION_SEQ
     CONTENT_64 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_15
      | BLOCK_15 BLOCK_18
 | BLOCK_18
      | ... and 1 more alternatives
INTERLEAVE_18 -> BLOCK_20
      | BLOCK_20 BLOCK_26
 | BLOCK_26
      | ... and 1 more alternatives
... and 3 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 128: detach_item_from_array
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_DETACH_ITEM_FROM_ARRAY
Production Rules: 370
Non-terminals: 69
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 18
Choice Points: 28
Loop Patterns: 12
Path Alternatives: 64
Branching Factor: 5.52
Estimated Depth: 4
Instruction Types: ADD, ALLOCA, BRANCH, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_13, BLOCK_16, BLOCK_18, BLOCK_24, BLOCK_27, BLOCK_28, BLOCK_34
  BLOCK_42, BLOCK_47, BLOCK_55, BLOCK_61, BLOCK_67, BLOCK_72, BLOCK_80, BLOCK_81
  BLOCK_87, BLOCK_ENTRY, CHOICE_POINT, CONTENT_10, CONTENT_13, CONTENT_16, CONTENT_18, CONTENT_24
  CONTENT_27, CONTENT_28, CONTENT_34, CONTENT_42, CONTENT_47, CONTENT_55, CONTENT_61, CONTENT_67
  CONTENT_72, CONTENT_80, CONTENT_81, CONTENT_87, CONTENT_ENTRY, FUNC_DETACH_ITEM_FROM_ARRAY, INSTRUCTION_SEQ, INTERLEAVE_10
  INTERLEAVE_16, INTERLEAVE_24, INTERLEAVE_28, INTERLEAVE_42, INTERLEAVE_55, INTERLEAVE_67, LOOP_10, LOOP_13
  LOOP_16, LOOP_18, OPT_10, OPT_13, OPT_16, OPT_18, OPT_24, OPT_27
  OPT_28, OPT_34, OPT_42, OPT_47, OPT_55, OPT_61, OPT_67, OPT_72
  OPT_80, OPT_81, OPT_87, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_DETACH_ITEM_FROM_ARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
 | LOOP_10
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_16
 | LOOP_13
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
 | LOOP_16
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_10
 | LOOP_18
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 BLOCK_87
BLOCK_28 -> INSTRUCTION_SEQ
      | CONTENT_28 CHOICE_POINT
BLOCK_34 -> INSTRUCTION_SEQ
      | CONTENT_34 BLOCK_42
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 CHOICE_POINT
BLOCK_47 -> INSTRUCTION_SEQ
      | CONTENT_47 BLOCK_55
BLOCK_55 -> INSTRUCTION_SEQ
      | CONTENT_55 CHOICE_POINT
BLOCK_61 -> INSTRUCTION_SEQ
      | CONTENT_61 BLOCK_81
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67 CHOICE_POINT
BLOCK_72 -> INSTRUCTION_SEQ
      | CONTENT_72 BLOCK_80
BLOCK_80 -> BRANCH
      | CONTENT_80 BLOCK_81
... and 3 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_16
 | BLOCK_13 BLOCK_16
      | ... and 18 more alternatives

Loops Rules:
LOOP_10 -> BLOCK_10
      | BLOCK_10 LOOP_10
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 216 more alternatives
LOOP_10 -> BLOCK_10
      | BLOCK_10 LOOP_10
LOOP_13 -> BLOCK_13
      | BLOCK_13 LOOP_13
LOOP_16 -> BLOCK_16
      | BLOCK_16 LOOP_16
LOOP_18 -> BLOCK_18
      | BLOCK_18 LOOP_18

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_16
 | BLOCK_13 BLOCK_16
      | ... and 18 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_34 -> BLOCK_34
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_47 -> BLOCK_47
      | EPSILON
OPT_55 -> BLOCK_55
      | EPSILON
OPT_61 -> BLOCK_61
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
OPT_72 -> BLOCK_72
      | EPSILON
... and 4 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_34 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_47 -> INSTRUCTION_SEQ
     CONTENT_55 -> INSTRUCTION_SEQ
     CONTENT_61 -> INSTRUCTION_SEQ
     CONTENT_67 -> INSTRUCTION_SEQ
     CONTENT_72 -> INSTRUCTION_SEQ
     CONTENT_80 -> INSTRUCTION_SEQ
     ... and 9 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 129: sort_object
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SORT_OBJECT
Production Rules: 68
Non-terminals: 17
Terminals: 12

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 4.80/10.0
Basic Blocks: 4
Choice Points: 4
Loop Patterns: 0
Path Alternatives: 12
Branching Factor: 4.53
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_16, BLOCK_7, BLOCK_8, BLOCK_ENTRY, CHOICE_POINT, CONTENT_16, CONTENT_7, CONTENT_8
  CONTENT_ENTRY, FUNC_SORT_OBJECT, INSTRUCTION_SEQ, INTERLEAVE_ENTRY, OPT_16, OPT_7, OPT_8, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ, LOAD
  OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SORT_OBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16
BLOCK_7 -> BRANCH
      | CONTENT_7 BLOCK_16
BLOCK_8 -> INSTRUCTION_SEQ
      | CONTENT_8 BLOCK_16
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ ALLOCA
      | ... and 38 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_7
      | BLOCK_8
 | BLOCK_7 BLOCK_8
OPT_16 -> BLOCK_16
      | EPSILON
OPT_7 -> BLOCK_7
      | EPSILON
OPT_8 -> BLOCK_8
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_7 -> INSTRUCTION_SEQ
     CONTENT_8 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_ENTRY -> BLOCK_7
      | BLOCK_7 BLOCK_8
 | BLOCK_8
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 130: compare_strings
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_COMPARE_STRINGS
Production Rules: 278
Non-terminals: 59
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 15
Choice Points: 24
Loop Patterns: 12
Path Alternatives: 54
Branching Factor: 4.88
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN, SUB
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_10, BLOCK_13, BLOCK_14, BLOCK_18, BLOCK_19, BLOCK_22, BLOCK_26, BLOCK_27
  BLOCK_37, BLOCK_42, BLOCK_43, BLOCK_44, BLOCK_49, BLOCK_59, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_10, CONTENT_13, CONTENT_14, CONTENT_18, CONTENT_19, CONTENT_22, CONTENT_26, CONTENT_27
  CONTENT_37, CONTENT_42, CONTENT_43, CONTENT_44, CONTENT_49, CONTENT_59, CONTENT_ENTRY, FUNC_COMPARE_STRINGS
  INSTRUCTION_SEQ, INTERLEAVE_10, INTERLEAVE_14, INTERLEAVE_19, INTERLEAVE_27, INTERLEAVE_37, INTERLEAVE_ENTRY, LOOP_27
  LOOP_37, LOOP_43, LOOP_44, OPT_10, OPT_13, OPT_14, OPT_18, OPT_19
  OPT_22, OPT_26, OPT_27, OPT_37, OPT_42, OPT_43, OPT_44, OPT_49
  OPT_59, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN, SUB, ZEXT

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_COMPARE_STRINGS -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_10 -> INSTRUCTION_SEQ
      | CONTENT_10 CHOICE_POINT
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_59
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 CHOICE_POINT
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 BLOCK_59
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_59
BLOCK_26 -> BRANCH
      | CONTENT_26 BLOCK_27
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
 | LOOP_27
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
 | LOOP_37
BLOCK_42 -> INSTRUCTION_SEQ
      | CONTENT_42 BLOCK_59
BLOCK_43 -> BRANCH
      | CONTENT_43 BLOCK_44
 | LOOP_43
BLOCK_44 -> INSTRUCTION_SEQ
      | CONTENT_44 BLOCK_27
 | LOOP_44
BLOCK_49 -> INSTRUCTION_SEQ
      | CONTENT_49 BLOCK_59
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 15 more alternatives

Loops Rules:
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 146 more alternatives
LOOP_27 -> BLOCK_27
      | BLOCK_27 LOOP_27
LOOP_37 -> BLOCK_37
      | BLOCK_37 LOOP_37
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_10
 | BLOCK_13 BLOCK_10
      | ... and 15 more alternatives
OPT_10 -> BLOCK_10
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_26 -> BLOCK_26
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
... and 1 more paths & alternatives rules

Other Rules:
CONTENT_10 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_26 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_10 -> BLOCK_13
      | BLOCK_13 BLOCK_14
 | BLOCK_14
      | ... and 1 more alternatives
... and 5 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 131: sort_list
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_SORT_LIST
Production Rules: 905
Non-terminals: 178
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 44
Choice Points: 80
Loop Patterns: 66
Path Alternatives: 168
Branching Factor: 5.14
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_103, BLOCK_106, BLOCK_109, BLOCK_111, BLOCK_121, BLOCK_123, BLOCK_125, BLOCK_128
  BLOCK_131, BLOCK_139, BLOCK_143, BLOCK_147, BLOCK_151, BLOCK_152, BLOCK_155, BLOCK_158
  BLOCK_160, BLOCK_167, BLOCK_170, BLOCK_173, BLOCK_175, BLOCK_18, BLOCK_182, BLOCK_184
  BLOCK_23, BLOCK_25, BLOCK_26, BLOCK_29, BLOCK_34, BLOCK_46, BLOCK_48, BLOCK_52
  BLOCK_55, BLOCK_60, BLOCK_62, BLOCK_64, BLOCK_67, BLOCK_76, BLOCK_80, BLOCK_81
  BLOCK_84, BLOCK_89, BLOCK_96, BLOCK_ENTRY, CHOICE_POINT, CONTENT_103, CONTENT_106, CONTENT_109
  CONTENT_111, CONTENT_121, CONTENT_123, CONTENT_125, CONTENT_128, CONTENT_131, CONTENT_139, CONTENT_143
  CONTENT_147, CONTENT_151, CONTENT_152, CONTENT_155, CONTENT_158, CONTENT_160, CONTENT_167, CONTENT_170
  CONTENT_173, CONTENT_175, CONTENT_18, CONTENT_182, CONTENT_184, CONTENT_23, CONTENT_25, CONTENT_26
  CONTENT_29, CONTENT_34, CONTENT_46, CONTENT_48, CONTENT_52, CONTENT_55, CONTENT_60, CONTENT_62
  CONTENT_64, CONTENT_67, CONTENT_76, CONTENT_80, CONTENT_81, CONTENT_84, CONTENT_89, CONTENT_96
  CONTENT_ENTRY, FUNC_SORT_LIST, INSTRUCTION_SEQ, INTERLEAVE_103, INTERLEAVE_109, INTERLEAVE_111, INTERLEAVE_125, INTERLEAVE_139
  INTERLEAVE_152, INTERLEAVE_155, INTERLEAVE_167, INTERLEAVE_170, INTERLEAVE_18, INTERLEAVE_26, INTERLEAVE_29, INTERLEAVE_46
  INTERLEAVE_52, INTERLEAVE_55, INTERLEAVE_64, INTERLEAVE_67, INTERLEAVE_81, INTERLEAVE_84, INTERLEAVE_ENTRY, LOOP_103
  LOOP_106, LOOP_109, LOOP_111, LOOP_121, LOOP_123, LOOP_125, LOOP_128, LOOP_131
  LOOP_139, LOOP_143, LOOP_147, LOOP_151, LOOP_26, LOOP_29, LOOP_34, LOOP_46
  LOOP_48, LOOP_64, LOOP_67, LOOP_76, LOOP_80, OPT_103, OPT_106, OPT_109
  OPT_111, OPT_121, OPT_123, OPT_125, OPT_128, OPT_131, OPT_139, OPT_143
  OPT_147, OPT_151, OPT_152, OPT_155, OPT_158, OPT_160, OPT_167, OPT_170
  OPT_173, OPT_175, OPT_18, OPT_182, OPT_184, OPT_23, OPT_25, OPT_26
  OPT_29, OPT_34, OPT_46, OPT_48, OPT_52, OPT_55, OPT_60, OPT_62
  OPT_64, OPT_67, OPT_76, OPT_80, OPT_81, OPT_84, OPT_89, OPT_96
  OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_SORT_LIST -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_103 -> INSTRUCTION_SEQ
      | CONTENT_103 CHOICE_POINT
 | LOOP_103
BLOCK_106 -> INSTRUCTION_SEQ
      | CONTENT_106 BLOCK_109
 | LOOP_106
BLOCK_109 -> INSTRUCTION_SEQ
      | CONTENT_109 CHOICE_POINT
 | LOOP_109
BLOCK_111 -> INSTRUCTION_SEQ
      | CONTENT_111 CHOICE_POINT
 | LOOP_111
BLOCK_121 -> INSTRUCTION_SEQ
      | CONTENT_121 BLOCK_125
 | LOOP_121
BLOCK_123 -> INSTRUCTION_SEQ
      | CONTENT_123 BLOCK_125
 | LOOP_123
BLOCK_125 -> INSTRUCTION_SEQ
      | CONTENT_125 CHOICE_POINT
 | LOOP_125
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128 BLOCK_139
 | LOOP_128
BLOCK_131 -> INSTRUCTION_SEQ
      | CONTENT_131 BLOCK_139
 | LOOP_131
BLOCK_139 -> INSTRUCTION_SEQ
      | CONTENT_139 CHOICE_POINT
 | LOOP_139
BLOCK_143 -> INSTRUCTION_SEQ
      | CONTENT_143 BLOCK_151
 | LOOP_143
BLOCK_147 -> INSTRUCTION_SEQ
      | CONTENT_147 BLOCK_151
 | LOOP_147
BLOCK_151 -> BRANCH
      | CONTENT_151 BLOCK_103
 | LOOP_151
BLOCK_152 -> INSTRUCTION_SEQ
      | CONTENT_152 CHOICE_POINT
BLOCK_155 -> INSTRUCTION_SEQ
      | CONTENT_155 CHOICE_POINT
... and 29 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_18
 | BLOCK_23 BLOCK_18
      | ... and 57 more alternatives

Loops Rules:
LOOP_103 -> BLOCK_103
      | BLOCK_103 LOOP_103
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_109 -> BLOCK_109
      | BLOCK_109 LOOP_109
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_121 -> BLOCK_121
      | BLOCK_121 LOOP_121
LOOP_123 -> BLOCK_123
      | BLOCK_123 LOOP_123
LOOP_125 -> BLOCK_125
      | BLOCK_125 LOOP_125
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_131 -> BLOCK_131
      | BLOCK_131 LOOP_131
LOOP_139 -> BLOCK_139
      | BLOCK_139 LOOP_139
LOOP_143 -> BLOCK_143
      | BLOCK_143 LOOP_143
LOOP_147 -> BLOCK_147
      | BLOCK_147 LOOP_147
LOOP_151 -> BLOCK_151
      | BLOCK_151 LOOP_151
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
LOOP_29 -> BLOCK_29
      | BLOCK_29 LOOP_29
... and 7 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ ALLOCA
      | ... and 476 more alternatives
LOOP_103 -> BLOCK_103
      | BLOCK_103 LOOP_103
LOOP_106 -> BLOCK_106
      | BLOCK_106 LOOP_106
LOOP_109 -> BLOCK_109
      | BLOCK_109 LOOP_109
LOOP_111 -> BLOCK_111
      | BLOCK_111 LOOP_111
LOOP_121 -> BLOCK_121
      | BLOCK_121 LOOP_121
LOOP_123 -> BLOCK_123
      | BLOCK_123 LOOP_123
LOOP_125 -> BLOCK_125
      | BLOCK_125 LOOP_125
LOOP_128 -> BLOCK_128
      | BLOCK_128 LOOP_128
LOOP_131 -> BLOCK_131
      | BLOCK_131 LOOP_131
LOOP_139 -> BLOCK_139
      | BLOCK_139 LOOP_139
LOOP_143 -> BLOCK_143
      | BLOCK_143 LOOP_143
LOOP_147 -> BLOCK_147
      | BLOCK_147 LOOP_147
LOOP_151 -> BLOCK_151
      | BLOCK_151 LOOP_151
LOOP_26 -> BLOCK_26
      | BLOCK_26 LOOP_26
... and 8 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_18
 | BLOCK_23 BLOCK_18
      | ... and 57 more alternatives
OPT_103 -> BLOCK_103
      | EPSILON
OPT_106 -> BLOCK_106
      | EPSILON
OPT_109 -> BLOCK_109
      | EPSILON
OPT_111 -> BLOCK_111
      | EPSILON
OPT_121 -> BLOCK_121
      | EPSILON
OPT_123 -> BLOCK_123
      | EPSILON
OPT_125 -> BLOCK_125
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_131 -> BLOCK_131
      | EPSILON
OPT_139 -> BLOCK_139
      | EPSILON
OPT_143 -> BLOCK_143
      | EPSILON
OPT_147 -> BLOCK_147
      | EPSILON
OPT_151 -> BLOCK_151
      | EPSILON
OPT_152 -> BLOCK_152
      | EPSILON
... and 30 more paths & alternatives rules

Other Rules:
CONTENT_103 -> INSTRUCTION_SEQ
     CONTENT_106 -> INSTRUCTION_SEQ
     CONTENT_109 -> INSTRUCTION_SEQ
     CONTENT_111 -> INSTRUCTION_SEQ
     CONTENT_121 -> INSTRUCTION_SEQ
     CONTENT_123 -> INSTRUCTION_SEQ
     CONTENT_125 -> INSTRUCTION_SEQ
     CONTENT_128 -> INSTRUCTION_SEQ
     CONTENT_131 -> INSTRUCTION_SEQ
     CONTENT_139 -> INSTRUCTION_SEQ
     CONTENT_143 -> INSTRUCTION_SEQ
     CONTENT_147 -> INSTRUCTION_SEQ
     CONTENT_151 -> INSTRUCTION_SEQ
     CONTENT_152 -> INSTRUCTION_SEQ
     CONTENT_155 -> INSTRUCTION_SEQ
     ... and 48 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 132: cJSONUtils_ApplyPatchesCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_APPLYPATCHESCASESENSITIVE
Production Rules: 196
Non-terminals: 44
Terminals: 14

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 11
Choice Points: 16
Loop Patterns: 9
Path Alternatives: 38
Branching Factor: 4.67
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_11, BLOCK_12, BLOCK_15, BLOCK_19, BLOCK_20, BLOCK_23, BLOCK_29, BLOCK_31
  BLOCK_35, BLOCK_36, BLOCK_ENTRY, CHOICE_POINT, CONTENT_11, CONTENT_12, CONTENT_15, CONTENT_19
  CONTENT_20, CONTENT_23, CONTENT_29, CONTENT_31, CONTENT_35, CONTENT_36, CONTENT_ENTRY, FUNC_CJSONUTILS_APPLYPATCHESCASESENSITIVE
  INSTRUCTION_SEQ, INTERLEAVE_12, INTERLEAVE_20, INTERLEAVE_23, INTERLEAVE_ENTRY, LOOP_20, LOOP_23, LOOP_31
  OPT_11, OPT_12, OPT_15, OPT_19, OPT_20, OPT_23, OPT_29, OPT_31
  OPT_35, OPT_36, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP, INSTRUCTION_SEQ
  LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_APPLYPATCHESCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_11 -> INSTRUCTION_SEQ
      | CONTENT_11 BLOCK_36
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 CHOICE_POINT
BLOCK_15 -> INSTRUCTION_SEQ
      | CONTENT_15 BLOCK_19
BLOCK_19 -> BRANCH
      | CONTENT_19 BLOCK_20
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
 | LOOP_20
BLOCK_23 -> INSTRUCTION_SEQ
      | CONTENT_23 CHOICE_POINT
 | LOOP_23
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 BLOCK_36
BLOCK_31 -> INSTRUCTION_SEQ
      | CONTENT_31 BLOCK_20
 | LOOP_31
BLOCK_35 -> INSTRUCTION_SEQ
      | CONTENT_35 BLOCK_36
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_11
 | BLOCK_12 BLOCK_11
      | ... and 9 more alternatives

Loops Rules:
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 101 more alternatives
LOOP_20 -> BLOCK_20
      | BLOCK_20 LOOP_20
LOOP_23 -> BLOCK_23
      | BLOCK_23 LOOP_23
LOOP_31 -> BLOCK_31
      | BLOCK_31 LOOP_31

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_11
 | BLOCK_12 BLOCK_11
      | ... and 9 more alternatives
OPT_11 -> BLOCK_11
      | EPSILON
OPT_12 -> BLOCK_12
      | EPSILON
OPT_15 -> BLOCK_15
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_35 -> BLOCK_35
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_11 -> INSTRUCTION_SEQ
     CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_15 -> INSTRUCTION_SEQ
     CONTENT_19 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_35 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_12 -> BLOCK_15
      | BLOCK_15 BLOCK_19
 | BLOCK_19
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_23
      | BLOCK_23 BLOCK_35
 | BLOCK_35
      | ... and 1 more alternatives
INTERLEAVE_23 -> BLOCK_29
      | BLOCK_29 BLOCK_31
 | BLOCK_31
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_12
      | BLOCK_12 BLOCK_11
 | BLOCK_11
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 133: cJSONUtils_AddPatchToArray
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_ADDPATCHTOARRAY
Production Rules: 38
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 9.50
Estimated Depth: 2
Instruction Types: ADD, ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_ADDPATCHTOARRAY, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_ADDPATCHTOARRAY -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> ADD
      | INSTRUCTION_SEQ ADD
 | INSTRUCTION_SEQ ALLOCA
      | ... and 30 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 134: compose_patch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_COMPOSE_PATCH
Production Rules: 286
Non-terminals: 49
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 13
Choice Points: 24
Loop Patterns: 0
Path Alternatives: 50
Branching Factor: 6.09
Estimated Depth: 7
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_17, BLOCK_20, BLOCK_23, BLOCK_24, BLOCK_28, BLOCK_29, BLOCK_36, BLOCK_41
  BLOCK_64, BLOCK_67, BLOCK_72, BLOCK_76, BLOCK_ENTRY, CHOICE_POINT, CONTENT_17, CONTENT_20
  CONTENT_23, CONTENT_24, CONTENT_28, CONTENT_29, CONTENT_36, CONTENT_41, CONTENT_64, CONTENT_67
  CONTENT_72, CONTENT_76, CONTENT_ENTRY, FUNC_COMPOSE_PATCH, INSTRUCTION_SEQ, INTERLEAVE_17, INTERLEAVE_20, INTERLEAVE_24
  INTERLEAVE_29, INTERLEAVE_64, INTERLEAVE_ENTRY, OPT_17, OPT_20, OPT_23, OPT_24, OPT_28
  OPT_29, OPT_36, OPT_41, OPT_64, OPT_67, OPT_72, OPT_76, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_COMPOSE_PATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_17 -> INSTRUCTION_SEQ
      | CONTENT_17 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
BLOCK_23 -> BRANCH
      | CONTENT_23 BLOCK_76
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 CHOICE_POINT
BLOCK_28 -> BRANCH
      | CONTENT_28 BLOCK_76
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 CHOICE_POINT
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 BLOCK_64
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_64
BLOCK_64 -> INSTRUCTION_SEQ
      | CONTENT_64 CHOICE_POINT
BLOCK_67 -> INSTRUCTION_SEQ
      | CONTENT_67 BLOCK_72
BLOCK_72 -> INSTRUCTION_SEQ
      | CONTENT_72 BLOCK_76
BLOCK_76 -> INSTRUCTION_SEQ
      | CONTENT_76
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_17
 | BLOCK_23 BLOCK_17
      | ... and 15 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 176 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_23
      | BLOCK_17
 | BLOCK_23 BLOCK_17
      | ... and 15 more alternatives
OPT_17 -> BLOCK_17
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_23 -> BLOCK_23
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_28 -> BLOCK_28
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_64 -> BLOCK_64
      | EPSILON
OPT_67 -> BLOCK_67
      | EPSILON
OPT_72 -> BLOCK_72
      | EPSILON
OPT_76 -> BLOCK_76
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_17 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_23 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_28 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_64 -> INSTRUCTION_SEQ
     CONTENT_67 -> INSTRUCTION_SEQ
     CONTENT_72 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_17 -> BLOCK_23
      | BLOCK_23 BLOCK_20
 | BLOCK_20
      | ... and 1 more alternatives
INTERLEAVE_20 -> BLOCK_23
      | BLOCK_23 BLOCK_24
 | BLOCK_24
      | ... and 1 more alternatives
INTERLEAVE_24 -> BLOCK_28
      | BLOCK_28 BLOCK_29
 | BLOCK_29
      | ... and 1 more alternatives
... and 3 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 135: cJSONUtils_GeneratePatches
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GENERATEPATCHES
Production Rules: 100
Non-terminals: 21
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.80/10.0
Basic Blocks: 5
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 18
Branching Factor: 5.26
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_13, BLOCK_19, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_13
  CONTENT_19, CONTENT_9, CONTENT_ENTRY, FUNC_CJSONUTILS_GENERATEPATCHES, INSTRUCTION_SEQ, INTERLEAVE_9, INTERLEAVE_ENTRY, OPT_12
  OPT_13, OPT_19, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GENERATEPATCHES -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_19
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_19
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_9
 | BLOCK_12 BLOCK_9
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 58 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_9
 | BLOCK_12 BLOCK_9
      | ... and 3 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_9 -> BLOCK_12
      | BLOCK_12 BLOCK_13
 | BLOCK_13
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_12
      | BLOCK_12 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 136: create_patches
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CREATE_PATCHES
Production Rules: 1116
Non-terminals: 209
Terminals: 18

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 52
Choice Points: 72
Loop Patterns: 87
Path Alternatives: 176
Branching Factor: 5.47
Estimated Depth: 5
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_100, BLOCK_102, BLOCK_105, BLOCK_107, BLOCK_117, BLOCK_126, BLOCK_127, BLOCK_130
  BLOCK_133, BLOCK_135, BLOCK_142, BLOCK_146, BLOCK_147, BLOCK_150, BLOCK_154, BLOCK_160
  BLOCK_162, BLOCK_173, BLOCK_176, BLOCK_179, BLOCK_181, BLOCK_184, BLOCK_185, BLOCK_188
  BLOCK_189, BLOCK_198, BLOCK_199, BLOCK_202, BLOCK_23, BLOCK_236, BLOCK_239, BLOCK_248
  BLOCK_258, BLOCK_259, BLOCK_26, BLOCK_260, BLOCK_261, BLOCK_262, BLOCK_27, BLOCK_37
  BLOCK_41, BLOCK_46, BLOCK_54, BLOCK_63, BLOCK_67, BLOCK_68, BLOCK_77, BLOCK_81
  BLOCK_82, BLOCK_94, BLOCK_97, BLOCK_ENTRY, CHOICE_POINT, CONTENT_100, CONTENT_102, CONTENT_105
  CONTENT_107, CONTENT_117, CONTENT_126, CONTENT_127, CONTENT_130, CONTENT_133, CONTENT_135, CONTENT_142
  CONTENT_146, CONTENT_147, CONTENT_150, CONTENT_154, CONTENT_160, CONTENT_162, CONTENT_173, CONTENT_176
  CONTENT_179, CONTENT_181, CONTENT_184, CONTENT_185, CONTENT_188, CONTENT_189, CONTENT_198, CONTENT_199
  CONTENT_202, CONTENT_23, CONTENT_236, CONTENT_239, CONTENT_248, CONTENT_258, CONTENT_259, CONTENT_26
  CONTENT_260, CONTENT_261, CONTENT_262, CONTENT_27, CONTENT_37, CONTENT_41, CONTENT_46, CONTENT_54
  CONTENT_63, CONTENT_67, CONTENT_68, CONTENT_77, CONTENT_81, CONTENT_82, CONTENT_94, CONTENT_97
  CONTENT_ENTRY, FUNC_CREATE_PATCHES, INSTRUCTION_SEQ, INTERLEAVE_100, INTERLEAVE_102, INTERLEAVE_127, INTERLEAVE_130, INTERLEAVE_147
  INTERLEAVE_173, INTERLEAVE_179, INTERLEAVE_181, INTERLEAVE_185, INTERLEAVE_199, INTERLEAVE_23, INTERLEAVE_236, INTERLEAVE_27
  INTERLEAVE_46, INTERLEAVE_54, INTERLEAVE_68, INTERLEAVE_94, INTERLEAVE_ENTRY, LOOP_100, LOOP_102, LOOP_107
  LOOP_117, LOOP_127, LOOP_130, LOOP_135, LOOP_142, LOOP_147, LOOP_150, LOOP_154
  LOOP_173, LOOP_176, LOOP_179, LOOP_181, LOOP_184, LOOP_185, LOOP_188, LOOP_189
  LOOP_198, LOOP_199, LOOP_202, LOOP_236, LOOP_239, LOOP_248, LOOP_258, LOOP_259
  LOOP_94, LOOP_97, OPT_100, OPT_102, OPT_105, OPT_107, OPT_117, OPT_126
  OPT_127, OPT_130, OPT_133, OPT_135, OPT_142, OPT_146, OPT_147, OPT_150
  OPT_154, OPT_160, OPT_162, OPT_173, OPT_176, OPT_179, OPT_181, OPT_184
  OPT_185, OPT_188, OPT_189, OPT_198, OPT_199, OPT_202, OPT_23, OPT_236
  OPT_239, OPT_248, OPT_258, OPT_259, OPT_26, OPT_260, OPT_261, OPT_262
  OPT_27, OPT_37, OPT_41, OPT_46, OPT_54, OPT_63, OPT_67, OPT_68
  OPT_77, OPT_81, OPT_82, OPT_94, OPT_97, OPT_ENTRY, OP_I32, OP_]
  OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, AND, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP
  ICMP, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN, SWITCH

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CREATE_PATCHES -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_100 -> INSTRUCTION_SEQ
      | CONTENT_100 CHOICE_POINT
 | LOOP_100
BLOCK_102 -> INSTRUCTION_SEQ
      | CONTENT_102 CHOICE_POINT
 | LOOP_102
BLOCK_105 -> INSTRUCTION_SEQ
      | CONTENT_105 BLOCK_262
BLOCK_107 -> INSTRUCTION_SEQ
      | CONTENT_107 BLOCK_117
 | LOOP_107
BLOCK_117 -> INSTRUCTION_SEQ
      | CONTENT_117 BLOCK_94
 | LOOP_117
BLOCK_126 -> BRANCH
      | CONTENT_126 BLOCK_127
BLOCK_127 -> INSTRUCTION_SEQ
      | CONTENT_127 CHOICE_POINT
 | LOOP_127
BLOCK_130 -> INSTRUCTION_SEQ
      | CONTENT_130 CHOICE_POINT
 | LOOP_130
BLOCK_133 -> INSTRUCTION_SEQ
      | CONTENT_133 BLOCK_262
BLOCK_135 -> INSTRUCTION_SEQ
      | CONTENT_135 BLOCK_142
 | LOOP_135
BLOCK_142 -> INSTRUCTION_SEQ
      | CONTENT_142 BLOCK_127
 | LOOP_142
BLOCK_146 -> BRANCH
      | CONTENT_146 BLOCK_147
BLOCK_147 -> INSTRUCTION_SEQ
      | CONTENT_147 CHOICE_POINT
 | LOOP_147
BLOCK_150 -> INSTRUCTION_SEQ
      | CONTENT_150 BLOCK_154
 | LOOP_150
BLOCK_154 -> INSTRUCTION_SEQ
      | CONTENT_154 BLOCK_147
 | LOOP_154
... and 37 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_26
      | BLOCK_23
 | BLOCK_26 BLOCK_23
      | ... and 51 more alternatives

Loops Rules:
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_102 -> BLOCK_102
      | BLOCK_102 LOOP_102
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_130 -> BLOCK_130
      | BLOCK_130 LOOP_130
LOOP_135 -> BLOCK_135
      | BLOCK_135 LOOP_135
LOOP_142 -> BLOCK_142
      | BLOCK_142 LOOP_142
LOOP_147 -> BLOCK_147
      | BLOCK_147 LOOP_147
LOOP_150 -> BLOCK_150
      | BLOCK_150 LOOP_150
LOOP_154 -> BLOCK_154
      | BLOCK_154 LOOP_154
LOOP_173 -> BLOCK_173
      | BLOCK_173 LOOP_173
LOOP_176 -> BLOCK_176
      | BLOCK_176 LOOP_176
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
LOOP_181 -> BLOCK_181
      | BLOCK_181 LOOP_181
... and 14 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 641 more alternatives
LOOP_100 -> BLOCK_100
      | BLOCK_100 LOOP_100
LOOP_102 -> BLOCK_102
      | BLOCK_102 LOOP_102
LOOP_107 -> BLOCK_107
      | BLOCK_107 LOOP_107
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_127 -> BLOCK_127
      | BLOCK_127 LOOP_127
LOOP_130 -> BLOCK_130
      | BLOCK_130 LOOP_130
LOOP_135 -> BLOCK_135
      | BLOCK_135 LOOP_135
LOOP_142 -> BLOCK_142
      | BLOCK_142 LOOP_142
LOOP_147 -> BLOCK_147
      | BLOCK_147 LOOP_147
LOOP_150 -> BLOCK_150
      | BLOCK_150 LOOP_150
LOOP_154 -> BLOCK_154
      | BLOCK_154 LOOP_154
LOOP_173 -> BLOCK_173
      | BLOCK_173 LOOP_173
LOOP_176 -> BLOCK_176
      | BLOCK_176 LOOP_176
LOOP_179 -> BLOCK_179
      | BLOCK_179 LOOP_179
... and 15 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_26
      | BLOCK_23
 | BLOCK_26 BLOCK_23
      | ... and 51 more alternatives
OPT_100 -> BLOCK_100
      | EPSILON
OPT_102 -> BLOCK_102
      | EPSILON
OPT_105 -> BLOCK_105
      | EPSILON
OPT_107 -> BLOCK_107
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_126 -> BLOCK_126
      | EPSILON
OPT_127 -> BLOCK_127
      | EPSILON
OPT_130 -> BLOCK_130
      | EPSILON
OPT_133 -> BLOCK_133
      | EPSILON
OPT_135 -> BLOCK_135
      | EPSILON
OPT_142 -> BLOCK_142
      | EPSILON
OPT_146 -> BLOCK_146
      | EPSILON
OPT_147 -> BLOCK_147
      | EPSILON
OPT_150 -> BLOCK_150
      | EPSILON
... and 38 more paths & alternatives rules

Other Rules:
CONTENT_100 -> INSTRUCTION_SEQ
     CONTENT_102 -> INSTRUCTION_SEQ
     CONTENT_105 -> INSTRUCTION_SEQ
     CONTENT_107 -> INSTRUCTION_SEQ
     CONTENT_117 -> INSTRUCTION_SEQ
     CONTENT_126 -> INSTRUCTION_SEQ
     CONTENT_127 -> INSTRUCTION_SEQ
     CONTENT_130 -> INSTRUCTION_SEQ
     CONTENT_133 -> INSTRUCTION_SEQ
     CONTENT_135 -> INSTRUCTION_SEQ
     CONTENT_142 -> INSTRUCTION_SEQ
     CONTENT_146 -> INSTRUCTION_SEQ
     CONTENT_147 -> INSTRUCTION_SEQ
     CONTENT_150 -> INSTRUCTION_SEQ
     CONTENT_154 -> INSTRUCTION_SEQ
     ... and 53 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 137: cJSONUtils_GeneratePatchesCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GENERATEPATCHESCASESENSITIVE
Production Rules: 100
Non-terminals: 21
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 6.80/10.0
Basic Blocks: 5
Choice Points: 8
Loop Patterns: 0
Path Alternatives: 18
Branching Factor: 5.26
Estimated Depth: 6
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_13, BLOCK_19, BLOCK_9, BLOCK_ENTRY, CHOICE_POINT, CONTENT_12, CONTENT_13
  CONTENT_19, CONTENT_9, CONTENT_ENTRY, FUNC_CJSONUTILS_GENERATEPATCHESCASESENSITIVE, INSTRUCTION_SEQ, INTERLEAVE_9, INTERLEAVE_ENTRY, OPT_12
  OPT_13, OPT_19, OPT_9, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GENERATEPATCHESCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_19
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 BLOCK_19
BLOCK_19 -> INSTRUCTION_SEQ
      | CONTENT_19
BLOCK_9 -> INSTRUCTION_SEQ
      | CONTENT_9 CHOICE_POINT
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_9
 | BLOCK_12 BLOCK_9
      | ... and 3 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 58 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_12
      | BLOCK_9
 | BLOCK_12 BLOCK_9
      | ... and 3 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_19 -> BLOCK_19
      | EPSILON
OPT_9 -> BLOCK_9
      | EPSILON
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_9 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_9 -> BLOCK_12
      | BLOCK_12 BLOCK_13
 | BLOCK_13
      | ... and 1 more alternatives
INTERLEAVE_ENTRY -> BLOCK_12
      | BLOCK_12 BLOCK_9
 | BLOCK_9
      | ... and 1 more alternatives

--------------------------------------------------------------------------------

================================================================================
FUNCTION 138: cJSONUtils_SortObject
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_SORTOBJECT
Production Rules: 20
Non-terminals: 5
Terminals: 8

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.00
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_SORTOBJECT, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_SORTOBJECT -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ ALLOCA
      | ... and 12 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 139: cJSONUtils_SortObjectCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_SORTOBJECTCASESENSITIVE
Production Rules: 20
Non-terminals: 5
Terminals: 8

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 5.00
Estimated Depth: 2
Instruction Types: ALLOCA, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_SORTOBJECTCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_SORTOBJECTCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OR
      | INSTRUCTION_SEQ OR
 | INSTRUCTION_SEQ ALLOCA
      | ... and 12 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 140: cJSONUtils_MergePatch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_MERGEPATCH
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_MERGEPATCH, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_MERGEPATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 141: merge_patch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_MERGE_PATCH
Production Rules: 418
Non-terminals: 83
Terminals: 15

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 20
Choice Points: 28
Loop Patterns: 36
Path Alternatives: 68
Branching Factor: 5.16
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Control Flow Convergence, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_14, BLOCK_18, BLOCK_22, BLOCK_25, BLOCK_29, BLOCK_32, BLOCK_36, BLOCK_39
  BLOCK_44, BLOCK_49, BLOCK_50, BLOCK_53, BLOCK_59, BLOCK_65, BLOCK_72, BLOCK_74
  BLOCK_81, BLOCK_85, BLOCK_87, BLOCK_ENTRY, CHOICE_POINT, CONTENT_14, CONTENT_18, CONTENT_22
  CONTENT_25, CONTENT_29, CONTENT_32, CONTENT_36, CONTENT_39, CONTENT_44, CONTENT_49, CONTENT_50
  CONTENT_53, CONTENT_59, CONTENT_65, CONTENT_72, CONTENT_74, CONTENT_81, CONTENT_85, CONTENT_87
  CONTENT_ENTRY, FUNC_MERGE_PATCH, INSTRUCTION_SEQ, INTERLEAVE_18, INTERLEAVE_29, INTERLEAVE_32, INTERLEAVE_36, INTERLEAVE_50
  INTERLEAVE_65, INTERLEAVE_ENTRY, LOOP_29, LOOP_32, LOOP_36, LOOP_39, LOOP_44, LOOP_49
  LOOP_50, LOOP_53, LOOP_59, LOOP_65, LOOP_74, LOOP_81, OPT_14, OPT_18
  OPT_22, OPT_25, OPT_29, OPT_32, OPT_36, OPT_39, OPT_44, OPT_49
  OPT_50, OPT_53, OPT_59, OPT_65, OPT_72, OPT_74, OPT_81, OPT_85
  OPT_87, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_MERGE_PATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_87
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 BLOCK_25
BLOCK_25 -> INSTRUCTION_SEQ
      | CONTENT_25 BLOCK_29
BLOCK_29 -> INSTRUCTION_SEQ
      | CONTENT_29 CHOICE_POINT
 | LOOP_29
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
 | LOOP_32
BLOCK_36 -> INSTRUCTION_SEQ
      | CONTENT_36 CHOICE_POINT
 | LOOP_36
BLOCK_39 -> INSTRUCTION_SEQ
      | CONTENT_39 BLOCK_49
 | LOOP_39
BLOCK_44 -> INSTRUCTION_SEQ
      | CONTENT_44 BLOCK_49
 | LOOP_44
BLOCK_49 -> BRANCH
      | CONTENT_49 BLOCK_81
 | LOOP_49
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 CHOICE_POINT
 | LOOP_50
BLOCK_53 -> INSTRUCTION_SEQ
      | CONTENT_53 BLOCK_65
 | LOOP_53
BLOCK_59 -> INSTRUCTION_SEQ
      | CONTENT_59 BLOCK_65
 | LOOP_59
BLOCK_65 -> INSTRUCTION_SEQ
      | CONTENT_65 CHOICE_POINT
 | LOOP_65
BLOCK_72 -> INSTRUCTION_SEQ
      | CONTENT_72 BLOCK_87
... and 5 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_18
      | BLOCK_14
 | BLOCK_18 BLOCK_14
      | ... and 18 more alternatives

Loops Rules:
LOOP_29 -> BLOCK_29
      | BLOCK_29 LOOP_29
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_36 -> BLOCK_36
      | BLOCK_36 LOOP_36
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53
LOOP_59 -> BLOCK_59
      | BLOCK_59 LOOP_59
LOOP_65 -> BLOCK_65
      | BLOCK_65 LOOP_65
LOOP_74 -> BLOCK_74
      | BLOCK_74 LOOP_74
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 230 more alternatives
LOOP_29 -> BLOCK_29
      | BLOCK_29 LOOP_29
LOOP_32 -> BLOCK_32
      | BLOCK_32 LOOP_32
LOOP_36 -> BLOCK_36
      | BLOCK_36 LOOP_36
LOOP_39 -> BLOCK_39
      | BLOCK_39 LOOP_39
LOOP_44 -> BLOCK_44
      | BLOCK_44 LOOP_44
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_50 -> BLOCK_50
      | BLOCK_50 LOOP_50
LOOP_53 -> BLOCK_53
      | BLOCK_53 LOOP_53
LOOP_59 -> BLOCK_59
      | BLOCK_59 LOOP_59
LOOP_65 -> BLOCK_65
      | BLOCK_65 LOOP_65
LOOP_74 -> BLOCK_74
      | BLOCK_74 LOOP_74
LOOP_81 -> BLOCK_81
      | BLOCK_81 LOOP_81

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_18
      | BLOCK_14
 | BLOCK_18 BLOCK_14
      | ... and 18 more alternatives
OPT_14 -> BLOCK_14
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_25 -> BLOCK_25
      | EPSILON
OPT_29 -> BLOCK_29
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_36 -> BLOCK_36
      | EPSILON
OPT_39 -> BLOCK_39
      | EPSILON
OPT_44 -> BLOCK_44
      | EPSILON
OPT_49 -> BLOCK_49
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_53 -> BLOCK_53
      | EPSILON
OPT_59 -> BLOCK_59
      | EPSILON
OPT_65 -> BLOCK_65
      | EPSILON
... and 6 more paths & alternatives rules

Other Rules:
CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_25 -> INSTRUCTION_SEQ
     CONTENT_29 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_36 -> INSTRUCTION_SEQ
     CONTENT_39 -> INSTRUCTION_SEQ
     CONTENT_44 -> INSTRUCTION_SEQ
     CONTENT_49 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_53 -> INSTRUCTION_SEQ
     CONTENT_59 -> INSTRUCTION_SEQ
     CONTENT_65 -> INSTRUCTION_SEQ
     CONTENT_72 -> INSTRUCTION_SEQ
     ... and 11 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 142: cJSONUtils_MergePatchCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_MERGEPATCHCASESENSITIVE
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_MERGEPATCHCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_MERGEPATCHCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 143: cJSONUtils_GenerateMergePatch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GENERATEMERGEPATCH
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_GENERATEMERGEPATCH, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GENERATEMERGEPATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 144: generate_merge_patch
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_GENERATE_MERGE_PATCH
Production Rules: 612
Non-terminals: 124
Terminals: 16

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 10.00/10.0
Basic Blocks: 30
Choice Points: 48
Loop Patterns: 54
Path Alternatives: 108
Branching Factor: 5.02
Estimated Depth: 6
Instruction Types: ADD, ALLOCA, BRANCH, CALL, ICMP, LOAD, PHI, RETURN
Control Flow Patterns: Conditional Branching, Iterative Loops, Sequential Execution, Control Flow Convergence, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_101, BLOCK_110, BLOCK_117, BLOCK_118, BLOCK_119, BLOCK_124, BLOCK_126, BLOCK_128
  BLOCK_14, BLOCK_16, BLOCK_20, BLOCK_24, BLOCK_27, BLOCK_41, BLOCK_42, BLOCK_43
  BLOCK_46, BLOCK_49, BLOCK_51, BLOCK_54, BLOCK_57, BLOCK_65, BLOCK_66, BLOCK_67
  BLOCK_68, BLOCK_71, BLOCK_81, BLOCK_84, BLOCK_95, BLOCK_ENTRY, CHOICE_POINT, CONTENT_101
  CONTENT_110, CONTENT_117, CONTENT_118, CONTENT_119, CONTENT_124, CONTENT_126, CONTENT_128, CONTENT_14
  CONTENT_16, CONTENT_20, CONTENT_24, CONTENT_27, CONTENT_41, CONTENT_42, CONTENT_43, CONTENT_46
  CONTENT_49, CONTENT_51, CONTENT_54, CONTENT_57, CONTENT_65, CONTENT_66, CONTENT_67, CONTENT_68
  CONTENT_71, CONTENT_81, CONTENT_84, CONTENT_95, CONTENT_ENTRY, FUNC_GENERATE_MERGE_PATCH, INSTRUCTION_SEQ, INTERLEAVE_119
  INTERLEAVE_16, INTERLEAVE_20, INTERLEAVE_27, INTERLEAVE_43, INTERLEAVE_49, INTERLEAVE_51, INTERLEAVE_54, INTERLEAVE_68
  INTERLEAVE_81, INTERLEAVE_95, INTERLEAVE_ENTRY, LOOP_101, LOOP_110, LOOP_117, LOOP_118, LOOP_43
  LOOP_46, LOOP_49, LOOP_51, LOOP_54, LOOP_57, LOOP_65, LOOP_66, LOOP_67
  LOOP_68, LOOP_71, LOOP_81, LOOP_84, LOOP_95, OPT_101, OPT_110, OPT_117
  OPT_118, OPT_119, OPT_124, OPT_126, OPT_128, OPT_14, OPT_16, OPT_20
  OPT_24, OPT_27, OPT_41, OPT_42, OPT_43, OPT_46, OPT_49, OPT_51
  OPT_54, OPT_57, OPT_65, OPT_66, OPT_67, OPT_68, OPT_71, OPT_81
  OPT_84, OPT_95, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ADD, ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, GEP, ICMP
  INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, PHI, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_GENERATE_MERGE_PATCH -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_101 -> INSTRUCTION_SEQ
      | CONTENT_101 BLOCK_110
 | LOOP_101
BLOCK_110 -> INSTRUCTION_SEQ
      | CONTENT_110 BLOCK_117
 | LOOP_110
BLOCK_117 -> BRANCH
      | CONTENT_117 BLOCK_118
 | LOOP_117
BLOCK_118 -> BRANCH
      | CONTENT_118 BLOCK_43
 | LOOP_118
BLOCK_119 -> INSTRUCTION_SEQ
      | CONTENT_119 CHOICE_POINT
BLOCK_124 -> INSTRUCTION_SEQ
      | CONTENT_124 BLOCK_128
BLOCK_126 -> INSTRUCTION_SEQ
      | CONTENT_126 BLOCK_128
BLOCK_128 -> INSTRUCTION_SEQ
      | CONTENT_128
BLOCK_14 -> INSTRUCTION_SEQ
      | CONTENT_14 BLOCK_128
BLOCK_16 -> INSTRUCTION_SEQ
      | CONTENT_16 CHOICE_POINT
BLOCK_20 -> INSTRUCTION_SEQ
      | CONTENT_20 CHOICE_POINT
BLOCK_24 -> INSTRUCTION_SEQ
      | CONTENT_24 BLOCK_128
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
BLOCK_41 -> INSTRUCTION_SEQ
      | CONTENT_41 BLOCK_128
BLOCK_42 -> BRANCH
      | CONTENT_42 BLOCK_43
... and 15 more basic blocks rules

Control Flow Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_16
 | BLOCK_14 BLOCK_16
      | ... and 33 more alternatives

Loops Rules:
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_110 -> BLOCK_110
      | BLOCK_110 LOOP_110
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_57 -> BLOCK_57
      | BLOCK_57 LOOP_57
LOOP_65 -> BLOCK_65
      | BLOCK_65 LOOP_65
LOOP_66 -> BLOCK_66
      | BLOCK_66 LOOP_66
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
LOOP_71 -> BLOCK_71
      | BLOCK_71 LOOP_71
... and 3 more loops rules

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 321 more alternatives
LOOP_101 -> BLOCK_101
      | BLOCK_101 LOOP_101
LOOP_110 -> BLOCK_110
      | BLOCK_110 LOOP_110
LOOP_117 -> BLOCK_117
      | BLOCK_117 LOOP_117
LOOP_118 -> BLOCK_118
      | BLOCK_118 LOOP_118
LOOP_43 -> BLOCK_43
      | BLOCK_43 LOOP_43
LOOP_46 -> BLOCK_46
      | BLOCK_46 LOOP_46
LOOP_49 -> BLOCK_49
      | BLOCK_49 LOOP_49
LOOP_51 -> BLOCK_51
      | BLOCK_51 LOOP_51
LOOP_54 -> BLOCK_54
      | BLOCK_54 LOOP_54
LOOP_57 -> BLOCK_57
      | BLOCK_57 LOOP_57
LOOP_65 -> BLOCK_65
      | BLOCK_65 LOOP_65
LOOP_66 -> BLOCK_66
      | BLOCK_66 LOOP_66
LOOP_67 -> BLOCK_67
      | BLOCK_67 LOOP_67
LOOP_68 -> BLOCK_68
      | BLOCK_68 LOOP_68
... and 4 more instructions rules

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_14
      | BLOCK_16
 | BLOCK_14 BLOCK_16
      | ... and 33 more alternatives
OPT_101 -> BLOCK_101
      | EPSILON
OPT_110 -> BLOCK_110
      | EPSILON
OPT_117 -> BLOCK_117
      | EPSILON
OPT_118 -> BLOCK_118
      | EPSILON
OPT_119 -> BLOCK_119
      | EPSILON
OPT_124 -> BLOCK_124
      | EPSILON
OPT_126 -> BLOCK_126
      | EPSILON
OPT_128 -> BLOCK_128
      | EPSILON
OPT_14 -> BLOCK_14
      | EPSILON
OPT_16 -> BLOCK_16
      | EPSILON
OPT_20 -> BLOCK_20
      | EPSILON
OPT_24 -> BLOCK_24
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
... and 16 more paths & alternatives rules

Other Rules:
CONTENT_101 -> INSTRUCTION_SEQ
     CONTENT_110 -> INSTRUCTION_SEQ
     CONTENT_117 -> INSTRUCTION_SEQ
     CONTENT_118 -> INSTRUCTION_SEQ
     CONTENT_119 -> INSTRUCTION_SEQ
     CONTENT_124 -> INSTRUCTION_SEQ
     CONTENT_126 -> INSTRUCTION_SEQ
     CONTENT_14 -> INSTRUCTION_SEQ
     CONTENT_16 -> INSTRUCTION_SEQ
     CONTENT_20 -> INSTRUCTION_SEQ
     CONTENT_24 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     ... and 26 more other rules

--------------------------------------------------------------------------------

================================================================================
FUNCTION 145: cJSONUtils_GenerateMergePatchCaseSensitive
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_CJSONUTILS_GENERATEMERGEPATCHCASESENSITIVE
Production Rules: 26
Non-terminals: 5
Terminals: 10

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 0.60/10.0
Basic Blocks: 1
Choice Points: 0
Loop Patterns: 0
Path Alternatives: 2
Branching Factor: 6.50
Estimated Depth: 2
Instruction Types: ALLOCA, CALL, LOAD, RETURN
Control Flow Patterns: Sequential Execution

NON-TERMINALS
----------------------------------------
  BLOCK_ENTRY, FUNC_CJSONUTILS_GENERATEMERGEPATCHCASESENSITIVE, INSTRUCTION_SEQ, OPT_ENTRY, OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, CALL, CONTENT_ENTRY, EPSILON, INSTRUCTION_SEQ, LOAD, OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_CJSONUTILS_GENERATEMERGEPATCHCASESENSITIVE -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 18 more alternatives

Paths & Alternatives Rules:
OPT_ENTRY -> BLOCK_ENTRY
      | EPSILON

--------------------------------------------------------------------------------

================================================================================
FUNCTION 146: main
================================================================================

GRAMMAR OVERVIEW
----------------------------------------
Start Symbol: FUNC_MAIN
Production Rules: 271
Non-terminals: 57
Terminals: 13

FUZZING ANALYTICS
----------------------------------------
Fuzzing Readiness Score: 8.00/10.0
Basic Blocks: 15
Choice Points: 32
Loop Patterns: 0
Path Alternatives: 62
Branching Factor: 4.93
Estimated Depth: 7
Instruction Types: ALLOCA, BRANCH, CALL, ICMP, LOAD, RETURN
Control Flow Patterns: Conditional Branching, Sequential Execution, Complex Flow Interleaving

NON-TERMINALS
----------------------------------------
  BLOCK_12, BLOCK_13, BLOCK_18, BLOCK_22, BLOCK_27, BLOCK_31, BLOCK_32, BLOCK_37
  BLOCK_41, BLOCK_42, BLOCK_43, BLOCK_48, BLOCK_50, BLOCK_52, BLOCK_ENTRY, CHOICE_POINT
  CONTENT_12, CONTENT_13, CONTENT_18, CONTENT_22, CONTENT_27, CONTENT_31, CONTENT_32, CONTENT_37
  CONTENT_41, CONTENT_42, CONTENT_43, CONTENT_48, CONTENT_50, CONTENT_52, CONTENT_ENTRY, FUNC_MAIN
  INSTRUCTION_SEQ, INTERLEAVE_13, INTERLEAVE_18, INTERLEAVE_22, INTERLEAVE_27, INTERLEAVE_32, INTERLEAVE_37, INTERLEAVE_43
  INTERLEAVE_ENTRY, OPT_12, OPT_13, OPT_18, OPT_22, OPT_27, OPT_31, OPT_32
  OPT_37, OPT_41, OPT_42, OPT_43, OPT_48, OPT_50, OPT_52, OPT_ENTRY
  OP_}

TERMINALS
----------------------------------------
  ALLOCA, BLOCK_ENTRY, BRANCH, CALL, CHOICE_POINT, CONTENT_ENTRY, EPSILON, ICMP, INSTRUCTION_SEQ, LOAD
  OP_DEFINE, OR, RETURN

PRODUCTION RULES
----------------------------------------

Function Entry Rules:
FUNC_MAIN -> BLOCK_ENTRY
     
Basic Blocks Rules:
BLOCK_12 -> INSTRUCTION_SEQ
      | CONTENT_12 BLOCK_52
BLOCK_13 -> INSTRUCTION_SEQ
      | CONTENT_13 CHOICE_POINT
BLOCK_18 -> INSTRUCTION_SEQ
      | CONTENT_18 CHOICE_POINT
BLOCK_22 -> INSTRUCTION_SEQ
      | CONTENT_22 CHOICE_POINT
BLOCK_27 -> INSTRUCTION_SEQ
      | CONTENT_27 CHOICE_POINT
BLOCK_31 -> BRANCH
      | CONTENT_31 BLOCK_32
BLOCK_32 -> INSTRUCTION_SEQ
      | CONTENT_32 CHOICE_POINT
BLOCK_37 -> INSTRUCTION_SEQ
      | CONTENT_37 CHOICE_POINT
BLOCK_41 -> BRANCH
      | CONTENT_41 BLOCK_42
BLOCK_42 -> BRANCH
      | CONTENT_42 BLOCK_43
BLOCK_43 -> INSTRUCTION_SEQ
      | CONTENT_43 CHOICE_POINT
BLOCK_48 -> INSTRUCTION_SEQ
      | CONTENT_48 BLOCK_50
BLOCK_50 -> INSTRUCTION_SEQ
      | CONTENT_50 BLOCK_52
BLOCK_52 -> INSTRUCTION_SEQ
      | CONTENT_52
BLOCK_ENTRY -> INSTRUCTION_SEQ
      | CONTENT_ENTRY CHOICE_POINT

Control Flow Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_12
 | BLOCK_13 BLOCK_12
      | ... and 21 more alternatives

Instructions Rules:
INSTRUCTION_SEQ -> OP_DEFINE
      | INSTRUCTION_SEQ OP_DEFINE
 | INSTRUCTION_SEQ ALLOCA
      | ... and 137 more alternatives

Paths & Alternatives Rules:
CHOICE_POINT -> BLOCK_13
      | BLOCK_12
 | BLOCK_13 BLOCK_12
      | ... and 21 more alternatives
OPT_12 -> BLOCK_12
      | EPSILON
OPT_13 -> BLOCK_13
      | EPSILON
OPT_18 -> BLOCK_18
      | EPSILON
OPT_22 -> BLOCK_22
      | EPSILON
OPT_27 -> BLOCK_27
      | EPSILON
OPT_31 -> BLOCK_31
      | EPSILON
OPT_32 -> BLOCK_32
      | EPSILON
OPT_37 -> BLOCK_37
      | EPSILON
OPT_41 -> BLOCK_41
      | EPSILON
OPT_42 -> BLOCK_42
      | EPSILON
OPT_43 -> BLOCK_43
      | EPSILON
OPT_48 -> BLOCK_48
      | EPSILON
OPT_50 -> BLOCK_50
      | EPSILON
OPT_52 -> BLOCK_52
      | EPSILON
... and 1 more paths & alternatives rules

Other Rules:
CONTENT_12 -> INSTRUCTION_SEQ
     CONTENT_13 -> INSTRUCTION_SEQ
     CONTENT_18 -> INSTRUCTION_SEQ
     CONTENT_22 -> INSTRUCTION_SEQ
     CONTENT_27 -> INSTRUCTION_SEQ
     CONTENT_31 -> INSTRUCTION_SEQ
     CONTENT_32 -> INSTRUCTION_SEQ
     CONTENT_37 -> INSTRUCTION_SEQ
     CONTENT_41 -> INSTRUCTION_SEQ
     CONTENT_42 -> INSTRUCTION_SEQ
     CONTENT_43 -> INSTRUCTION_SEQ
     CONTENT_48 -> INSTRUCTION_SEQ
     CONTENT_50 -> INSTRUCTION_SEQ
     CONTENT_ENTRY -> INSTRUCTION_SEQ
     INTERLEAVE_13 -> BLOCK_18
      | BLOCK_18 BLOCK_43
 | BLOCK_43
      | ... and 1 more alternatives
... and 7 more other rules

--------------------------------------------------------------------------------

================================================================================
END OF GRAMMAR DUMP
================================================================================
